import{a as c}from"./chunk-IGED4TOA.js";import{M as l,aa as n,ba as m}from"./chunk-Q6UHPJXR.js";import{N as a,R as s,sa as r,t as o}from"./chunk-7TD4AYMG.js";var p=class i extends c{collectionPath="/lap-simulator-configs";collectionRef=m(this.firestore,this.collectionPath);lapSimulatorConfig=r(void 0);constructor(){super(),this.getAll().pipe(l()).subscribe(e=>{e.length>0&&this.lapSimulatorConfig.set(e.at(0))})}updateSimulatedLaps(e){let t=this.lapSimulatorConfig();t&&(t.simulatedLaps=e,this.updateDataWithMessage(t.id,t,"simulated laps"))}updateToOvertakeLostTime(e){let t=this.lapSimulatorConfig();t&&(t.toOvertakeLostTimeMilliseconds=e,this.updateDataWithMessage(t.id,t,"to overtake lost time"))}updateBeOvertakenLostTime(e){let t=this.lapSimulatorConfig();t&&(t.beOvertakenLostTimeMilliseconds=e,this.updateDataWithMessage(t.id,t,"be overtaken lost time"))}updateOvertakeTimeThreshold(e){let t=this.lapSimulatorConfig();t&&(t.overtakeThresholdMilliseconds=e,this.updateDataWithMessage(t.id,t,"overtake time threshold"))}updateReferenceRaceNumber(e){let t=this.lapSimulatorConfig();t&&(t.referenceRaceNumber=e,this.updateDataWithMessage(t.id,t,"reference race number"))}updateNextPitMilliseconds(e){let t=this.lapSimulatorConfig();t&&(t.nextPitMilliseconds=e,this.updateDataWithMessage(t.id,t,"next pit milliseconds"))}updateTimeLostThroughPitMilliseconds(e){let t=this.lapSimulatorConfig();t&&(t.timeLostThroughPitMilliseconds=e,this.updateDataWithMessage(t.id,t,"time lost through pit milliseconds"))}getAll(){return n(this.collectionRef).pipe(a(this.destroyed),o(e=>e.map(t=>t).filter(t=>!t.deleted)))}static \u0275fac=function(t){return new(t||i)};static \u0275prov=s({token:i,factory:i.\u0275fac,providedIn:"root"})};export{p as a};
