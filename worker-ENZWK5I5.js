addEventListener("message",({data:t})=>{let e=t.lapConfig,n=t.laps,u=t.activeTeam,s=[...n.values()],a=s.filter(N=>N.pitStop),i=e.paceLapThresholdMilliseconds,r=e.paceLapNumber,c=h(s),o=T(s,i,r),p=y(s,i),m=E(s),l=g(c,m),b=M(c),f=B(p),d=R(s,u),L=v(s,d,u);postMessage({pacesByRaceNumber:o,cumulatedTimeByRaceNumber:l,lastLapNumberByRaceNumber:b,validTeamPaceLaps:p,teamBestLap:f,lastTeamLap:d,lastTeamLapDeltaMilliseconds:L,pitLaps:a})});function M(t){let e=new Map;return t.forEach((n,u)=>{if(n.length>0){let s=n.sort((a,i)=>i.lapNumber-a.lapNumber);e.set(u,s[0].lapNumber)}}),e}function g(t,e){let n=new Map;return t.forEach((u,s)=>{let a=u.sort((o,p)=>o.lapNumber-p.lapNumber),i=e.get(s)||0,r=[];r.push(i);let c=i;a.forEach(o=>{c+=o.lapMilliseconds,r.push(c)}),n.set(s,r)}),n}function h(t){let e=new Map;return t.forEach(n=>{e.has(n.raceNumber)||e.set(n.raceNumber,[]),e.get(n.raceNumber)?.push(n)}),e}function T(t,e,n){let u=new Map,s=new Map;return t.filter(a=>!a.pitStop).forEach(a=>{s.has(a.raceNumber)||s.set(a.raceNumber,[]),s.get(a.raceNumber)?.push(a)}),s.forEach((a,i)=>{let c=a.filter(o=>!o.pitStop&&o.lapMilliseconds<e).sort((o,p)=>p.lapNumber-o.lapNumber).slice(0,n);if(c.length>0){let o=c.reduce((m,l)=>m+l.lapMilliseconds,0),p=Math.round(o/c.length);u.set(i,p)}}),u}function y(t,e){return t.filter(n=>!n.pitStop&&n.driverId!==void 0&&n.driverId!==null&&n.stintId!==void 0&&n.stintId!==null&&n.lapMilliseconds<=e)}function B(t){if(t.length!==0)return t.reduce((e,n)=>n.lapMilliseconds<e.lapMilliseconds?n:e)}function R(t,e){if(!e)return;let n=t.filter(u=>u.raceNumber===e.raceNumber);if(n.length!==0)return n.reduce((u,s)=>s.lapNumber>u.lapNumber?s:u)}function v(t,e,n){if(!e||!n||e.lapNumber===1)return;let s=t.filter(i=>i.raceNumber===n.raceNumber).sort((i,r)=>r.lapNumber-i.lapNumber);if(s.length<2)return;let a=s[1];return e.lapMilliseconds-a.lapMilliseconds}function E(t){let e=new Map,n=t.filter(r=>r.lapNumber===1).reduce((r,c)=>(r.set(c.raceNumber,c),r),new Map),u=Array.from(n.values()).find(r=>r.position===1);if(!u)return e;let s=Array.from(n.values()).filter(r=>r.position!==void 0).sort((r,c)=>r.position-c.position),a=0;s.forEach(r=>{if(r.position===1)e.set(r.raceNumber,0),a=0;else if(r.gap){let c=I(r.gap);a+=c,e.set(r.raceNumber,a)}else e.set(r.raceNumber,a)});let i=new Map;return s.forEach(r=>{r.position===1?i.set(r.raceNumber,0):i.set(r.raceNumber,u.lapMilliseconds-r.lapMilliseconds)}),e.forEach((r,c)=>{i.has(c)&&e.set(c,r+i.get(c))}),e}function I(t){if(!t||t.trim()==="")return 0;let e=t.trim();if(e.includes(":")){let[n,u]=e.split(":"),s=parseInt(n,10);if(u.includes(".")){let[a,i]=u.split(".");return s*60*1e3+parseInt(a,10)*1e3+parseInt(i.padEnd(3,"0").substring(0,3),10)}else{let a=parseInt(u,10);return s*60*1e3+a*1e3}}if(e.includes(".")){let[n,u]=e.split(".");return parseInt(n,10)*1e3+parseInt(u.padEnd(3,"0").substring(0,3),10)}return parseFloat(e)*1e3}
