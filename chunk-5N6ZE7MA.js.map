{
  "version": 3,
  "sources": ["src/app/lap-simulator/service/lap-simulator-config.service.ts"],
  "sourcesContent": ["import { Injectable, signal, WritableSignal } from '@angular/core';\nimport { FirestoreService } from \"../../shared/service/firestore.service\";\nimport { collection, collectionData } from \"@angular/fire/firestore\";\nimport { takeUntilDestroyed } from \"@angular/core/rxjs-interop\";\nimport { map, Observable, takeUntil } from \"rxjs\";\nimport { DocumentData } from \"@angular/fire/compat/firestore\";\nimport { LapSimulatorConfig } from \"../model/lap-simulator-config\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LapSimulatorConfigService extends FirestoreService {\n  protected collectionPath: string = '/lap-simulator-configs';\n  protected collectionRef = collection(this.firestore, this.collectionPath);\n\n  readonly lapSimulatorConfig: WritableSignal<LapSimulatorConfig | undefined> = signal(undefined);\n\n  constructor() {\n    super();\n\n    this.getAll()\n    .pipe(takeUntilDestroyed())\n    .subscribe(configs => {\n      if (configs.length > 0) {\n        this.lapSimulatorConfig.set(configs.at(0));\n      }\n    });\n  }\n\n  updateSimulatedLaps(value: number) {\n    const config = this.lapSimulatorConfig();\n    if (config) {\n      config.simulatedLaps = value;\n      this.updateDataWithMessage(config.id, config, 'simulated laps');\n    }\n  }\n\n  updateToOvertakeLostTime(value: number) {\n    const config = this.lapSimulatorConfig();\n    if (config) {\n      config.toOvertakeLostTimeMilliseconds = value;\n      this.updateDataWithMessage(config.id, config, 'to overtake lost time');\n    }\n  }\n\n  updateBeOvertakenLostTime(value: number) {\n    const config = this.lapSimulatorConfig();\n    if (config) {\n      config.beOvertakenLostTimeMilliseconds = value;\n      this.updateDataWithMessage(config.id, config, 'be overtaken lost time');\n    }\n  }\n\n  updateOvertakeTimeThreshold(value: number) {\n    const config = this.lapSimulatorConfig();\n    if (config) {\n      config.overtakeThresholdMilliseconds = value;\n      this.updateDataWithMessage(config.id, config, 'overtake time threshold');\n    }\n  }\n\n  updateReferenceRaceNumber(value: number) {\n    const config = this.lapSimulatorConfig();\n    if (config) {\n      config.referenceRaceNumber = value;\n      this.updateDataWithMessage(config.id, config, 'reference race number');\n    }\n  }\n\n  updateNextPitMilliseconds(value: number) {\n    const config = this.lapSimulatorConfig();\n    if (config) {\n      config.nextPitMilliseconds = value;\n      this.updateDataWithMessage(config.id, config, 'next pit milliseconds');\n    }\n  }\n\n  updateTimeLostThroughPitMilliseconds(value: number) {\n    const config = this.lapSimulatorConfig();\n    if (config) {\n      config.timeLostThroughPitMilliseconds = value;\n      this.updateDataWithMessage(config.id, config, 'time lost through pit milliseconds');\n    }\n  }\n\n  private getAll(): Observable<LapSimulatorConfig[]> {\n    return collectionData(this.collectionRef).pipe(\n        takeUntil(this.destroyed),\n        map((data: DocumentData[]) => data.map(doc => doc as LapSimulatorConfig).filter(config => !config.deleted))\n    );\n  }\n\n\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAWM,IAAO,4BAAP,MAAO,mCAAkC,iBAAgB;EACnD,iBAAyB;EACzB,gBAAgB,WAAW,KAAK,WAAW,KAAK,cAAc;EAE/D,qBAAqE,OAAO,MAAS;EAE9F,cAAA;AACE,UAAK;AAEL,SAAK,OAAM,EACV,KAAK,mBAAkB,CAAE,EACzB,UAAU,aAAU;AACnB,UAAI,QAAQ,SAAS,GAAG;AACtB,aAAK,mBAAmB,IAAI,QAAQ,GAAG,CAAC,CAAC;MAC3C;IACF,CAAC;EACH;EAEA,oBAAoB,OAAa;AAC/B,UAAM,SAAS,KAAK,mBAAkB;AACtC,QAAI,QAAQ;AACV,aAAO,gBAAgB;AACvB,WAAK,sBAAsB,OAAO,IAAI,QAAQ,gBAAgB;IAChE;EACF;EAEA,yBAAyB,OAAa;AACpC,UAAM,SAAS,KAAK,mBAAkB;AACtC,QAAI,QAAQ;AACV,aAAO,iCAAiC;AACxC,WAAK,sBAAsB,OAAO,IAAI,QAAQ,uBAAuB;IACvE;EACF;EAEA,0BAA0B,OAAa;AACrC,UAAM,SAAS,KAAK,mBAAkB;AACtC,QAAI,QAAQ;AACV,aAAO,kCAAkC;AACzC,WAAK,sBAAsB,OAAO,IAAI,QAAQ,wBAAwB;IACxE;EACF;EAEA,4BAA4B,OAAa;AACvC,UAAM,SAAS,KAAK,mBAAkB;AACtC,QAAI,QAAQ;AACV,aAAO,gCAAgC;AACvC,WAAK,sBAAsB,OAAO,IAAI,QAAQ,yBAAyB;IACzE;EACF;EAEA,0BAA0B,OAAa;AACrC,UAAM,SAAS,KAAK,mBAAkB;AACtC,QAAI,QAAQ;AACV,aAAO,sBAAsB;AAC7B,WAAK,sBAAsB,OAAO,IAAI,QAAQ,uBAAuB;IACvE;EACF;EAEA,0BAA0B,OAAa;AACrC,UAAM,SAAS,KAAK,mBAAkB;AACtC,QAAI,QAAQ;AACV,aAAO,sBAAsB;AAC7B,WAAK,sBAAsB,OAAO,IAAI,QAAQ,uBAAuB;IACvE;EACF;EAEA,qCAAqC,OAAa;AAChD,UAAM,SAAS,KAAK,mBAAkB;AACtC,QAAI,QAAQ;AACV,aAAO,iCAAiC;AACxC,WAAK,sBAAsB,OAAO,IAAI,QAAQ,oCAAoC;IACpF;EACF;EAEQ,SAAM;AACZ,WAAO,eAAe,KAAK,aAAa,EAAE,KACtC,UAAU,KAAK,SAAS,GACxB,IAAI,CAAC,SAAyB,KAAK,IAAI,SAAO,GAAyB,EAAE,OAAO,YAAU,CAAC,OAAO,OAAO,CAAC,CAAC;EAEjH;;qCA/EW,4BAAyB;EAAA;4EAAzB,4BAAyB,SAAzB,2BAAyB,WAAA,YAFxB,OAAM,CAAA;;;sEAEP,2BAAyB,CAAA;UAHrC;WAAW;MACV,YAAY;KACb;;;",
  "names": []
}
