{"version":3,"sources":["node_modules/date-fns/_lib/defaultOptions.js","node_modules/date-fns/startOfWeek.js","node_modules/date-fns/startOfISOWeek.js","node_modules/date-fns/getISOWeekYear.js","node_modules/date-fns/startOfISOWeekYear.js","node_modules/date-fns/isDate.js","node_modules/date-fns/isValid.js","node_modules/date-fns/startOfYear.js","node_modules/date-fns/locale/en-US/_lib/formatDistance.js","node_modules/date-fns/locale/_lib/buildFormatLongFn.js","node_modules/date-fns/locale/en-US/_lib/formatLong.js","node_modules/date-fns/locale/en-US/_lib/formatRelative.js","node_modules/date-fns/locale/_lib/buildLocalizeFn.js","node_modules/date-fns/locale/en-US/_lib/localize.js","node_modules/date-fns/locale/_lib/buildMatchFn.js","node_modules/date-fns/locale/_lib/buildMatchPatternFn.js","node_modules/date-fns/locale/en-US/_lib/match.js","node_modules/date-fns/locale/en-US.js","node_modules/date-fns/getDayOfYear.js","node_modules/date-fns/getISOWeek.js","node_modules/date-fns/getWeekYear.js","node_modules/date-fns/startOfWeekYear.js","node_modules/date-fns/getWeek.js","node_modules/date-fns/_lib/addLeadingZeros.js","node_modules/date-fns/_lib/format/lightFormatters.js","node_modules/date-fns/_lib/format/formatters.js","node_modules/date-fns/_lib/format/longFormatters.js","node_modules/date-fns/_lib/protectedTokens.js","node_modules/date-fns/format.js","node_modules/date-fns/isAfter.js","src/app/pit/service/pit.service.ts","src/app/tyre/service/tyre.service.ts","src/app/stint/service/stint-optimizer.service.ts","src/app/stint/service/stint.service.ts","src/app/stint/component/active-stint/active-stint.component.ts","src/app/stint/component/active-stint/active-stint.component.html","src/app/stint/service/delta-stint.service.ts","src/app/stint/component/delta-stint/delta-stint.component.ts","src/app/stint/component/delta-stint/delta-stint.component.html","src/app/driver/component/driver-change/driver-change.component.ts","src/app/driver/component/driver-change/driver-change.component.html","src/app/driver/component/driver/driver.component.ts","src/app/driver/component/driver/driver.component.html","src/app/shared/component/battery/battery.component.ts","src/app/shared/component/battery/battery.component.html","src/app/fuel/service/fuel.service.ts","src/app/fuel/component/fuel/fuel.component.ts","src/app/fuel/component/fuel/fuel.component.html","src/app/interphone/service/interphone.service.ts","src/app/interphone/component/interphone/interphone.component.ts","src/app/interphone/component/interphone/interphone.component.html","src/app/kart/service/kart.service.ts","src/app/kart/component/kart-change/kart-change.component.ts","src/app/kart/component/kart-change/kart-change.component.html","src/app/kart/component/kart/kart.component.ts","src/app/kart/component/kart/kart.component.html","src/app/pit/component/pit/pit.component.ts","src/app/pit/component/pit/pit.component.html","src/app/pit-lane/service/pit-lane.service.ts","src/app/race/service/race-manager.service.ts","src/app/shared/service/audio.service.ts","src/app/pit-lane/component/pit-lane/pit-lane.component.ts","src/app/pit-lane/component/pit-lane/pit-lane.component.html","src/app/race/component/race-button/race-button.component.ts","src/app/race/component/race-button/race-button.component.html","src/app/race/component/race/race.component.ts","src/app/race/component/race/race.component.html","src/app/stint/component/stint/stint.component.ts","src/app/stint/component/stint/stint.component.html","src/app/stint/component/stint-optimizer/stint-optimizer.component.ts","src/app/stint/component/stint-optimizer/stint-optimizer.component.html","src/app/timeline/service/timeline.service.ts","src/app/timeline/component/timeline/timeline.component.ts","src/app/timeline/component/timeline/timeline.component.html","src/app/tyre/component/tyre-change/tyre-change.component.ts","src/app/tyre/component/tyre-change/tyre-change.component.html","src/app/live-timing/component/live-timing/live-timing.component.ts","src/app/live-timing/component/live-timing/live-timing.component.html","src/app/tyre/component/tyre-pressure/tyre-pressure.component.ts","src/app/tyre/component/tyre-pressure/tyre-pressure.component.html","src/app/driver/component/driver-performance/driver-performance.component.ts","src/app/driver/component/driver-performance/driver-performance.component.html","src/app/lap-missing/component/lap-missing/lap-missing.component.ts","src/app/lap-missing/component/lap-missing/lap-missing.component.html","src/app/steering-wheel/component/steering-wheel-message-button/steering-wheel-message-button.component.ts","src/app/steering-wheel/component/steering-wheel-message-button/steering-wheel-message-button.component.html","src/app/board/component/board/board.component.ts","src/app/board/component/board/board.component.html"],"sourcesContent":["let defaultOptions = {};\nexport function getDefaultOptions() {\n  return defaultOptions;\n}\nexport function setDefaultOptions(newOptions) {\n  defaultOptions = newOptions;\n}","import { getDefaultOptions } from \"./_lib/defaultOptions.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * The {@link startOfWeek} function options.\n */\n\n/**\n * @name startOfWeek\n * @category Week Helpers\n * @summary Return the start of a week for the given date.\n *\n * @description\n * Return the start of a week for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The original date\n * @param options - An object with options\n *\n * @returns The start of a week\n *\n * @example\n * // The start of a week for 2 September 2014 11:55:00:\n * const result = startOfWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Sun Aug 31 2014 00:00:00\n *\n * @example\n * // If the week starts on Monday, the start of the week for 2 September 2014 11:55:00:\n * const result = startOfWeek(new Date(2014, 8, 2, 11, 55, 0), { weekStartsOn: 1 })\n * //=> Mon Sep 01 2014 00:00:00\n */\nexport function startOfWeek(date, options) {\n  const defaultOptions = getDefaultOptions();\n  const weekStartsOn = options?.weekStartsOn ?? options?.locale?.options?.weekStartsOn ?? defaultOptions.weekStartsOn ?? defaultOptions.locale?.options?.weekStartsOn ?? 0;\n  const _date = toDate(date, options?.in);\n  const day = _date.getDay();\n  const diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;\n  _date.setDate(_date.getDate() - diff);\n  _date.setHours(0, 0, 0, 0);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default startOfWeek;","import { startOfWeek } from \"./startOfWeek.js\";\n\n/**\n * The {@link startOfISOWeek} function options.\n */\n\n/**\n * @name startOfISOWeek\n * @category ISO Week Helpers\n * @summary Return the start of an ISO week for the given date.\n *\n * @description\n * Return the start of an ISO week for the given date.\n * The result will be in the local timezone.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The original date\n * @param options - An object with options\n *\n * @returns The start of an ISO week\n *\n * @example\n * // The start of an ISO week for 2 September 2014 11:55:00:\n * const result = startOfISOWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Mon Sep 01 2014 00:00:00\n */\nexport function startOfISOWeek(date, options) {\n  return startOfWeek(date, {\n    ...options,\n    weekStartsOn: 1\n  });\n}\n\n// Fallback for modularized imports:\nexport default startOfISOWeek;","import { constructFrom } from \"./constructFrom.js\";\nimport { startOfISOWeek } from \"./startOfISOWeek.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * The {@link getISOWeekYear} function options.\n */\n\n/**\n * @name getISOWeekYear\n * @category ISO Week-Numbering Year Helpers\n * @summary Get the ISO week-numbering year of the given date.\n *\n * @description\n * Get the ISO week-numbering year of the given date,\n * which always starts 3 days before the year's first Thursday.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @param date - The given date\n *\n * @returns The ISO week-numbering year\n *\n * @example\n * // Which ISO-week numbering year is 2 January 2005?\n * const result = getISOWeekYear(new Date(2005, 0, 2))\n * //=> 2004\n */\nexport function getISOWeekYear(date, options) {\n  const _date = toDate(date, options?.in);\n  const year = _date.getFullYear();\n  const fourthOfJanuaryOfNextYear = constructFrom(_date, 0);\n  fourthOfJanuaryOfNextYear.setFullYear(year + 1, 0, 4);\n  fourthOfJanuaryOfNextYear.setHours(0, 0, 0, 0);\n  const startOfNextYear = startOfISOWeek(fourthOfJanuaryOfNextYear);\n  const fourthOfJanuaryOfThisYear = constructFrom(_date, 0);\n  fourthOfJanuaryOfThisYear.setFullYear(year, 0, 4);\n  fourthOfJanuaryOfThisYear.setHours(0, 0, 0, 0);\n  const startOfThisYear = startOfISOWeek(fourthOfJanuaryOfThisYear);\n  if (_date.getTime() >= startOfNextYear.getTime()) {\n    return year + 1;\n  } else if (_date.getTime() >= startOfThisYear.getTime()) {\n    return year;\n  } else {\n    return year - 1;\n  }\n}\n\n// Fallback for modularized imports:\nexport default getISOWeekYear;","import { constructFrom } from \"./constructFrom.js\";\nimport { getISOWeekYear } from \"./getISOWeekYear.js\";\nimport { startOfISOWeek } from \"./startOfISOWeek.js\";\n\n/**\n * The {@link startOfISOWeekYear} function options.\n */\n\n/**\n * @name startOfISOWeekYear\n * @category ISO Week-Numbering Year Helpers\n * @summary Return the start of an ISO week-numbering year for the given date.\n *\n * @description\n * Return the start of an ISO week-numbering year,\n * which always starts 3 days before the year's first Thursday.\n * The result will be in the local timezone.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The original date\n * @param options - An object with options\n *\n * @returns The start of an ISO week-numbering year\n *\n * @example\n * // The start of an ISO week-numbering year for 2 July 2005:\n * const result = startOfISOWeekYear(new Date(2005, 6, 2))\n * //=> Mon Jan 03 2005 00:00:00\n */\nexport function startOfISOWeekYear(date, options) {\n  const year = getISOWeekYear(date, options);\n  const fourthOfJanuary = constructFrom(options?.in || date, 0);\n  fourthOfJanuary.setFullYear(year, 0, 4);\n  fourthOfJanuary.setHours(0, 0, 0, 0);\n  return startOfISOWeek(fourthOfJanuary);\n}\n\n// Fallback for modularized imports:\nexport default startOfISOWeekYear;","/**\n * @name isDate\n * @category Common Helpers\n * @summary Is the given value a date?\n *\n * @description\n * Returns true if the given value is an instance of Date. The function works for dates transferred across iframes.\n *\n * @param value - The value to check\n *\n * @returns True if the given value is a date\n *\n * @example\n * // For a valid date:\n * const result = isDate(new Date())\n * //=> true\n *\n * @example\n * // For an invalid date:\n * const result = isDate(new Date(NaN))\n * //=> true\n *\n * @example\n * // For some value:\n * const result = isDate('2014-02-31')\n * //=> false\n *\n * @example\n * // For an object:\n * const result = isDate({})\n * //=> false\n */\nexport function isDate(value) {\n  return value instanceof Date || typeof value === \"object\" && Object.prototype.toString.call(value) === \"[object Date]\";\n}\n\n// Fallback for modularized imports:\nexport default isDate;","import { isDate } from \"./isDate.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * @name isValid\n * @category Common Helpers\n * @summary Is the given date valid?\n *\n * @description\n * Returns false if argument is Invalid Date and true otherwise.\n * Argument is converted to Date using `toDate`. See [toDate](https://date-fns.org/docs/toDate)\n * Invalid Date is a Date, whose time value is NaN.\n *\n * Time value of Date: http://es5.github.io/#x15.9.1.1\n *\n * @param date - The date to check\n *\n * @returns The date is valid\n *\n * @example\n * // For the valid date:\n * const result = isValid(new Date(2014, 1, 31))\n * //=> true\n *\n * @example\n * // For the value, convertible into a date:\n * const result = isValid(1393804800000)\n * //=> true\n *\n * @example\n * // For the invalid date:\n * const result = isValid(new Date(''))\n * //=> false\n */\nexport function isValid(date) {\n  return !(!isDate(date) && typeof date !== \"number\" || isNaN(+toDate(date)));\n}\n\n// Fallback for modularized imports:\nexport default isValid;","import { toDate } from \"./toDate.js\";\n\n/**\n * The {@link startOfYear} function options.\n */\n\n/**\n * @name startOfYear\n * @category Year Helpers\n * @summary Return the start of a year for the given date.\n *\n * @description\n * Return the start of a year for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The original date\n * @param options - The options\n *\n * @returns The start of a year\n *\n * @example\n * // The start of a year for 2 September 2014 11:55:00:\n * const result = startOfYear(new Date(2014, 8, 2, 11, 55, 00))\n * //=> Wed Jan 01 2014 00:00:00\n */\nexport function startOfYear(date, options) {\n  const date_ = toDate(date, options?.in);\n  date_.setFullYear(date_.getFullYear(), 0, 1);\n  date_.setHours(0, 0, 0, 0);\n  return date_;\n}\n\n// Fallback for modularized imports:\nexport default startOfYear;","const formatDistanceLocale = {\n  lessThanXSeconds: {\n    one: \"less than a second\",\n    other: \"less than {{count}} seconds\"\n  },\n  xSeconds: {\n    one: \"1 second\",\n    other: \"{{count}} seconds\"\n  },\n  halfAMinute: \"half a minute\",\n  lessThanXMinutes: {\n    one: \"less than a minute\",\n    other: \"less than {{count}} minutes\"\n  },\n  xMinutes: {\n    one: \"1 minute\",\n    other: \"{{count}} minutes\"\n  },\n  aboutXHours: {\n    one: \"about 1 hour\",\n    other: \"about {{count}} hours\"\n  },\n  xHours: {\n    one: \"1 hour\",\n    other: \"{{count}} hours\"\n  },\n  xDays: {\n    one: \"1 day\",\n    other: \"{{count}} days\"\n  },\n  aboutXWeeks: {\n    one: \"about 1 week\",\n    other: \"about {{count}} weeks\"\n  },\n  xWeeks: {\n    one: \"1 week\",\n    other: \"{{count}} weeks\"\n  },\n  aboutXMonths: {\n    one: \"about 1 month\",\n    other: \"about {{count}} months\"\n  },\n  xMonths: {\n    one: \"1 month\",\n    other: \"{{count}} months\"\n  },\n  aboutXYears: {\n    one: \"about 1 year\",\n    other: \"about {{count}} years\"\n  },\n  xYears: {\n    one: \"1 year\",\n    other: \"{{count}} years\"\n  },\n  overXYears: {\n    one: \"over 1 year\",\n    other: \"over {{count}} years\"\n  },\n  almostXYears: {\n    one: \"almost 1 year\",\n    other: \"almost {{count}} years\"\n  }\n};\nexport const formatDistance = (token, count, options) => {\n  let result;\n  const tokenValue = formatDistanceLocale[token];\n  if (typeof tokenValue === \"string\") {\n    result = tokenValue;\n  } else if (count === 1) {\n    result = tokenValue.one;\n  } else {\n    result = tokenValue.other.replace(\"{{count}}\", count.toString());\n  }\n  if (options?.addSuffix) {\n    if (options.comparison && options.comparison > 0) {\n      return \"in \" + result;\n    } else {\n      return result + \" ago\";\n    }\n  }\n  return result;\n};","export function buildFormatLongFn(args) {\n  return (options = {}) => {\n    // TODO: Remove String()\n    const width = options.width ? String(options.width) : args.defaultWidth;\n    const format = args.formats[width] || args.formats[args.defaultWidth];\n    return format;\n  };\n}","import { buildFormatLongFn } from \"../../_lib/buildFormatLongFn.js\";\nconst dateFormats = {\n  full: \"EEEE, MMMM do, y\",\n  long: \"MMMM do, y\",\n  medium: \"MMM d, y\",\n  short: \"MM/dd/yyyy\"\n};\nconst timeFormats = {\n  full: \"h:mm:ss a zzzz\",\n  long: \"h:mm:ss a z\",\n  medium: \"h:mm:ss a\",\n  short: \"h:mm a\"\n};\nconst dateTimeFormats = {\n  full: \"{{date}} 'at' {{time}}\",\n  long: \"{{date}} 'at' {{time}}\",\n  medium: \"{{date}}, {{time}}\",\n  short: \"{{date}}, {{time}}\"\n};\nexport const formatLong = {\n  date: buildFormatLongFn({\n    formats: dateFormats,\n    defaultWidth: \"full\"\n  }),\n  time: buildFormatLongFn({\n    formats: timeFormats,\n    defaultWidth: \"full\"\n  }),\n  dateTime: buildFormatLongFn({\n    formats: dateTimeFormats,\n    defaultWidth: \"full\"\n  })\n};","const formatRelativeLocale = {\n  lastWeek: \"'last' eeee 'at' p\",\n  yesterday: \"'yesterday at' p\",\n  today: \"'today at' p\",\n  tomorrow: \"'tomorrow at' p\",\n  nextWeek: \"eeee 'at' p\",\n  other: \"P\"\n};\nexport const formatRelative = (token, _date, _baseDate, _options) => formatRelativeLocale[token];","/**\n * The localize function argument callback which allows to convert raw value to\n * the actual type.\n *\n * @param value - The value to convert\n *\n * @returns The converted value\n */\n\n/**\n * The map of localized values for each width.\n */\n\n/**\n * The index type of the locale unit value. It types conversion of units of\n * values that don't start at 0 (i.e. quarters).\n */\n\n/**\n * Converts the unit value to the tuple of values.\n */\n\n/**\n * The tuple of localized era values. The first element represents BC,\n * the second element represents AD.\n */\n\n/**\n * The tuple of localized quarter values. The first element represents Q1.\n */\n\n/**\n * The tuple of localized day values. The first element represents Sunday.\n */\n\n/**\n * The tuple of localized month values. The first element represents January.\n */\n\nexport function buildLocalizeFn(args) {\n  return (value, options) => {\n    const context = options?.context ? String(options.context) : \"standalone\";\n    let valuesArray;\n    if (context === \"formatting\" && args.formattingValues) {\n      const defaultWidth = args.defaultFormattingWidth || args.defaultWidth;\n      const width = options?.width ? String(options.width) : defaultWidth;\n      valuesArray = args.formattingValues[width] || args.formattingValues[defaultWidth];\n    } else {\n      const defaultWidth = args.defaultWidth;\n      const width = options?.width ? String(options.width) : args.defaultWidth;\n      valuesArray = args.values[width] || args.values[defaultWidth];\n    }\n    const index = args.argumentCallback ? args.argumentCallback(value) : value;\n\n    // @ts-expect-error - For some reason TypeScript just don't want to match it, no matter how hard we try. I challenge you to try to remove it!\n    return valuesArray[index];\n  };\n}","import { buildLocalizeFn } from \"../../_lib/buildLocalizeFn.js\";\nconst eraValues = {\n  narrow: [\"B\", \"A\"],\n  abbreviated: [\"BC\", \"AD\"],\n  wide: [\"Before Christ\", \"Anno Domini\"]\n};\nconst quarterValues = {\n  narrow: [\"1\", \"2\", \"3\", \"4\"],\n  abbreviated: [\"Q1\", \"Q2\", \"Q3\", \"Q4\"],\n  wide: [\"1st quarter\", \"2nd quarter\", \"3rd quarter\", \"4th quarter\"]\n};\n\n// Note: in English, the names of days of the week and months are capitalized.\n// If you are making a new locale based on this one, check if the same is true for the language you're working on.\n// Generally, formatted dates should look like they are in the middle of a sentence,\n// e.g. in Spanish language the weekdays and months should be in the lowercase.\nconst monthValues = {\n  narrow: [\"J\", \"F\", \"M\", \"A\", \"M\", \"J\", \"J\", \"A\", \"S\", \"O\", \"N\", \"D\"],\n  abbreviated: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"],\n  wide: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"]\n};\nconst dayValues = {\n  narrow: [\"S\", \"M\", \"T\", \"W\", \"T\", \"F\", \"S\"],\n  short: [\"Su\", \"Mo\", \"Tu\", \"We\", \"Th\", \"Fr\", \"Sa\"],\n  abbreviated: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n  wide: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"]\n};\nconst dayPeriodValues = {\n  narrow: {\n    am: \"a\",\n    pm: \"p\",\n    midnight: \"mi\",\n    noon: \"n\",\n    morning: \"morning\",\n    afternoon: \"afternoon\",\n    evening: \"evening\",\n    night: \"night\"\n  },\n  abbreviated: {\n    am: \"AM\",\n    pm: \"PM\",\n    midnight: \"midnight\",\n    noon: \"noon\",\n    morning: \"morning\",\n    afternoon: \"afternoon\",\n    evening: \"evening\",\n    night: \"night\"\n  },\n  wide: {\n    am: \"a.m.\",\n    pm: \"p.m.\",\n    midnight: \"midnight\",\n    noon: \"noon\",\n    morning: \"morning\",\n    afternoon: \"afternoon\",\n    evening: \"evening\",\n    night: \"night\"\n  }\n};\nconst formattingDayPeriodValues = {\n  narrow: {\n    am: \"a\",\n    pm: \"p\",\n    midnight: \"mi\",\n    noon: \"n\",\n    morning: \"in the morning\",\n    afternoon: \"in the afternoon\",\n    evening: \"in the evening\",\n    night: \"at night\"\n  },\n  abbreviated: {\n    am: \"AM\",\n    pm: \"PM\",\n    midnight: \"midnight\",\n    noon: \"noon\",\n    morning: \"in the morning\",\n    afternoon: \"in the afternoon\",\n    evening: \"in the evening\",\n    night: \"at night\"\n  },\n  wide: {\n    am: \"a.m.\",\n    pm: \"p.m.\",\n    midnight: \"midnight\",\n    noon: \"noon\",\n    morning: \"in the morning\",\n    afternoon: \"in the afternoon\",\n    evening: \"in the evening\",\n    night: \"at night\"\n  }\n};\nconst ordinalNumber = (dirtyNumber, _options) => {\n  const number = Number(dirtyNumber);\n\n  // If ordinal numbers depend on context, for example,\n  // if they are different for different grammatical genders,\n  // use `options.unit`.\n  //\n  // `unit` can be 'year', 'quarter', 'month', 'week', 'date', 'dayOfYear',\n  // 'day', 'hour', 'minute', 'second'.\n\n  const rem100 = number % 100;\n  if (rem100 > 20 || rem100 < 10) {\n    switch (rem100 % 10) {\n      case 1:\n        return number + \"st\";\n      case 2:\n        return number + \"nd\";\n      case 3:\n        return number + \"rd\";\n    }\n  }\n  return number + \"th\";\n};\nexport const localize = {\n  ordinalNumber,\n  era: buildLocalizeFn({\n    values: eraValues,\n    defaultWidth: \"wide\"\n  }),\n  quarter: buildLocalizeFn({\n    values: quarterValues,\n    defaultWidth: \"wide\",\n    argumentCallback: quarter => quarter - 1\n  }),\n  month: buildLocalizeFn({\n    values: monthValues,\n    defaultWidth: \"wide\"\n  }),\n  day: buildLocalizeFn({\n    values: dayValues,\n    defaultWidth: \"wide\"\n  }),\n  dayPeriod: buildLocalizeFn({\n    values: dayPeriodValues,\n    defaultWidth: \"wide\",\n    formattingValues: formattingDayPeriodValues,\n    defaultFormattingWidth: \"wide\"\n  })\n};","export function buildMatchFn(args) {\n  return (string, options = {}) => {\n    const width = options.width;\n    const matchPattern = width && args.matchPatterns[width] || args.matchPatterns[args.defaultMatchWidth];\n    const matchResult = string.match(matchPattern);\n    if (!matchResult) {\n      return null;\n    }\n    const matchedString = matchResult[0];\n    const parsePatterns = width && args.parsePatterns[width] || args.parsePatterns[args.defaultParseWidth];\n    const key = Array.isArray(parsePatterns) ? findIndex(parsePatterns, pattern => pattern.test(matchedString)) :\n    // [TODO] -- I challenge you to fix the type\n    findKey(parsePatterns, pattern => pattern.test(matchedString));\n    let value;\n    value = args.valueCallback ? args.valueCallback(key) : key;\n    value = options.valueCallback ?\n    // [TODO] -- I challenge you to fix the type\n    options.valueCallback(value) : value;\n    const rest = string.slice(matchedString.length);\n    return {\n      value,\n      rest\n    };\n  };\n}\nfunction findKey(object, predicate) {\n  for (const key in object) {\n    if (Object.prototype.hasOwnProperty.call(object, key) && predicate(object[key])) {\n      return key;\n    }\n  }\n  return undefined;\n}\nfunction findIndex(array, predicate) {\n  for (let key = 0; key < array.length; key++) {\n    if (predicate(array[key])) {\n      return key;\n    }\n  }\n  return undefined;\n}","export function buildMatchPatternFn(args) {\n  return (string, options = {}) => {\n    const matchResult = string.match(args.matchPattern);\n    if (!matchResult) return null;\n    const matchedString = matchResult[0];\n    const parseResult = string.match(args.parsePattern);\n    if (!parseResult) return null;\n    let value = args.valueCallback ? args.valueCallback(parseResult[0]) : parseResult[0];\n\n    // [TODO] I challenge you to fix the type\n    value = options.valueCallback ? options.valueCallback(value) : value;\n    const rest = string.slice(matchedString.length);\n    return {\n      value,\n      rest\n    };\n  };\n}","import { buildMatchFn } from \"../../_lib/buildMatchFn.js\";\nimport { buildMatchPatternFn } from \"../../_lib/buildMatchPatternFn.js\";\nconst matchOrdinalNumberPattern = /^(\\d+)(th|st|nd|rd)?/i;\nconst parseOrdinalNumberPattern = /\\d+/i;\nconst matchEraPatterns = {\n  narrow: /^(b|a)/i,\n  abbreviated: /^(b\\.?\\s?c\\.?|b\\.?\\s?c\\.?\\s?e\\.?|a\\.?\\s?d\\.?|c\\.?\\s?e\\.?)/i,\n  wide: /^(before christ|before common era|anno domini|common era)/i\n};\nconst parseEraPatterns = {\n  any: [/^b/i, /^(a|c)/i]\n};\nconst matchQuarterPatterns = {\n  narrow: /^[1234]/i,\n  abbreviated: /^q[1234]/i,\n  wide: /^[1234](th|st|nd|rd)? quarter/i\n};\nconst parseQuarterPatterns = {\n  any: [/1/i, /2/i, /3/i, /4/i]\n};\nconst matchMonthPatterns = {\n  narrow: /^[jfmasond]/i,\n  abbreviated: /^(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)/i,\n  wide: /^(january|february|march|april|may|june|july|august|september|october|november|december)/i\n};\nconst parseMonthPatterns = {\n  narrow: [/^j/i, /^f/i, /^m/i, /^a/i, /^m/i, /^j/i, /^j/i, /^a/i, /^s/i, /^o/i, /^n/i, /^d/i],\n  any: [/^ja/i, /^f/i, /^mar/i, /^ap/i, /^may/i, /^jun/i, /^jul/i, /^au/i, /^s/i, /^o/i, /^n/i, /^d/i]\n};\nconst matchDayPatterns = {\n  narrow: /^[smtwf]/i,\n  short: /^(su|mo|tu|we|th|fr|sa)/i,\n  abbreviated: /^(sun|mon|tue|wed|thu|fri|sat)/i,\n  wide: /^(sunday|monday|tuesday|wednesday|thursday|friday|saturday)/i\n};\nconst parseDayPatterns = {\n  narrow: [/^s/i, /^m/i, /^t/i, /^w/i, /^t/i, /^f/i, /^s/i],\n  any: [/^su/i, /^m/i, /^tu/i, /^w/i, /^th/i, /^f/i, /^sa/i]\n};\nconst matchDayPeriodPatterns = {\n  narrow: /^(a|p|mi|n|(in the|at) (morning|afternoon|evening|night))/i,\n  any: /^([ap]\\.?\\s?m\\.?|midnight|noon|(in the|at) (morning|afternoon|evening|night))/i\n};\nconst parseDayPeriodPatterns = {\n  any: {\n    am: /^a/i,\n    pm: /^p/i,\n    midnight: /^mi/i,\n    noon: /^no/i,\n    morning: /morning/i,\n    afternoon: /afternoon/i,\n    evening: /evening/i,\n    night: /night/i\n  }\n};\nexport const match = {\n  ordinalNumber: buildMatchPatternFn({\n    matchPattern: matchOrdinalNumberPattern,\n    parsePattern: parseOrdinalNumberPattern,\n    valueCallback: value => parseInt(value, 10)\n  }),\n  era: buildMatchFn({\n    matchPatterns: matchEraPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseEraPatterns,\n    defaultParseWidth: \"any\"\n  }),\n  quarter: buildMatchFn({\n    matchPatterns: matchQuarterPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseQuarterPatterns,\n    defaultParseWidth: \"any\",\n    valueCallback: index => index + 1\n  }),\n  month: buildMatchFn({\n    matchPatterns: matchMonthPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseMonthPatterns,\n    defaultParseWidth: \"any\"\n  }),\n  day: buildMatchFn({\n    matchPatterns: matchDayPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseDayPatterns,\n    defaultParseWidth: \"any\"\n  }),\n  dayPeriod: buildMatchFn({\n    matchPatterns: matchDayPeriodPatterns,\n    defaultMatchWidth: \"any\",\n    parsePatterns: parseDayPeriodPatterns,\n    defaultParseWidth: \"any\"\n  })\n};","import { formatDistance } from \"./en-US/_lib/formatDistance.js\";\nimport { formatLong } from \"./en-US/_lib/formatLong.js\";\nimport { formatRelative } from \"./en-US/_lib/formatRelative.js\";\nimport { localize } from \"./en-US/_lib/localize.js\";\nimport { match } from \"./en-US/_lib/match.js\";\n\n/**\n * @category Locales\n * @summary English locale (United States).\n * @language English\n * @iso-639-2 eng\n * @author Sasha Koss [@kossnocorp](https://github.com/kossnocorp)\n * @author Lesha Koss [@leshakoss](https://github.com/leshakoss)\n */\nexport const enUS = {\n  code: \"en-US\",\n  formatDistance: formatDistance,\n  formatLong: formatLong,\n  formatRelative: formatRelative,\n  localize: localize,\n  match: match,\n  options: {\n    weekStartsOn: 0 /* Sunday */,\n    firstWeekContainsDate: 1\n  }\n};\n\n// Fallback for modularized imports:\nexport default enUS;","import { differenceInCalendarDays } from \"./differenceInCalendarDays.js\";\nimport { startOfYear } from \"./startOfYear.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * The {@link getDayOfYear} function options.\n */\n\n/**\n * @name getDayOfYear\n * @category Day Helpers\n * @summary Get the day of the year of the given date.\n *\n * @description\n * Get the day of the year of the given date.\n *\n * @param date - The given date\n * @param options - The options\n *\n * @returns The day of year\n *\n * @example\n * // Which day of the year is 2 July 2014?\n * const result = getDayOfYear(new Date(2014, 6, 2))\n * //=> 183\n */\nexport function getDayOfYear(date, options) {\n  const _date = toDate(date, options?.in);\n  const diff = differenceInCalendarDays(_date, startOfYear(_date));\n  const dayOfYear = diff + 1;\n  return dayOfYear;\n}\n\n// Fallback for modularized imports:\nexport default getDayOfYear;","import { millisecondsInWeek } from \"./constants.js\";\nimport { startOfISOWeek } from \"./startOfISOWeek.js\";\nimport { startOfISOWeekYear } from \"./startOfISOWeekYear.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * The {@link getISOWeek} function options.\n */\n\n/**\n * @name getISOWeek\n * @category ISO Week Helpers\n * @summary Get the ISO week of the given date.\n *\n * @description\n * Get the ISO week of the given date.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @param date - The given date\n * @param options - The options\n *\n * @returns The ISO week\n *\n * @example\n * // Which week of the ISO-week numbering year is 2 January 2005?\n * const result = getISOWeek(new Date(2005, 0, 2))\n * //=> 53\n */\nexport function getISOWeek(date, options) {\n  const _date = toDate(date, options?.in);\n  const diff = +startOfISOWeek(_date) - +startOfISOWeekYear(_date);\n\n  // Round the number of weeks to the nearest integer because the number of\n  // milliseconds in a week is not constant (e.g. it's different in the week of\n  // the daylight saving time clock shift).\n  return Math.round(diff / millisecondsInWeek) + 1;\n}\n\n// Fallback for modularized imports:\nexport default getISOWeek;","import { getDefaultOptions } from \"./_lib/defaultOptions.js\";\nimport { constructFrom } from \"./constructFrom.js\";\nimport { startOfWeek } from \"./startOfWeek.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * The {@link getWeekYear} function options.\n */\n\n/**\n * @name getWeekYear\n * @category Week-Numbering Year Helpers\n * @summary Get the local week-numbering year of the given date.\n *\n * @description\n * Get the local week-numbering year of the given date.\n * The exact calculation depends on the values of\n * `options.weekStartsOn` (which is the index of the first day of the week)\n * and `options.firstWeekContainsDate` (which is the day of January, which is always in\n * the first week of the week-numbering year)\n *\n * Week numbering: https://en.wikipedia.org/wiki/Week#The_ISO_week_date_system\n *\n * @param date - The given date\n * @param options - An object with options.\n *\n * @returns The local week-numbering year\n *\n * @example\n * // Which week numbering year is 26 December 2004 with the default settings?\n * const result = getWeekYear(new Date(2004, 11, 26))\n * //=> 2005\n *\n * @example\n * // Which week numbering year is 26 December 2004 if week starts on Saturday?\n * const result = getWeekYear(new Date(2004, 11, 26), { weekStartsOn: 6 })\n * //=> 2004\n *\n * @example\n * // Which week numbering year is 26 December 2004 if the first week contains 4 January?\n * const result = getWeekYear(new Date(2004, 11, 26), { firstWeekContainsDate: 4 })\n * //=> 2004\n */\nexport function getWeekYear(date, options) {\n  const _date = toDate(date, options?.in);\n  const year = _date.getFullYear();\n  const defaultOptions = getDefaultOptions();\n  const firstWeekContainsDate = options?.firstWeekContainsDate ?? options?.locale?.options?.firstWeekContainsDate ?? defaultOptions.firstWeekContainsDate ?? defaultOptions.locale?.options?.firstWeekContainsDate ?? 1;\n  const firstWeekOfNextYear = constructFrom(options?.in || date, 0);\n  firstWeekOfNextYear.setFullYear(year + 1, 0, firstWeekContainsDate);\n  firstWeekOfNextYear.setHours(0, 0, 0, 0);\n  const startOfNextYear = startOfWeek(firstWeekOfNextYear, options);\n  const firstWeekOfThisYear = constructFrom(options?.in || date, 0);\n  firstWeekOfThisYear.setFullYear(year, 0, firstWeekContainsDate);\n  firstWeekOfThisYear.setHours(0, 0, 0, 0);\n  const startOfThisYear = startOfWeek(firstWeekOfThisYear, options);\n  if (+_date >= +startOfNextYear) {\n    return year + 1;\n  } else if (+_date >= +startOfThisYear) {\n    return year;\n  } else {\n    return year - 1;\n  }\n}\n\n// Fallback for modularized imports:\nexport default getWeekYear;","import { getDefaultOptions } from \"./_lib/defaultOptions.js\";\nimport { constructFrom } from \"./constructFrom.js\";\nimport { getWeekYear } from \"./getWeekYear.js\";\nimport { startOfWeek } from \"./startOfWeek.js\";\n\n/**\n * The {@link startOfWeekYear} function options.\n */\n\n/**\n * @name startOfWeekYear\n * @category Week-Numbering Year Helpers\n * @summary Return the start of a local week-numbering year for the given date.\n *\n * @description\n * Return the start of a local week-numbering year.\n * The exact calculation depends on the values of\n * `options.weekStartsOn` (which is the index of the first day of the week)\n * and `options.firstWeekContainsDate` (which is the day of January, which is always in\n * the first week of the week-numbering year)\n *\n * Week numbering: https://en.wikipedia.org/wiki/Week#The_ISO_week_date_system\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type.\n *\n * @param date - The original date\n * @param options - An object with options\n *\n * @returns The start of a week-numbering year\n *\n * @example\n * // The start of an a week-numbering year for 2 July 2005 with default settings:\n * const result = startOfWeekYear(new Date(2005, 6, 2))\n * //=> Sun Dec 26 2004 00:00:00\n *\n * @example\n * // The start of a week-numbering year for 2 July 2005\n * // if Monday is the first day of week\n * // and 4 January is always in the first week of the year:\n * const result = startOfWeekYear(new Date(2005, 6, 2), {\n *   weekStartsOn: 1,\n *   firstWeekContainsDate: 4\n * })\n * //=> Mon Jan 03 2005 00:00:00\n */\nexport function startOfWeekYear(date, options) {\n  const defaultOptions = getDefaultOptions();\n  const firstWeekContainsDate = options?.firstWeekContainsDate ?? options?.locale?.options?.firstWeekContainsDate ?? defaultOptions.firstWeekContainsDate ?? defaultOptions.locale?.options?.firstWeekContainsDate ?? 1;\n  const year = getWeekYear(date, options);\n  const firstWeek = constructFrom(options?.in || date, 0);\n  firstWeek.setFullYear(year, 0, firstWeekContainsDate);\n  firstWeek.setHours(0, 0, 0, 0);\n  const _date = startOfWeek(firstWeek, options);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default startOfWeekYear;","import { millisecondsInWeek } from \"./constants.js\";\nimport { startOfWeek } from \"./startOfWeek.js\";\nimport { startOfWeekYear } from \"./startOfWeekYear.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * The {@link getWeek} function options.\n */\n\n/**\n * @name getWeek\n * @category Week Helpers\n * @summary Get the local week index of the given date.\n *\n * @description\n * Get the local week index of the given date.\n * The exact calculation depends on the values of\n * `options.weekStartsOn` (which is the index of the first day of the week)\n * and `options.firstWeekContainsDate` (which is the day of January, which is always in\n * the first week of the week-numbering year)\n *\n * Week numbering: https://en.wikipedia.org/wiki/Week#The_ISO_week_date_system\n *\n * @param date - The given date\n * @param options - An object with options\n *\n * @returns The week\n *\n * @example\n * // Which week of the local week numbering year is 2 January 2005 with default options?\n * const result = getWeek(new Date(2005, 0, 2))\n * //=> 2\n *\n * @example\n * // Which week of the local week numbering year is 2 January 2005,\n * // if Monday is the first day of the week,\n * // and the first week of the year always contains 4 January?\n * const result = getWeek(new Date(2005, 0, 2), {\n *   weekStartsOn: 1,\n *   firstWeekContainsDate: 4\n * })\n * //=> 53\n */\nexport function getWeek(date, options) {\n  const _date = toDate(date, options?.in);\n  const diff = +startOfWeek(_date, options) - +startOfWeekYear(_date, options);\n\n  // Round the number of weeks to the nearest integer because the number of\n  // milliseconds in a week is not constant (e.g. it's different in the week of\n  // the daylight saving time clock shift).\n  return Math.round(diff / millisecondsInWeek) + 1;\n}\n\n// Fallback for modularized imports:\nexport default getWeek;","export function addLeadingZeros(number, targetLength) {\n  const sign = number < 0 ? \"-\" : \"\";\n  const output = Math.abs(number).toString().padStart(targetLength, \"0\");\n  return sign + output;\n}","import { addLeadingZeros } from \"../addLeadingZeros.js\";\n\n/*\n * |     | Unit                           |     | Unit                           |\n * |-----|--------------------------------|-----|--------------------------------|\n * |  a  | AM, PM                         |  A* |                                |\n * |  d  | Day of month                   |  D  |                                |\n * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\n * |  m  | Minute                         |  M  | Month                          |\n * |  s  | Second                         |  S  | Fraction of second             |\n * |  y  | Year (abs)                     |  Y  |                                |\n *\n * Letters marked by * are not implemented but reserved by Unicode standard.\n */\n\nexport const lightFormatters = {\n  // Year\n  y(date, token) {\n    // From http://www.unicode.org/reports/tr35/tr35-31/tr35-dates.html#Date_Format_tokens\n    // | Year     |     y | yy |   yyy |  yyyy | yyyyy |\n    // |----------|-------|----|-------|-------|-------|\n    // | AD 1     |     1 | 01 |   001 |  0001 | 00001 |\n    // | AD 12    |    12 | 12 |   012 |  0012 | 00012 |\n    // | AD 123   |   123 | 23 |   123 |  0123 | 00123 |\n    // | AD 1234  |  1234 | 34 |  1234 |  1234 | 01234 |\n    // | AD 12345 | 12345 | 45 | 12345 | 12345 | 12345 |\n\n    const signedYear = date.getFullYear();\n    // Returns 1 for 1 BC (which is year 0 in JavaScript)\n    const year = signedYear > 0 ? signedYear : 1 - signedYear;\n    return addLeadingZeros(token === \"yy\" ? year % 100 : year, token.length);\n  },\n  // Month\n  M(date, token) {\n    const month = date.getMonth();\n    return token === \"M\" ? String(month + 1) : addLeadingZeros(month + 1, 2);\n  },\n  // Day of the month\n  d(date, token) {\n    return addLeadingZeros(date.getDate(), token.length);\n  },\n  // AM or PM\n  a(date, token) {\n    const dayPeriodEnumValue = date.getHours() / 12 >= 1 ? \"pm\" : \"am\";\n    switch (token) {\n      case \"a\":\n      case \"aa\":\n        return dayPeriodEnumValue.toUpperCase();\n      case \"aaa\":\n        return dayPeriodEnumValue;\n      case \"aaaaa\":\n        return dayPeriodEnumValue[0];\n      case \"aaaa\":\n      default:\n        return dayPeriodEnumValue === \"am\" ? \"a.m.\" : \"p.m.\";\n    }\n  },\n  // Hour [1-12]\n  h(date, token) {\n    return addLeadingZeros(date.getHours() % 12 || 12, token.length);\n  },\n  // Hour [0-23]\n  H(date, token) {\n    return addLeadingZeros(date.getHours(), token.length);\n  },\n  // Minute\n  m(date, token) {\n    return addLeadingZeros(date.getMinutes(), token.length);\n  },\n  // Second\n  s(date, token) {\n    return addLeadingZeros(date.getSeconds(), token.length);\n  },\n  // Fraction of second\n  S(date, token) {\n    const numberOfDigits = token.length;\n    const milliseconds = date.getMilliseconds();\n    const fractionalSeconds = Math.trunc(milliseconds * Math.pow(10, numberOfDigits - 3));\n    return addLeadingZeros(fractionalSeconds, token.length);\n  }\n};","import { getDayOfYear } from \"../../getDayOfYear.js\";\nimport { getISOWeek } from \"../../getISOWeek.js\";\nimport { getISOWeekYear } from \"../../getISOWeekYear.js\";\nimport { getWeek } from \"../../getWeek.js\";\nimport { getWeekYear } from \"../../getWeekYear.js\";\nimport { addLeadingZeros } from \"../addLeadingZeros.js\";\nimport { lightFormatters } from \"./lightFormatters.js\";\nconst dayPeriodEnum = {\n  am: \"am\",\n  pm: \"pm\",\n  midnight: \"midnight\",\n  noon: \"noon\",\n  morning: \"morning\",\n  afternoon: \"afternoon\",\n  evening: \"evening\",\n  night: \"night\"\n};\n\n/*\n * |     | Unit                           |     | Unit                           |\n * |-----|--------------------------------|-----|--------------------------------|\n * |  a  | AM, PM                         |  A* | Milliseconds in day            |\n * |  b  | AM, PM, noon, midnight         |  B  | Flexible day period            |\n * |  c  | Stand-alone local day of week  |  C* | Localized hour w/ day period   |\n * |  d  | Day of month                   |  D  | Day of year                    |\n * |  e  | Local day of week              |  E  | Day of week                    |\n * |  f  |                                |  F* | Day of week in month           |\n * |  g* | Modified Julian day            |  G  | Era                            |\n * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\n * |  i! | ISO day of week                |  I! | ISO week of year               |\n * |  j* | Localized hour w/ day period   |  J* | Localized hour w/o day period  |\n * |  k  | Hour [1-24]                    |  K  | Hour [0-11]                    |\n * |  l* | (deprecated)                   |  L  | Stand-alone month              |\n * |  m  | Minute                         |  M  | Month                          |\n * |  n  |                                |  N  |                                |\n * |  o! | Ordinal number modifier        |  O  | Timezone (GMT)                 |\n * |  p! | Long localized time            |  P! | Long localized date            |\n * |  q  | Stand-alone quarter            |  Q  | Quarter                        |\n * |  r* | Related Gregorian year         |  R! | ISO week-numbering year        |\n * |  s  | Second                         |  S  | Fraction of second             |\n * |  t! | Seconds timestamp              |  T! | Milliseconds timestamp         |\n * |  u  | Extended year                  |  U* | Cyclic year                    |\n * |  v* | Timezone (generic non-locat.)  |  V* | Timezone (location)            |\n * |  w  | Local week of year             |  W* | Week of month                  |\n * |  x  | Timezone (ISO-8601 w/o Z)      |  X  | Timezone (ISO-8601)            |\n * |  y  | Year (abs)                     |  Y  | Local week-numbering year      |\n * |  z  | Timezone (specific non-locat.) |  Z* | Timezone (aliases)             |\n *\n * Letters marked by * are not implemented but reserved by Unicode standard.\n *\n * Letters marked by ! are non-standard, but implemented by date-fns:\n * - `o` modifies the previous token to turn it into an ordinal (see `format` docs)\n * - `i` is ISO day of week. For `i` and `ii` is returns numeric ISO week days,\n *   i.e. 7 for Sunday, 1 for Monday, etc.\n * - `I` is ISO week of year, as opposed to `w` which is local week of year.\n * - `R` is ISO week-numbering year, as opposed to `Y` which is local week-numbering year.\n *   `R` is supposed to be used in conjunction with `I` and `i`\n *   for universal ISO week-numbering date, whereas\n *   `Y` is supposed to be used in conjunction with `w` and `e`\n *   for week-numbering date specific to the locale.\n * - `P` is long localized date format\n * - `p` is long localized time format\n */\n\nexport const formatters = {\n  // Era\n  G: function (date, token, localize) {\n    const era = date.getFullYear() > 0 ? 1 : 0;\n    switch (token) {\n      // AD, BC\n      case \"G\":\n      case \"GG\":\n      case \"GGG\":\n        return localize.era(era, {\n          width: \"abbreviated\"\n        });\n      // A, B\n      case \"GGGGG\":\n        return localize.era(era, {\n          width: \"narrow\"\n        });\n      // Anno Domini, Before Christ\n      case \"GGGG\":\n      default:\n        return localize.era(era, {\n          width: \"wide\"\n        });\n    }\n  },\n  // Year\n  y: function (date, token, localize) {\n    // Ordinal number\n    if (token === \"yo\") {\n      const signedYear = date.getFullYear();\n      // Returns 1 for 1 BC (which is year 0 in JavaScript)\n      const year = signedYear > 0 ? signedYear : 1 - signedYear;\n      return localize.ordinalNumber(year, {\n        unit: \"year\"\n      });\n    }\n    return lightFormatters.y(date, token);\n  },\n  // Local week-numbering year\n  Y: function (date, token, localize, options) {\n    const signedWeekYear = getWeekYear(date, options);\n    // Returns 1 for 1 BC (which is year 0 in JavaScript)\n    const weekYear = signedWeekYear > 0 ? signedWeekYear : 1 - signedWeekYear;\n\n    // Two digit year\n    if (token === \"YY\") {\n      const twoDigitYear = weekYear % 100;\n      return addLeadingZeros(twoDigitYear, 2);\n    }\n\n    // Ordinal number\n    if (token === \"Yo\") {\n      return localize.ordinalNumber(weekYear, {\n        unit: \"year\"\n      });\n    }\n\n    // Padding\n    return addLeadingZeros(weekYear, token.length);\n  },\n  // ISO week-numbering year\n  R: function (date, token) {\n    const isoWeekYear = getISOWeekYear(date);\n\n    // Padding\n    return addLeadingZeros(isoWeekYear, token.length);\n  },\n  // Extended year. This is a single number designating the year of this calendar system.\n  // The main difference between `y` and `u` localizers are B.C. years:\n  // | Year | `y` | `u` |\n  // |------|-----|-----|\n  // | AC 1 |   1 |   1 |\n  // | BC 1 |   1 |   0 |\n  // | BC 2 |   2 |  -1 |\n  // Also `yy` always returns the last two digits of a year,\n  // while `uu` pads single digit years to 2 characters and returns other years unchanged.\n  u: function (date, token) {\n    const year = date.getFullYear();\n    return addLeadingZeros(year, token.length);\n  },\n  // Quarter\n  Q: function (date, token, localize) {\n    const quarter = Math.ceil((date.getMonth() + 1) / 3);\n    switch (token) {\n      // 1, 2, 3, 4\n      case \"Q\":\n        return String(quarter);\n      // 01, 02, 03, 04\n      case \"QQ\":\n        return addLeadingZeros(quarter, 2);\n      // 1st, 2nd, 3rd, 4th\n      case \"Qo\":\n        return localize.ordinalNumber(quarter, {\n          unit: \"quarter\"\n        });\n      // Q1, Q2, Q3, Q4\n      case \"QQQ\":\n        return localize.quarter(quarter, {\n          width: \"abbreviated\",\n          context: \"formatting\"\n        });\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n      case \"QQQQQ\":\n        return localize.quarter(quarter, {\n          width: \"narrow\",\n          context: \"formatting\"\n        });\n      // 1st quarter, 2nd quarter, ...\n      case \"QQQQ\":\n      default:\n        return localize.quarter(quarter, {\n          width: \"wide\",\n          context: \"formatting\"\n        });\n    }\n  },\n  // Stand-alone quarter\n  q: function (date, token, localize) {\n    const quarter = Math.ceil((date.getMonth() + 1) / 3);\n    switch (token) {\n      // 1, 2, 3, 4\n      case \"q\":\n        return String(quarter);\n      // 01, 02, 03, 04\n      case \"qq\":\n        return addLeadingZeros(quarter, 2);\n      // 1st, 2nd, 3rd, 4th\n      case \"qo\":\n        return localize.ordinalNumber(quarter, {\n          unit: \"quarter\"\n        });\n      // Q1, Q2, Q3, Q4\n      case \"qqq\":\n        return localize.quarter(quarter, {\n          width: \"abbreviated\",\n          context: \"standalone\"\n        });\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n      case \"qqqqq\":\n        return localize.quarter(quarter, {\n          width: \"narrow\",\n          context: \"standalone\"\n        });\n      // 1st quarter, 2nd quarter, ...\n      case \"qqqq\":\n      default:\n        return localize.quarter(quarter, {\n          width: \"wide\",\n          context: \"standalone\"\n        });\n    }\n  },\n  // Month\n  M: function (date, token, localize) {\n    const month = date.getMonth();\n    switch (token) {\n      case \"M\":\n      case \"MM\":\n        return lightFormatters.M(date, token);\n      // 1st, 2nd, ..., 12th\n      case \"Mo\":\n        return localize.ordinalNumber(month + 1, {\n          unit: \"month\"\n        });\n      // Jan, Feb, ..., Dec\n      case \"MMM\":\n        return localize.month(month, {\n          width: \"abbreviated\",\n          context: \"formatting\"\n        });\n      // J, F, ..., D\n      case \"MMMMM\":\n        return localize.month(month, {\n          width: \"narrow\",\n          context: \"formatting\"\n        });\n      // January, February, ..., December\n      case \"MMMM\":\n      default:\n        return localize.month(month, {\n          width: \"wide\",\n          context: \"formatting\"\n        });\n    }\n  },\n  // Stand-alone month\n  L: function (date, token, localize) {\n    const month = date.getMonth();\n    switch (token) {\n      // 1, 2, ..., 12\n      case \"L\":\n        return String(month + 1);\n      // 01, 02, ..., 12\n      case \"LL\":\n        return addLeadingZeros(month + 1, 2);\n      // 1st, 2nd, ..., 12th\n      case \"Lo\":\n        return localize.ordinalNumber(month + 1, {\n          unit: \"month\"\n        });\n      // Jan, Feb, ..., Dec\n      case \"LLL\":\n        return localize.month(month, {\n          width: \"abbreviated\",\n          context: \"standalone\"\n        });\n      // J, F, ..., D\n      case \"LLLLL\":\n        return localize.month(month, {\n          width: \"narrow\",\n          context: \"standalone\"\n        });\n      // January, February, ..., December\n      case \"LLLL\":\n      default:\n        return localize.month(month, {\n          width: \"wide\",\n          context: \"standalone\"\n        });\n    }\n  },\n  // Local week of year\n  w: function (date, token, localize, options) {\n    const week = getWeek(date, options);\n    if (token === \"wo\") {\n      return localize.ordinalNumber(week, {\n        unit: \"week\"\n      });\n    }\n    return addLeadingZeros(week, token.length);\n  },\n  // ISO week of year\n  I: function (date, token, localize) {\n    const isoWeek = getISOWeek(date);\n    if (token === \"Io\") {\n      return localize.ordinalNumber(isoWeek, {\n        unit: \"week\"\n      });\n    }\n    return addLeadingZeros(isoWeek, token.length);\n  },\n  // Day of the month\n  d: function (date, token, localize) {\n    if (token === \"do\") {\n      return localize.ordinalNumber(date.getDate(), {\n        unit: \"date\"\n      });\n    }\n    return lightFormatters.d(date, token);\n  },\n  // Day of year\n  D: function (date, token, localize) {\n    const dayOfYear = getDayOfYear(date);\n    if (token === \"Do\") {\n      return localize.ordinalNumber(dayOfYear, {\n        unit: \"dayOfYear\"\n      });\n    }\n    return addLeadingZeros(dayOfYear, token.length);\n  },\n  // Day of week\n  E: function (date, token, localize) {\n    const dayOfWeek = date.getDay();\n    switch (token) {\n      // Tue\n      case \"E\":\n      case \"EE\":\n      case \"EEE\":\n        return localize.day(dayOfWeek, {\n          width: \"abbreviated\",\n          context: \"formatting\"\n        });\n      // T\n      case \"EEEEE\":\n        return localize.day(dayOfWeek, {\n          width: \"narrow\",\n          context: \"formatting\"\n        });\n      // Tu\n      case \"EEEEEE\":\n        return localize.day(dayOfWeek, {\n          width: \"short\",\n          context: \"formatting\"\n        });\n      // Tuesday\n      case \"EEEE\":\n      default:\n        return localize.day(dayOfWeek, {\n          width: \"wide\",\n          context: \"formatting\"\n        });\n    }\n  },\n  // Local day of week\n  e: function (date, token, localize, options) {\n    const dayOfWeek = date.getDay();\n    const localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;\n    switch (token) {\n      // Numerical value (Nth day of week with current locale or weekStartsOn)\n      case \"e\":\n        return String(localDayOfWeek);\n      // Padded numerical value\n      case \"ee\":\n        return addLeadingZeros(localDayOfWeek, 2);\n      // 1st, 2nd, ..., 7th\n      case \"eo\":\n        return localize.ordinalNumber(localDayOfWeek, {\n          unit: \"day\"\n        });\n      case \"eee\":\n        return localize.day(dayOfWeek, {\n          width: \"abbreviated\",\n          context: \"formatting\"\n        });\n      // T\n      case \"eeeee\":\n        return localize.day(dayOfWeek, {\n          width: \"narrow\",\n          context: \"formatting\"\n        });\n      // Tu\n      case \"eeeeee\":\n        return localize.day(dayOfWeek, {\n          width: \"short\",\n          context: \"formatting\"\n        });\n      // Tuesday\n      case \"eeee\":\n      default:\n        return localize.day(dayOfWeek, {\n          width: \"wide\",\n          context: \"formatting\"\n        });\n    }\n  },\n  // Stand-alone local day of week\n  c: function (date, token, localize, options) {\n    const dayOfWeek = date.getDay();\n    const localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;\n    switch (token) {\n      // Numerical value (same as in `e`)\n      case \"c\":\n        return String(localDayOfWeek);\n      // Padded numerical value\n      case \"cc\":\n        return addLeadingZeros(localDayOfWeek, token.length);\n      // 1st, 2nd, ..., 7th\n      case \"co\":\n        return localize.ordinalNumber(localDayOfWeek, {\n          unit: \"day\"\n        });\n      case \"ccc\":\n        return localize.day(dayOfWeek, {\n          width: \"abbreviated\",\n          context: \"standalone\"\n        });\n      // T\n      case \"ccccc\":\n        return localize.day(dayOfWeek, {\n          width: \"narrow\",\n          context: \"standalone\"\n        });\n      // Tu\n      case \"cccccc\":\n        return localize.day(dayOfWeek, {\n          width: \"short\",\n          context: \"standalone\"\n        });\n      // Tuesday\n      case \"cccc\":\n      default:\n        return localize.day(dayOfWeek, {\n          width: \"wide\",\n          context: \"standalone\"\n        });\n    }\n  },\n  // ISO day of week\n  i: function (date, token, localize) {\n    const dayOfWeek = date.getDay();\n    const isoDayOfWeek = dayOfWeek === 0 ? 7 : dayOfWeek;\n    switch (token) {\n      // 2\n      case \"i\":\n        return String(isoDayOfWeek);\n      // 02\n      case \"ii\":\n        return addLeadingZeros(isoDayOfWeek, token.length);\n      // 2nd\n      case \"io\":\n        return localize.ordinalNumber(isoDayOfWeek, {\n          unit: \"day\"\n        });\n      // Tue\n      case \"iii\":\n        return localize.day(dayOfWeek, {\n          width: \"abbreviated\",\n          context: \"formatting\"\n        });\n      // T\n      case \"iiiii\":\n        return localize.day(dayOfWeek, {\n          width: \"narrow\",\n          context: \"formatting\"\n        });\n      // Tu\n      case \"iiiiii\":\n        return localize.day(dayOfWeek, {\n          width: \"short\",\n          context: \"formatting\"\n        });\n      // Tuesday\n      case \"iiii\":\n      default:\n        return localize.day(dayOfWeek, {\n          width: \"wide\",\n          context: \"formatting\"\n        });\n    }\n  },\n  // AM or PM\n  a: function (date, token, localize) {\n    const hours = date.getHours();\n    const dayPeriodEnumValue = hours / 12 >= 1 ? \"pm\" : \"am\";\n    switch (token) {\n      case \"a\":\n      case \"aa\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"abbreviated\",\n          context: \"formatting\"\n        });\n      case \"aaa\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"abbreviated\",\n          context: \"formatting\"\n        }).toLowerCase();\n      case \"aaaaa\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"narrow\",\n          context: \"formatting\"\n        });\n      case \"aaaa\":\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"wide\",\n          context: \"formatting\"\n        });\n    }\n  },\n  // AM, PM, midnight, noon\n  b: function (date, token, localize) {\n    const hours = date.getHours();\n    let dayPeriodEnumValue;\n    if (hours === 12) {\n      dayPeriodEnumValue = dayPeriodEnum.noon;\n    } else if (hours === 0) {\n      dayPeriodEnumValue = dayPeriodEnum.midnight;\n    } else {\n      dayPeriodEnumValue = hours / 12 >= 1 ? \"pm\" : \"am\";\n    }\n    switch (token) {\n      case \"b\":\n      case \"bb\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"abbreviated\",\n          context: \"formatting\"\n        });\n      case \"bbb\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"abbreviated\",\n          context: \"formatting\"\n        }).toLowerCase();\n      case \"bbbbb\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"narrow\",\n          context: \"formatting\"\n        });\n      case \"bbbb\":\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"wide\",\n          context: \"formatting\"\n        });\n    }\n  },\n  // in the morning, in the afternoon, in the evening, at night\n  B: function (date, token, localize) {\n    const hours = date.getHours();\n    let dayPeriodEnumValue;\n    if (hours >= 17) {\n      dayPeriodEnumValue = dayPeriodEnum.evening;\n    } else if (hours >= 12) {\n      dayPeriodEnumValue = dayPeriodEnum.afternoon;\n    } else if (hours >= 4) {\n      dayPeriodEnumValue = dayPeriodEnum.morning;\n    } else {\n      dayPeriodEnumValue = dayPeriodEnum.night;\n    }\n    switch (token) {\n      case \"B\":\n      case \"BB\":\n      case \"BBB\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"abbreviated\",\n          context: \"formatting\"\n        });\n      case \"BBBBB\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"narrow\",\n          context: \"formatting\"\n        });\n      case \"BBBB\":\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"wide\",\n          context: \"formatting\"\n        });\n    }\n  },\n  // Hour [1-12]\n  h: function (date, token, localize) {\n    if (token === \"ho\") {\n      let hours = date.getHours() % 12;\n      if (hours === 0) hours = 12;\n      return localize.ordinalNumber(hours, {\n        unit: \"hour\"\n      });\n    }\n    return lightFormatters.h(date, token);\n  },\n  // Hour [0-23]\n  H: function (date, token, localize) {\n    if (token === \"Ho\") {\n      return localize.ordinalNumber(date.getHours(), {\n        unit: \"hour\"\n      });\n    }\n    return lightFormatters.H(date, token);\n  },\n  // Hour [0-11]\n  K: function (date, token, localize) {\n    const hours = date.getHours() % 12;\n    if (token === \"Ko\") {\n      return localize.ordinalNumber(hours, {\n        unit: \"hour\"\n      });\n    }\n    return addLeadingZeros(hours, token.length);\n  },\n  // Hour [1-24]\n  k: function (date, token, localize) {\n    let hours = date.getHours();\n    if (hours === 0) hours = 24;\n    if (token === \"ko\") {\n      return localize.ordinalNumber(hours, {\n        unit: \"hour\"\n      });\n    }\n    return addLeadingZeros(hours, token.length);\n  },\n  // Minute\n  m: function (date, token, localize) {\n    if (token === \"mo\") {\n      return localize.ordinalNumber(date.getMinutes(), {\n        unit: \"minute\"\n      });\n    }\n    return lightFormatters.m(date, token);\n  },\n  // Second\n  s: function (date, token, localize) {\n    if (token === \"so\") {\n      return localize.ordinalNumber(date.getSeconds(), {\n        unit: \"second\"\n      });\n    }\n    return lightFormatters.s(date, token);\n  },\n  // Fraction of second\n  S: function (date, token) {\n    return lightFormatters.S(date, token);\n  },\n  // Timezone (ISO-8601. If offset is 0, output is always `'Z'`)\n  X: function (date, token, _localize) {\n    const timezoneOffset = date.getTimezoneOffset();\n    if (timezoneOffset === 0) {\n      return \"Z\";\n    }\n    switch (token) {\n      // Hours and optional minutes\n      case \"X\":\n        return formatTimezoneWithOptionalMinutes(timezoneOffset);\n\n      // Hours, minutes and optional seconds without `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `XX`\n      case \"XXXX\":\n      case \"XX\":\n        // Hours and minutes without `:` delimiter\n        return formatTimezone(timezoneOffset);\n\n      // Hours, minutes and optional seconds with `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `XXX`\n      case \"XXXXX\":\n      case \"XXX\": // Hours and minutes with `:` delimiter\n      default:\n        return formatTimezone(timezoneOffset, \":\");\n    }\n  },\n  // Timezone (ISO-8601. If offset is 0, output is `'+00:00'` or equivalent)\n  x: function (date, token, _localize) {\n    const timezoneOffset = date.getTimezoneOffset();\n    switch (token) {\n      // Hours and optional minutes\n      case \"x\":\n        return formatTimezoneWithOptionalMinutes(timezoneOffset);\n\n      // Hours, minutes and optional seconds without `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `xx`\n      case \"xxxx\":\n      case \"xx\":\n        // Hours and minutes without `:` delimiter\n        return formatTimezone(timezoneOffset);\n\n      // Hours, minutes and optional seconds with `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `xxx`\n      case \"xxxxx\":\n      case \"xxx\": // Hours and minutes with `:` delimiter\n      default:\n        return formatTimezone(timezoneOffset, \":\");\n    }\n  },\n  // Timezone (GMT)\n  O: function (date, token, _localize) {\n    const timezoneOffset = date.getTimezoneOffset();\n    switch (token) {\n      // Short\n      case \"O\":\n      case \"OO\":\n      case \"OOO\":\n        return \"GMT\" + formatTimezoneShort(timezoneOffset, \":\");\n      // Long\n      case \"OOOO\":\n      default:\n        return \"GMT\" + formatTimezone(timezoneOffset, \":\");\n    }\n  },\n  // Timezone (specific non-location)\n  z: function (date, token, _localize) {\n    const timezoneOffset = date.getTimezoneOffset();\n    switch (token) {\n      // Short\n      case \"z\":\n      case \"zz\":\n      case \"zzz\":\n        return \"GMT\" + formatTimezoneShort(timezoneOffset, \":\");\n      // Long\n      case \"zzzz\":\n      default:\n        return \"GMT\" + formatTimezone(timezoneOffset, \":\");\n    }\n  },\n  // Seconds timestamp\n  t: function (date, token, _localize) {\n    const timestamp = Math.trunc(+date / 1000);\n    return addLeadingZeros(timestamp, token.length);\n  },\n  // Milliseconds timestamp\n  T: function (date, token, _localize) {\n    return addLeadingZeros(+date, token.length);\n  }\n};\nfunction formatTimezoneShort(offset, delimiter = \"\") {\n  const sign = offset > 0 ? \"-\" : \"+\";\n  const absOffset = Math.abs(offset);\n  const hours = Math.trunc(absOffset / 60);\n  const minutes = absOffset % 60;\n  if (minutes === 0) {\n    return sign + String(hours);\n  }\n  return sign + String(hours) + delimiter + addLeadingZeros(minutes, 2);\n}\nfunction formatTimezoneWithOptionalMinutes(offset, delimiter) {\n  if (offset % 60 === 0) {\n    const sign = offset > 0 ? \"-\" : \"+\";\n    return sign + addLeadingZeros(Math.abs(offset) / 60, 2);\n  }\n  return formatTimezone(offset, delimiter);\n}\nfunction formatTimezone(offset, delimiter = \"\") {\n  const sign = offset > 0 ? \"-\" : \"+\";\n  const absOffset = Math.abs(offset);\n  const hours = addLeadingZeros(Math.trunc(absOffset / 60), 2);\n  const minutes = addLeadingZeros(absOffset % 60, 2);\n  return sign + hours + delimiter + minutes;\n}","const dateLongFormatter = (pattern, formatLong) => {\n  switch (pattern) {\n    case \"P\":\n      return formatLong.date({\n        width: \"short\"\n      });\n    case \"PP\":\n      return formatLong.date({\n        width: \"medium\"\n      });\n    case \"PPP\":\n      return formatLong.date({\n        width: \"long\"\n      });\n    case \"PPPP\":\n    default:\n      return formatLong.date({\n        width: \"full\"\n      });\n  }\n};\nconst timeLongFormatter = (pattern, formatLong) => {\n  switch (pattern) {\n    case \"p\":\n      return formatLong.time({\n        width: \"short\"\n      });\n    case \"pp\":\n      return formatLong.time({\n        width: \"medium\"\n      });\n    case \"ppp\":\n      return formatLong.time({\n        width: \"long\"\n      });\n    case \"pppp\":\n    default:\n      return formatLong.time({\n        width: \"full\"\n      });\n  }\n};\nconst dateTimeLongFormatter = (pattern, formatLong) => {\n  const matchResult = pattern.match(/(P+)(p+)?/) || [];\n  const datePattern = matchResult[1];\n  const timePattern = matchResult[2];\n  if (!timePattern) {\n    return dateLongFormatter(pattern, formatLong);\n  }\n  let dateTimeFormat;\n  switch (datePattern) {\n    case \"P\":\n      dateTimeFormat = formatLong.dateTime({\n        width: \"short\"\n      });\n      break;\n    case \"PP\":\n      dateTimeFormat = formatLong.dateTime({\n        width: \"medium\"\n      });\n      break;\n    case \"PPP\":\n      dateTimeFormat = formatLong.dateTime({\n        width: \"long\"\n      });\n      break;\n    case \"PPPP\":\n    default:\n      dateTimeFormat = formatLong.dateTime({\n        width: \"full\"\n      });\n      break;\n  }\n  return dateTimeFormat.replace(\"{{date}}\", dateLongFormatter(datePattern, formatLong)).replace(\"{{time}}\", timeLongFormatter(timePattern, formatLong));\n};\nexport const longFormatters = {\n  p: timeLongFormatter,\n  P: dateTimeLongFormatter\n};","const dayOfYearTokenRE = /^D+$/;\nconst weekYearTokenRE = /^Y+$/;\nconst throwTokens = [\"D\", \"DD\", \"YY\", \"YYYY\"];\nexport function isProtectedDayOfYearToken(token) {\n  return dayOfYearTokenRE.test(token);\n}\nexport function isProtectedWeekYearToken(token) {\n  return weekYearTokenRE.test(token);\n}\nexport function warnOrThrowProtectedError(token, format, input) {\n  const _message = message(token, format, input);\n  console.warn(_message);\n  if (throwTokens.includes(token)) throw new RangeError(_message);\n}\nfunction message(token, format, input) {\n  const subject = token[0] === \"Y\" ? \"years\" : \"days of the month\";\n  return `Use \\`${token.toLowerCase()}\\` instead of \\`${token}\\` (in \\`${format}\\`) for formatting ${subject} to the input \\`${input}\\`; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md`;\n}","import { defaultLocale } from \"./_lib/defaultLocale.js\";\nimport { getDefaultOptions } from \"./_lib/defaultOptions.js\";\nimport { formatters } from \"./_lib/format/formatters.js\";\nimport { longFormatters } from \"./_lib/format/longFormatters.js\";\nimport { isProtectedDayOfYearToken, isProtectedWeekYearToken, warnOrThrowProtectedError } from \"./_lib/protectedTokens.js\";\nimport { isValid } from \"./isValid.js\";\nimport { toDate } from \"./toDate.js\";\n\n// Rexports of internal for libraries to use.\n// See: https://github.com/date-fns/date-fns/issues/3638#issuecomment-1877082874\nexport { formatters, longFormatters };\n\n// This RegExp consists of three parts separated by `|`:\n// - [yYQqMLwIdDecihHKkms]o matches any available ordinal number token\n//   (one of the certain letters followed by `o`)\n// - (\\w)\\1* matches any sequences of the same letter\n// - '' matches two quote characters in a row\n// - '(''|[^'])+('|$) matches anything surrounded by two quote characters ('),\n//   except a single quote symbol, which ends the sequence.\n//   Two quote characters do not end the sequence.\n//   If there is no matching single quote\n//   then the sequence will continue until the end of the string.\n// - . matches any single character unmatched by previous parts of the RegExps\nconst formattingTokensRegExp = /[yYQqMLwIdDecihHKkms]o|(\\w)\\1*|''|'(''|[^'])+('|$)|./g;\n\n// This RegExp catches symbols escaped by quotes, and also\n// sequences of symbols P, p, and the combinations like `PPPPPPPppppp`\nconst longFormattingTokensRegExp = /P+p+|P+|p+|''|'(''|[^'])+('|$)|./g;\nconst escapedStringRegExp = /^'([^]*?)'?$/;\nconst doubleQuoteRegExp = /''/g;\nconst unescapedLatinCharacterRegExp = /[a-zA-Z]/;\nexport { format as formatDate };\n\n/**\n * The {@link format} function options.\n */\n\n/**\n * @name format\n * @alias formatDate\n * @category Common Helpers\n * @summary Format the date.\n *\n * @description\n * Return the formatted date string in the given format. The result may vary by locale.\n *\n * > ⚠️ Please note that the `format` tokens differ from Moment.js and other libraries.\n * > See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *\n * The characters wrapped between two single quotes characters (') are escaped.\n * Two single quotes in a row, whether inside or outside a quoted sequence, represent a 'real' single quote.\n * (see the last example)\n *\n * Format of the string is based on Unicode Technical Standard #35:\n * https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table\n * with a few additions (see note 7 below the table).\n *\n * Accepted patterns:\n * | Unit                            | Pattern | Result examples                   | Notes |\n * |---------------------------------|---------|-----------------------------------|-------|\n * | Era                             | G..GGG  | AD, BC                            |       |\n * |                                 | GGGG    | Anno Domini, Before Christ        | 2     |\n * |                                 | GGGGG   | A, B                              |       |\n * | Calendar year                   | y       | 44, 1, 1900, 2017                 | 5     |\n * |                                 | yo      | 44th, 1st, 0th, 17th              | 5,7   |\n * |                                 | yy      | 44, 01, 00, 17                    | 5     |\n * |                                 | yyy     | 044, 001, 1900, 2017              | 5     |\n * |                                 | yyyy    | 0044, 0001, 1900, 2017            | 5     |\n * |                                 | yyyyy   | ...                               | 3,5   |\n * | Local week-numbering year       | Y       | 44, 1, 1900, 2017                 | 5     |\n * |                                 | Yo      | 44th, 1st, 1900th, 2017th         | 5,7   |\n * |                                 | YY      | 44, 01, 00, 17                    | 5,8   |\n * |                                 | YYY     | 044, 001, 1900, 2017              | 5     |\n * |                                 | YYYY    | 0044, 0001, 1900, 2017            | 5,8   |\n * |                                 | YYYYY   | ...                               | 3,5   |\n * | ISO week-numbering year         | R       | -43, 0, 1, 1900, 2017             | 5,7   |\n * |                                 | RR      | -43, 00, 01, 1900, 2017           | 5,7   |\n * |                                 | RRR     | -043, 000, 001, 1900, 2017        | 5,7   |\n * |                                 | RRRR    | -0043, 0000, 0001, 1900, 2017     | 5,7   |\n * |                                 | RRRRR   | ...                               | 3,5,7 |\n * | Extended year                   | u       | -43, 0, 1, 1900, 2017             | 5     |\n * |                                 | uu      | -43, 01, 1900, 2017               | 5     |\n * |                                 | uuu     | -043, 001, 1900, 2017             | 5     |\n * |                                 | uuuu    | -0043, 0001, 1900, 2017           | 5     |\n * |                                 | uuuuu   | ...                               | 3,5   |\n * | Quarter (formatting)            | Q       | 1, 2, 3, 4                        |       |\n * |                                 | Qo      | 1st, 2nd, 3rd, 4th                | 7     |\n * |                                 | QQ      | 01, 02, 03, 04                    |       |\n * |                                 | QQQ     | Q1, Q2, Q3, Q4                    |       |\n * |                                 | QQQQ    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 | QQQQQ   | 1, 2, 3, 4                        | 4     |\n * | Quarter (stand-alone)           | q       | 1, 2, 3, 4                        |       |\n * |                                 | qo      | 1st, 2nd, 3rd, 4th                | 7     |\n * |                                 | qq      | 01, 02, 03, 04                    |       |\n * |                                 | qqq     | Q1, Q2, Q3, Q4                    |       |\n * |                                 | qqqq    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 | qqqqq   | 1, 2, 3, 4                        | 4     |\n * | Month (formatting)              | M       | 1, 2, ..., 12                     |       |\n * |                                 | Mo      | 1st, 2nd, ..., 12th               | 7     |\n * |                                 | MM      | 01, 02, ..., 12                   |       |\n * |                                 | MMM     | Jan, Feb, ..., Dec                |       |\n * |                                 | MMMM    | January, February, ..., December  | 2     |\n * |                                 | MMMMM   | J, F, ..., D                      |       |\n * | Month (stand-alone)             | L       | 1, 2, ..., 12                     |       |\n * |                                 | Lo      | 1st, 2nd, ..., 12th               | 7     |\n * |                                 | LL      | 01, 02, ..., 12                   |       |\n * |                                 | LLL     | Jan, Feb, ..., Dec                |       |\n * |                                 | LLLL    | January, February, ..., December  | 2     |\n * |                                 | LLLLL   | J, F, ..., D                      |       |\n * | Local week of year              | w       | 1, 2, ..., 53                     |       |\n * |                                 | wo      | 1st, 2nd, ..., 53th               | 7     |\n * |                                 | ww      | 01, 02, ..., 53                   |       |\n * | ISO week of year                | I       | 1, 2, ..., 53                     | 7     |\n * |                                 | Io      | 1st, 2nd, ..., 53th               | 7     |\n * |                                 | II      | 01, 02, ..., 53                   | 7     |\n * | Day of month                    | d       | 1, 2, ..., 31                     |       |\n * |                                 | do      | 1st, 2nd, ..., 31st               | 7     |\n * |                                 | dd      | 01, 02, ..., 31                   |       |\n * | Day of year                     | D       | 1, 2, ..., 365, 366               | 9     |\n * |                                 | Do      | 1st, 2nd, ..., 365th, 366th       | 7     |\n * |                                 | DD      | 01, 02, ..., 365, 366             | 9     |\n * |                                 | DDD     | 001, 002, ..., 365, 366           |       |\n * |                                 | DDDD    | ...                               | 3     |\n * | Day of week (formatting)        | E..EEE  | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 | EEEE    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | EEEEE   | M, T, W, T, F, S, S               |       |\n * |                                 | EEEEEE  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | ISO day of week (formatting)    | i       | 1, 2, 3, ..., 7                   | 7     |\n * |                                 | io      | 1st, 2nd, ..., 7th                | 7     |\n * |                                 | ii      | 01, 02, ..., 07                   | 7     |\n * |                                 | iii     | Mon, Tue, Wed, ..., Sun           | 7     |\n * |                                 | iiii    | Monday, Tuesday, ..., Sunday      | 2,7   |\n * |                                 | iiiii   | M, T, W, T, F, S, S               | 7     |\n * |                                 | iiiiii  | Mo, Tu, We, Th, Fr, Sa, Su        | 7     |\n * | Local day of week (formatting)  | e       | 2, 3, 4, ..., 1                   |       |\n * |                                 | eo      | 2nd, 3rd, ..., 1st                | 7     |\n * |                                 | ee      | 02, 03, ..., 01                   |       |\n * |                                 | eee     | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 | eeee    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | eeeee   | M, T, W, T, F, S, S               |       |\n * |                                 | eeeeee  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | Local day of week (stand-alone) | c       | 2, 3, 4, ..., 1                   |       |\n * |                                 | co      | 2nd, 3rd, ..., 1st                | 7     |\n * |                                 | cc      | 02, 03, ..., 01                   |       |\n * |                                 | ccc     | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 | cccc    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | ccccc   | M, T, W, T, F, S, S               |       |\n * |                                 | cccccc  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | AM, PM                          | a..aa   | AM, PM                            |       |\n * |                                 | aaa     | am, pm                            |       |\n * |                                 | aaaa    | a.m., p.m.                        | 2     |\n * |                                 | aaaaa   | a, p                              |       |\n * | AM, PM, noon, midnight          | b..bb   | AM, PM, noon, midnight            |       |\n * |                                 | bbb     | am, pm, noon, midnight            |       |\n * |                                 | bbbb    | a.m., p.m., noon, midnight        | 2     |\n * |                                 | bbbbb   | a, p, n, mi                       |       |\n * | Flexible day period             | B..BBB  | at night, in the morning, ...     |       |\n * |                                 | BBBB    | at night, in the morning, ...     | 2     |\n * |                                 | BBBBB   | at night, in the morning, ...     |       |\n * | Hour [1-12]                     | h       | 1, 2, ..., 11, 12                 |       |\n * |                                 | ho      | 1st, 2nd, ..., 11th, 12th         | 7     |\n * |                                 | hh      | 01, 02, ..., 11, 12               |       |\n * | Hour [0-23]                     | H       | 0, 1, 2, ..., 23                  |       |\n * |                                 | Ho      | 0th, 1st, 2nd, ..., 23rd          | 7     |\n * |                                 | HH      | 00, 01, 02, ..., 23               |       |\n * | Hour [0-11]                     | K       | 1, 2, ..., 11, 0                  |       |\n * |                                 | Ko      | 1st, 2nd, ..., 11th, 0th          | 7     |\n * |                                 | KK      | 01, 02, ..., 11, 00               |       |\n * | Hour [1-24]                     | k       | 24, 1, 2, ..., 23                 |       |\n * |                                 | ko      | 24th, 1st, 2nd, ..., 23rd         | 7     |\n * |                                 | kk      | 24, 01, 02, ..., 23               |       |\n * | Minute                          | m       | 0, 1, ..., 59                     |       |\n * |                                 | mo      | 0th, 1st, ..., 59th               | 7     |\n * |                                 | mm      | 00, 01, ..., 59                   |       |\n * | Second                          | s       | 0, 1, ..., 59                     |       |\n * |                                 | so      | 0th, 1st, ..., 59th               | 7     |\n * |                                 | ss      | 00, 01, ..., 59                   |       |\n * | Fraction of second              | S       | 0, 1, ..., 9                      |       |\n * |                                 | SS      | 00, 01, ..., 99                   |       |\n * |                                 | SSS     | 000, 001, ..., 999                |       |\n * |                                 | SSSS    | ...                               | 3     |\n * | Timezone (ISO-8601 w/ Z)        | X       | -08, +0530, Z                     |       |\n * |                                 | XX      | -0800, +0530, Z                   |       |\n * |                                 | XXX     | -08:00, +05:30, Z                 |       |\n * |                                 | XXXX    | -0800, +0530, Z, +123456          | 2     |\n * |                                 | XXXXX   | -08:00, +05:30, Z, +12:34:56      |       |\n * | Timezone (ISO-8601 w/o Z)       | x       | -08, +0530, +00                   |       |\n * |                                 | xx      | -0800, +0530, +0000               |       |\n * |                                 | xxx     | -08:00, +05:30, +00:00            | 2     |\n * |                                 | xxxx    | -0800, +0530, +0000, +123456      |       |\n * |                                 | xxxxx   | -08:00, +05:30, +00:00, +12:34:56 |       |\n * | Timezone (GMT)                  | O...OOO | GMT-8, GMT+5:30, GMT+0            |       |\n * |                                 | OOOO    | GMT-08:00, GMT+05:30, GMT+00:00   | 2     |\n * | Timezone (specific non-locat.)  | z...zzz | GMT-8, GMT+5:30, GMT+0            | 6     |\n * |                                 | zzzz    | GMT-08:00, GMT+05:30, GMT+00:00   | 2,6   |\n * | Seconds timestamp               | t       | 512969520                         | 7     |\n * |                                 | tt      | ...                               | 3,7   |\n * | Milliseconds timestamp          | T       | 512969520900                      | 7     |\n * |                                 | TT      | ...                               | 3,7   |\n * | Long localized date             | P       | 04/29/1453                        | 7     |\n * |                                 | PP      | Apr 29, 1453                      | 7     |\n * |                                 | PPP     | April 29th, 1453                  | 7     |\n * |                                 | PPPP    | Friday, April 29th, 1453          | 2,7   |\n * | Long localized time             | p       | 12:00 AM                          | 7     |\n * |                                 | pp      | 12:00:00 AM                       | 7     |\n * |                                 | ppp     | 12:00:00 AM GMT+2                 | 7     |\n * |                                 | pppp    | 12:00:00 AM GMT+02:00             | 2,7   |\n * | Combination of date and time    | Pp      | 04/29/1453, 12:00 AM              | 7     |\n * |                                 | PPpp    | Apr 29, 1453, 12:00:00 AM         | 7     |\n * |                                 | PPPppp  | April 29th, 1453 at ...           | 7     |\n * |                                 | PPPPpppp| Friday, April 29th, 1453 at ...   | 2,7   |\n * Notes:\n * 1. \"Formatting\" units (e.g. formatting quarter) in the default en-US locale\n *    are the same as \"stand-alone\" units, but are different in some languages.\n *    \"Formatting\" units are declined according to the rules of the language\n *    in the context of a date. \"Stand-alone\" units are always nominative singular:\n *\n *    `format(new Date(2017, 10, 6), 'do LLLL', {locale: cs}) //=> '6. listopad'`\n *\n *    `format(new Date(2017, 10, 6), 'do MMMM', {locale: cs}) //=> '6. listopadu'`\n *\n * 2. Any sequence of the identical letters is a pattern, unless it is escaped by\n *    the single quote characters (see below).\n *    If the sequence is longer than listed in table (e.g. `EEEEEEEEEEE`)\n *    the output will be the same as default pattern for this unit, usually\n *    the longest one (in case of ISO weekdays, `EEEE`). Default patterns for units\n *    are marked with \"2\" in the last column of the table.\n *\n *    `format(new Date(2017, 10, 6), 'MMM') //=> 'Nov'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMM') //=> 'November'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMM') //=> 'N'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMMM') //=> 'November'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMMMM') //=> 'November'`\n *\n * 3. Some patterns could be unlimited length (such as `yyyyyyyy`).\n *    The output will be padded with zeros to match the length of the pattern.\n *\n *    `format(new Date(2017, 10, 6), 'yyyyyyyy') //=> '00002017'`\n *\n * 4. `QQQQQ` and `qqqqq` could be not strictly numerical in some locales.\n *    These tokens represent the shortest form of the quarter.\n *\n * 5. The main difference between `y` and `u` patterns are B.C. years:\n *\n *    | Year | `y` | `u` |\n *    |------|-----|-----|\n *    | AC 1 |   1 |   1 |\n *    | BC 1 |   1 |   0 |\n *    | BC 2 |   2 |  -1 |\n *\n *    Also `yy` always returns the last two digits of a year,\n *    while `uu` pads single digit years to 2 characters and returns other years unchanged:\n *\n *    | Year | `yy` | `uu` |\n *    |------|------|------|\n *    | 1    |   01 |   01 |\n *    | 14   |   14 |   14 |\n *    | 376  |   76 |  376 |\n *    | 1453 |   53 | 1453 |\n *\n *    The same difference is true for local and ISO week-numbering years (`Y` and `R`),\n *    except local week-numbering years are dependent on `options.weekStartsOn`\n *    and `options.firstWeekContainsDate` (compare [getISOWeekYear](https://date-fns.org/docs/getISOWeekYear)\n *    and [getWeekYear](https://date-fns.org/docs/getWeekYear)).\n *\n * 6. Specific non-location timezones are currently unavailable in `date-fns`,\n *    so right now these tokens fall back to GMT timezones.\n *\n * 7. These patterns are not in the Unicode Technical Standard #35:\n *    - `i`: ISO day of week\n *    - `I`: ISO week of year\n *    - `R`: ISO week-numbering year\n *    - `t`: seconds timestamp\n *    - `T`: milliseconds timestamp\n *    - `o`: ordinal number modifier\n *    - `P`: long localized date\n *    - `p`: long localized time\n *\n * 8. `YY` and `YYYY` tokens represent week-numbering years but they are often confused with years.\n *    You should enable `options.useAdditionalWeekYearTokens` to use them. See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *\n * 9. `D` and `DD` tokens represent days of the year but they are often confused with days of the month.\n *    You should enable `options.useAdditionalDayOfYearTokens` to use them. See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *\n * @param date - The original date\n * @param format - The string of tokens\n * @param options - An object with options\n *\n * @returns The formatted date string\n *\n * @throws `date` must not be Invalid Date\n * @throws `options.locale` must contain `localize` property\n * @throws `options.locale` must contain `formatLong` property\n * @throws use `yyyy` instead of `YYYY` for formatting years using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws use `yy` instead of `YY` for formatting years using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws use `d` instead of `D` for formatting days of the month using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws use `dd` instead of `DD` for formatting days of the month using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws format string contains an unescaped latin alphabet character\n *\n * @example\n * // Represent 11 February 2014 in middle-endian format:\n * const result = format(new Date(2014, 1, 11), 'MM/dd/yyyy')\n * //=> '02/11/2014'\n *\n * @example\n * // Represent 2 July 2014 in Esperanto:\n * import { eoLocale } from 'date-fns/locale/eo'\n * const result = format(new Date(2014, 6, 2), \"do 'de' MMMM yyyy\", {\n *   locale: eoLocale\n * })\n * //=> '2-a de julio 2014'\n *\n * @example\n * // Escape string by single quote characters:\n * const result = format(new Date(2014, 6, 2, 15), \"h 'o''clock'\")\n * //=> \"3 o'clock\"\n */\nexport function format(date, formatStr, options) {\n  const defaultOptions = getDefaultOptions();\n  const locale = options?.locale ?? defaultOptions.locale ?? defaultLocale;\n  const firstWeekContainsDate = options?.firstWeekContainsDate ?? options?.locale?.options?.firstWeekContainsDate ?? defaultOptions.firstWeekContainsDate ?? defaultOptions.locale?.options?.firstWeekContainsDate ?? 1;\n  const weekStartsOn = options?.weekStartsOn ?? options?.locale?.options?.weekStartsOn ?? defaultOptions.weekStartsOn ?? defaultOptions.locale?.options?.weekStartsOn ?? 0;\n  const originalDate = toDate(date, options?.in);\n  if (!isValid(originalDate)) {\n    throw new RangeError(\"Invalid time value\");\n  }\n  let parts = formatStr.match(longFormattingTokensRegExp).map(substring => {\n    const firstCharacter = substring[0];\n    if (firstCharacter === \"p\" || firstCharacter === \"P\") {\n      const longFormatter = longFormatters[firstCharacter];\n      return longFormatter(substring, locale.formatLong);\n    }\n    return substring;\n  }).join(\"\").match(formattingTokensRegExp).map(substring => {\n    // Replace two single quote characters with one single quote character\n    if (substring === \"''\") {\n      return {\n        isToken: false,\n        value: \"'\"\n      };\n    }\n    const firstCharacter = substring[0];\n    if (firstCharacter === \"'\") {\n      return {\n        isToken: false,\n        value: cleanEscapedString(substring)\n      };\n    }\n    if (formatters[firstCharacter]) {\n      return {\n        isToken: true,\n        value: substring\n      };\n    }\n    if (firstCharacter.match(unescapedLatinCharacterRegExp)) {\n      throw new RangeError(\"Format string contains an unescaped latin alphabet character `\" + firstCharacter + \"`\");\n    }\n    return {\n      isToken: false,\n      value: substring\n    };\n  });\n\n  // invoke localize preprocessor (only for french locales at the moment)\n  if (locale.localize.preprocessor) {\n    parts = locale.localize.preprocessor(originalDate, parts);\n  }\n  const formatterOptions = {\n    firstWeekContainsDate,\n    weekStartsOn,\n    locale\n  };\n  return parts.map(part => {\n    if (!part.isToken) return part.value;\n    const token = part.value;\n    if (!options?.useAdditionalWeekYearTokens && isProtectedWeekYearToken(token) || !options?.useAdditionalDayOfYearTokens && isProtectedDayOfYearToken(token)) {\n      warnOrThrowProtectedError(token, formatStr, String(date));\n    }\n    const formatter = formatters[token[0]];\n    return formatter(originalDate, token, locale.localize, formatterOptions);\n  }).join(\"\");\n}\nfunction cleanEscapedString(input) {\n  const matched = input.match(escapedStringRegExp);\n  if (!matched) {\n    return input;\n  }\n  return matched[1].replace(doubleQuoteRegExp, \"'\");\n}\n\n// Fallback for modularized imports:\nexport default format;","import { toDate } from \"./toDate.js\";\n\n/**\n * @name isAfter\n * @category Common Helpers\n * @summary Is the first date after the second one?\n *\n * @description\n * Is the first date after the second one?\n *\n * @param date - The date that should be after the other one to return true\n * @param dateToCompare - The date to compare with\n *\n * @returns The first date is after the second date\n *\n * @example\n * // Is 10 July 1989 after 11 February 1987?\n * const result = isAfter(new Date(1989, 6, 10), new Date(1987, 1, 11))\n * //=> true\n */\nexport function isAfter(date, dateToCompare) {\n  return +toDate(date) > +toDate(dateToCompare);\n}\n\n// Fallback for modularized imports:\nexport default isAfter;","import { inject, Injectable, signal, WritableSignal } from '@angular/core';\nimport { combineLatest, interval } from \"rxjs\";\nimport { Pit } from \"../model/pit\";\nimport { takeUntilDestroyed, toObservable } from \"@angular/core/rxjs-interop\";\nimport { DriverConfigService } from \"../../driver/service/driver-config.service\";\nimport { PitConfigService } from \"./pit-config.service\";\nimport { PitDataService } from \"./pit-data.service\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PitService {\n  private readonly worker: Worker | undefined;\n\n  private readonly pitDataService = inject(PitDataService);\n  private readonly driverConfigService = inject(DriverConfigService);\n  private readonly pitConfigService = inject(PitConfigService);\n\n  readonly activePit: WritableSignal<Pit | undefined> = signal(undefined);\n  readonly activePitRemainingMilliseconds: WritableSignal<number> = signal(0);\n  readonly lastRefuelPit: WritableSignal<Pit | undefined> = signal(undefined);\n  readonly lastInterphoneChangePit: WritableSignal<Pit | undefined> = signal(undefined);\n  readonly completedDriverChanges: WritableSignal<number> = signal(0);\n  readonly lastPit: WritableSignal<Pit | undefined> = signal(undefined);\n  readonly remainingDriverChanges: WritableSignal<number> = signal(0);\n  readonly pitAVGMilliseconds: WritableSignal<number> = signal(0);\n  readonly remainingMinTotalPitMilliseconds: WritableSignal<number> = signal(0);\n  readonly lastKartChangePit: WritableSignal<Pit | undefined> = signal(undefined);\n  readonly completedKartChanges: WritableSignal<number> = signal(0);\n\n  constructor() {\n\n    if (typeof Worker !== 'undefined') {\n      this.worker = new Worker(new URL('./pit.worker', import.meta.url));\n      this.worker.onmessage = ({ data }) => {\n        this.activePit.set(data.activePit as Pit | undefined);\n        this.activePitRemainingMilliseconds.set(data.activePitRemainingMilliseconds);\n        this.lastRefuelPit.set(data.lastRefuelPit as Pit | undefined);\n        this.lastInterphoneChangePit.set(data.lastInterphoneChangePit as Pit | undefined);\n        this.lastPit.set(data.lastPit as Pit | undefined);\n        this.completedDriverChanges.set(data.completedDriverChanges);\n        this.remainingDriverChanges.set(data.remainingDriverChanges);\n        this.pitAVGMilliseconds.set(data.pitAVGMilliseconds);\n        this.remainingMinTotalPitMilliseconds.set(data.remainingMinTotalPitMilliseconds);\n        this.lastKartChangePit.set(data.lastKartChangePit as Pit | undefined);\n        this.completedKartChanges.set(data.completedKartChanges);\n      };\n    }\n\n    combineLatest({\n      pits: toObservable(this.pitDataService.pits),\n      driverConfig: toObservable(this.driverConfigService.driverConfig),\n      pitConfig: toObservable(this.pitConfigService.pitConfig),\n      ping: interval(1000)\n    })\n    .pipe(takeUntilDestroyed())\n    .subscribe(({pits, driverConfig, pitConfig}) => {\n      if (this.worker && driverConfig && pitConfig) {\n        this.worker.postMessage({\n          pits: pits,\n          driverConfig: driverConfig,\n          pitConfig: pitConfig\n        })\n      }\n    });\n  }\n}\n","import { inject, Injectable, signal, WritableSignal } from '@angular/core';\nimport { RaceService } from \"../../race/service/race.service\";\nimport { combineLatest, interval } from \"rxjs\";\nimport { takeUntilDestroyed, toObservable } from \"@angular/core/rxjs-interop\";\nimport { TyreConfigService } from \"./tyre-config.service\";\nimport { PitDataService } from \"../../pit/service/pit-data.service\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TyreService {\n  private readonly raceService = inject(RaceService);\n  private readonly pitDataService = inject(PitDataService);\n  private readonly tyreConfigService = inject(TyreConfigService);\n\n  private readonly worker: Worker | undefined;\n\n  readonly openingTime: WritableSignal<Date | undefined> = signal(undefined)\n  readonly closingTime: WritableSignal<Date | undefined> = signal(undefined);\n\n  readonly tyreChangeWindowOpen: WritableSignal<boolean> = signal(false);\n  readonly remainingTyreChange: WritableSignal<number> = signal(0);\n\n  constructor() {\n    if (typeof Worker !== 'undefined') {\n      // Create a new\n      this.worker = new Worker(new URL('./tyre.worker', import.meta.url));\n      this.worker.onmessage = ({ data }) => {\n        this.openingTime.set(data.openingTime);\n        this.closingTime.set(data.closingTime);\n        this.tyreChangeWindowOpen.set(data.tyreChangeWindowOpen);\n        this.remainingTyreChange.set(data.remainingTyreChange);\n      };\n    }\n\n    combineLatest({\n      pits: toObservable(this.pitDataService.pits),\n      race: toObservable(this.raceService.activeRace),\n      tyreConfig: toObservable(this.tyreConfigService.tyreConfig),\n      ping: interval(1000)\n    })\n    .pipe(takeUntilDestroyed())\n    .subscribe(({pits, race, tyreConfig}) => {\n\n      if (this.worker && tyreConfig) {\n        this.worker.postMessage({\n          pits: pits,\n          race: race,\n          tyreConfig: tyreConfig\n        });\n      }\n    });\n  }\n}\n","import { inject, Injectable, signal, WritableSignal } from '@angular/core';\nimport { RaceConfigService } from \"../../race/service/race-config.service\";\nimport { RaceService } from \"../../race/service/race.service\";\nimport { combineLatest, interval } from \"rxjs\";\nimport { takeUntilDestroyed, toObservable } from \"@angular/core/rxjs-interop\";\nimport { PitService } from \"../../pit/service/pit.service\";\nimport { OptimizedStint } from \"../model/optimized-stint\";\nimport { TyreService } from \"../../tyre/service/tyre.service\";\nimport { LapConfigService } from \"../../lap/service/lap-config.service\";\nimport { PitConfigService } from \"../../pit/service/pit-config.service\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class StintOptimizerService {\n  private readonly raceService = inject(RaceService);\n  private readonly pitService = inject(PitService);\n  private readonly raceConfigService = inject(RaceConfigService);\n  private readonly lapConfigService = inject(LapConfigService);\n  private readonly pitConfigService = inject(PitConfigService);\n  private readonly tyreService = inject(TyreService);\n\n  private readonly worker: Worker | undefined;\n\n  readonly optimizedStint: WritableSignal<OptimizedStint | undefined> = signal(undefined);\n\n  constructor() {\n\n    if (typeof Worker !== 'undefined') {\n      this.worker = new Worker(new URL('./stint-optimizer.worker', import.meta.url));\n      this.worker.onmessage = ({ data }) => {\n        this.optimizedStint.set(data.optimizedStint);\n      };\n    }\n\n    combineLatest({\n      activeRace: toObservable(this.raceService.activeRace),\n      willEndRaceDate: toObservable(this.raceService.willEndRaceDate),\n\n      remainingDriverChanges: toObservable(this.pitService.remainingDriverChanges),\n      remainingTyreChange: toObservable(this.tyreService.remainingTyreChange),\n      lastPit: toObservable(this.pitService.lastPit),\n      lapConfig: toObservable(this.lapConfigService.lapConfig),\n      raceConfig: toObservable(this.raceConfigService.raceConfig),\n      pitConfig: toObservable(this.pitConfigService.pitConfig),\n      ping: interval(1000)\n    })\n    .pipe(takeUntilDestroyed())\n    .subscribe(({\n                  activeRace,\n                  willEndRaceDate,\n                  remainingDriverChanges,\n                  remainingTyreChange,\n                  lastPit,\n                  lapConfig,\n                  raceConfig,\n                  pitConfig\n                }) => {\n      if (this.worker && raceConfig && lapConfig && pitConfig) {\n        this.worker.postMessage({\n          activeRace: activeRace,\n          willEndRaceDate: willEndRaceDate,\n          remainingDriverChanges: remainingDriverChanges,\n          remainingTyreChange: remainingTyreChange,\n          lastPit: lastPit,\n          raceConfig: raceConfig,\n          lapConfig: lapConfig,\n          pitConfig: pitConfig\n        })\n      }\n    });\n  }\n}\n","import { inject, Injectable, signal, WritableSignal } from '@angular/core';\nimport { combineLatest, interval } from \"rxjs\";\nimport { Stint } from \"../model/stint\";\nimport { takeUntilDestroyed, toObservable } from \"@angular/core/rxjs-interop\";\nimport { StintOptimizerService } from \"./stint-optimizer.service\";\nimport { LapConfigService } from \"../../lap/service/lap-config.service\";\nimport { StintDataService } from \"./stint-data.service\";\nimport { LapService } from '../../lap/service/lap.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class StintService {\n\n  private readonly worker: Worker | undefined;\n\n  private readonly stintDataService = inject(StintDataService);\n  private readonly stintOptimizerService = inject(StintOptimizerService);\n  private readonly lapConfigService = inject(LapConfigService);\n  private readonly lapService = inject(LapService);\n\n  readonly activeStint: WritableSignal<Stint | undefined> = signal(undefined);\n  readonly activeStintTimeOnTrack: WritableSignal<number> = signal(0);\n  readonly activeStintLaps: WritableSignal<number> = signal(0);\n  readonly activeStintRemainingTimeOnTrack: WritableSignal<number> = signal(0);\n  readonly activeStintRemainingLaps: WritableSignal<number> = signal(0);\n  readonly activeStintGainedTimeOnTrack: WritableSignal<number> = signal(0);\n  readonly activeStintGainedLaps: WritableSignal<number> = signal(0);\n  readonly stintAVGMilliseconds: WritableSignal<number> = signal(0);\n  readonly stintPaceById: WritableSignal<Map<number,number>> = signal(new Map<number, number>());\n  readonly stintBestLapById: WritableSignal<Map<number,number>> = signal(new Map<number, number>());\n\n  constructor() {\n    if (typeof Worker !== 'undefined') {\n      this.worker = new Worker(new URL('./stint.worker', import.meta.url));\n      this.worker.onmessage = ({ data }) => {\n        this.activeStint.set(data.activeStint as Stint | undefined);\n        this.activeStintTimeOnTrack.set(data.activeStintTimeOnTrack);\n        this.activeStintLaps.set(data.activeStintLaps);\n        this.activeStintRemainingTimeOnTrack.set(data.activeStintRemainingTimeOnTrack);\n        this.activeStintRemainingLaps.set(data.activeStintRemainingLaps);\n        this.activeStintGainedTimeOnTrack.set(data.activeStintGainedTimeOnTrack);\n        this.activeStintGainedLaps.set(data.activeStintGainedLaps);\n        this.stintAVGMilliseconds.set(data.stintAVGMilliseconds);\n        this.stintPaceById.set(data.stintPaceById);\n        this.stintBestLapById.set(data.stintBestLapById);\n      };\n    }\n\n    combineLatest({\n      stints: toObservable(this.stintDataService.stints),\n      optimizedStint: toObservable(this.stintOptimizerService.optimizedStint),\n      lapConfig: toObservable(this.lapConfigService.lapConfig),\n      validTeamPaceLaps: toObservable(this.lapService.validTeamPaceLaps),\n      ping: interval(1000)\n    })\n    .pipe(takeUntilDestroyed())\n    .subscribe(({stints, optimizedStint ,lapConfig, validTeamPaceLaps}) => {\n      if (this.worker && lapConfig) {\n        this.worker.postMessage({\n          stints: stints,\n          optimizedStint: optimizedStint,\n          lapConfig: lapConfig,\n          validTeamPaceLaps: validTeamPaceLaps\n        });\n      }\n    })\n  }\n}\n","import { Component, computed, inject, Signal } from '@angular/core';\nimport { StintService } from \"../../service/stint.service\";\nimport { millisecondsToTimeString } from \"../../../util/date.util\";\nimport { Stint } from \"../../model/stint\";\nimport { CardComponent } from '../../../shared/component/card/card.component';\nimport { ChipComponent } from '../../../shared/component/chip/chip.component';\n\n@Component({\n  selector: 'app-active-stint',\n  imports: [\n    CardComponent,\n    ChipComponent\n  ],\n  templateUrl: './active-stint.component.html',\n  styleUrl: './active-stint.component.css'\n})\nexport class ActiveStintComponent {\n  private readonly stintService = inject(StintService);\n\n  readonly activeStint: Signal<Stint | undefined> = this.stintService.activeStint;\n  readonly activeStintRemainingTimeOnTrack: Signal<number> = this.stintService.activeStintRemainingTimeOnTrack;\n\n  readonly activeStintTimeOnTrackString = computed(() => {\n    return millisecondsToTimeString(this.stintService.activeStintTimeOnTrack());\n  });\n\n  readonly activeStintRemainingTimeOnTrackString = computed(() => {\n    return millisecondsToTimeString(this.stintService.activeStintRemainingTimeOnTrack());\n  });\n\n  readonly activeStintGainedTimeOnTrackString = computed(() => {\n    return millisecondsToTimeString(this.stintService.activeStintGainedTimeOnTrack());\n  })\n\n  readonly activeStintLaps: Signal<number> = this.stintService.activeStintLaps;\n  readonly activeStintRemainingLaps: Signal<number> = this.stintService.activeStintRemainingLaps;\n  readonly activeStintGainedLaps: Signal<number> = this.stintService.activeStintGainedLaps;\n}\n","<app-card\n  title=\"🏎️ 💨 Active stint\"\n  [initiallyOpen]=\"true\">\n\n  <div slot=\"header-right-content\" class=\"flex items-center gap-1\">\n    @if (activeStint()) {\n      @if (activeStintRemainingTimeOnTrack() > 0) {\n\n        <app-chip\n          [text]=\"'Remaining: ' + activeStintRemainingTimeOnTrackString()\"\n          [backgroundColor]=\"'bg-yellow-500'\"\n        />\n\n        <app-chip\n          [text]=\"'Laps: ' + activeStintRemainingLaps()\"\n          [backgroundColor]=\"'bg-yellow-500'\"\n        />\n      } @else {\n        <app-chip\n          [text]=\"'Gained: ' + activeStintGainedTimeOnTrackString()\"\n          [backgroundColor]=\"'bg-green-500'\"\n        />\n\n        <app-chip\n          [text]=\"'Laps: ' + activeStintGainedLaps()\"\n          [backgroundColor]=\"'bg-green-500'\"\n        />\n      }\n    }\n  </div>\n\n  <div slot=\"body-content\" class=\"flex flex-col gap-2\">\n    <div class=\"flex justify-between\">\n      <div>\n        <div class=\"text-neutral-500 dark:text-neutral-400\">Time on track</div>\n        <div class=\"text-neutral-900 dark:text-neutral-100 font-mono\">\n          {{ activeStintTimeOnTrackString() }}\n        </div>\n      </div>\n\n      <div>\n        <div class=\"text-neutral-500 dark:text-neutral-400 text-right\">Laps</div>\n        <div class=\"text-neutral-900 dark:text-neutral-100 font-mono text-right\">\n          {{ activeStintLaps() }}\n        </div>\n      </div>\n    </div>\n\n    <hr>\n\n    <div class=\"flex justify-between\">\n      <div>\n        <div class=\"text-neutral-500 dark:text-neutral-400\">Remaining time on track</div>\n        <div class=\"text-neutral-900 dark:text-neutral-100 font-mono\">\n          @if (activeStint()) {\n            {{ activeStintRemainingTimeOnTrackString() }}\n          } @else {\n            --:--:--\n          }\n        </div>\n      </div>\n\n      <div>\n        <div class=\"text-neutral-500 dark:text-neutral-400 text-right\">Remaining laps</div>\n        <div class=\"text-neutral-900 dark:text-neutral-100 font-mono text-right\">\n          @if (activeStint()) {\n            {{ activeStintRemainingLaps() }}\n          } @else {\n            0\n          }\n        </div>\n      </div>\n    </div>\n\n    <hr>\n\n    <div class=\"flex justify-between\">\n      <div>\n        <div class=\"text-neutral-500 dark:text-neutral-400\">Gained time on track</div>\n        <div class=\"text-neutral-900 dark:text-neutral-100 font-mono\">\n          {{ activeStintGainedTimeOnTrackString() }}\n        </div>\n      </div>\n\n      <div>\n        <div class=\"text-neutral-500  dark:text-neutral-400 text-right\">Gained laps</div>\n        <div class=\"text-neutral-900 dark:text-neutral-100 font-mono text-right\">\n          @if (activeStint()) {\n            {{ activeStintGainedLaps() }}\n          } @else {\n            0\n          }\n        </div>\n      </div>\n    </div>\n  </div>\n\n</app-card>\n","import { inject, Injectable, signal, WritableSignal } from '@angular/core';\nimport { combineLatest, interval } from \"rxjs\";\nimport { takeUntilDestroyed, toObservable } from \"@angular/core/rxjs-interop\";\nimport { DeltaStint } from \"../model/delta-stint\";\nimport { StintDataService } from \"./stint-data.service\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DeltaStintService {\n  private readonly stintDataService = inject(StintDataService);\n\n  private readonly worker: Worker | undefined;\n\n  readonly deltaStints: WritableSignal<DeltaStint[]> = signal([]);\n  readonly totalDeltaMilliseconds: WritableSignal<number> = signal(0);\n  readonly deltaMilliseconds: WritableSignal<number> = signal(0);\n\n\n  constructor() {\n    if (typeof Worker !== 'undefined') {\n      this.worker = new Worker(new URL('./delta-stint.worker', import.meta.url));\n      this.worker.onmessage = ({ data }) => {\n        this.deltaStints.set(data.deltaStints);\n        this.totalDeltaMilliseconds.set(data.deltaMilliseconds);\n        this.deltaMilliseconds.set(data.deltaMilliseconds);\n      };\n    }\n\n    combineLatest({\n      stints: toObservable(this.stintDataService.stints),\n      ping: interval(1000)\n    })\n    .pipe(takeUntilDestroyed())\n    .subscribe(({stints}) => {\n      if (this.worker) {\n        this.worker.postMessage({\n          stints: stints\n        })\n      }\n    })\n  }\n}\n","import { Component, computed, inject, Signal } from '@angular/core';\nimport { NgClass, NgForOf } from \"@angular/common\";\nimport { DeltaStintService } from \"../../service/delta-stint.service\";\nimport { DeltaStint } from \"../../model/delta-stint\";\nimport { StintService } from \"../../service/stint.service\";\nimport { millisecondsToHourMinuteSecondString } from \"../../../util/date.util\";\nimport { TooltipDirective } from \"../../../shared/component/tooltip/tooltip.directive\";\nimport { Tooltip } from \"../../../shared/component/tooltip/tooltip\";\nimport { TooltipPosition } from '../../../shared/component/tooltip/tooltip.enums';\nimport { CardComponent } from '../../../shared/component/card/card.component';\nimport { ChipComponent } from '../../../shared/component/chip/chip.component';\n\n@Component({\n  selector: 'app-delta-stint',\n  imports: [\n    NgForOf,\n    NgClass,\n    TooltipDirective,\n    CardComponent,\n    ChipComponent\n  ],\n  templateUrl: './delta-stint.component.html',\n  styleUrl: './delta-stint.component.css'\n})\nexport class DeltaStintComponent {\n  private readonly stintService = inject(StintService);\n  private readonly deltaStintService = inject(DeltaStintService);\n\n  readonly deltaStints: Signal<DeltaStint[]> = this.deltaStintService.deltaStints;\n  readonly totalDeltaMilliseconds: Signal<number> = this.deltaStintService.totalDeltaMilliseconds;\n  readonly deltaMilliseconds: Signal<number> = computed(() => {\n    const value = this.deltaStintService.deltaMilliseconds();\n    this.deltaString = millisecondsToHourMinuteSecondString(Math.abs(value))\n    return value;\n  });\n\n  readonly activeStintId = computed(() => {\n    const activeStint = this.stintService.activeStint();\n    if (activeStint) {\n      return activeStint.id;\n    }\n    return undefined;\n  })\n\n  deltaString = '';\n\n  protected tooltipInfo: Tooltip = {\n    footer: \"\",\n    paragraphs: [\"Only completed stint\"],\n    title: \"\"\n  }\n  protected tooltipPosition: TooltipPosition = TooltipPosition.ABOVE;\n\n  getMillisecondsString(milliseconds: number): string {\n    return millisecondsToHourMinuteSecondString(Math.abs(milliseconds));\n  }\n}\n","<app-card\n  title=\"δ Delta stint\"\n  [initiallyOpen]=\"false\">\n\n  <div slot=\"header-right-content\">\n    @if (deltaMilliseconds() != 0){\n      <app-chip\n        [text]=\"(deltaMilliseconds() < 0 ? 'Losing:':'Gaining:') + ' ' + deltaString\"\n        [backgroundColor]=\"deltaMilliseconds() < 0 ? 'bg-yellow-500' : 'bg-green-500'\"\n        tooltip [tooltipData]=tooltipInfo [tooltipPosition]=tooltipPosition\n      />\n    }\n  </div>\n\n  <div slot=\"body-content\"\n       class=\"max-h-72 flex flex-col overflow-clip\">\n    <table class=\"w-full bg-neutral-50 dark:bg-neutral-800 table-fixed\">\n      <thead class=\"sticky top-0\">\n      <tr>\n        <th class=\"py-2 px-3 border-b border-neutral-200 dark:border-neutral-400 text-left text-xs xl:text-base font-medium text-neutral-700 dark:text-neutral-400\">\n          ID\n        </th>\n        <th class=\"py-2 px-3 border-b border-neutral-200 dark:border-neutral-400 text-center text-xs xl:text-base font-medium text-neutral-700 dark:text-neutral-400\"\n            colspan=\"2\">On track\n        </th>\n        <th class=\"py-2 px-3 border-b border-neutral-200 dark:border-neutral-400 text-center text-xs xl:text-base font-medium text-neutral-700 dark:text-neutral-400\"\n            colspan=\"2\">Optimum\n        </th>\n        <th class=\"py-2 px-3 border-b border-neutral-200 dark:border-neutral-400 text-center text-xs xl:text-base font-medium text-neutral-700 dark:text-neutral-400\"\n            colspan=\"2\">Delta\n        </th>\n      </tr>\n      </thead>\n    </table>\n    <div class=\"flex-1 overflow-y-auto\">\n      <table class=\"w-full table-fixed\">\n        <tbody>\n        <tr *ngFor=\"let deltaStint of deltaStints()\"\n            [ngClass]=\"{'bg-green-100 dark:bg-green-900 font-semibold': deltaStint.id === activeStintId(), 'hover:bg-neutral-100 dark:hover:bg-neutral-700': deltaStint.id !== activeStintId()}\">\n          <td class=\"py-2 px-3 border-b border-neutral-200 dark:border-neutral-400 text-xs xl:text-base text-neutral-900 dark:text-neutral-100\">{{ deltaStint.id }}</td>\n          <td class=\"py-2 border-b border-neutral-200 dark:border-neutral-400 text-center text-xs xl:text-base text-neutral-900 dark:text-neutral-100 font-mono\"\n              colspan=\"2\">{{ getMillisecondsString(deltaStint.timeOnTrack) }}\n          </td>\n          <td class=\"py-2 border-b border-neutral-200 dark:border-neutral-400 text-center text-xs xl:text-base text-neutral-900 dark:text-neutral-100 font-mono\"\n              colspan=\"2\">{{ getMillisecondsString(deltaStint.optimum) }}\n          </td>\n          <td class=\"py-2 pr-1 border-b border-neutral-200 dark:border-neutral-400 text-center text-xs xl:text-base font-mono\"\n              colspan=\"2\">\n            <div\n              [ngClass]=\"{'bg-yellow-500': deltaStint.delta < 0, 'bg-green-500': deltaStint.delta >= 0}\"\n              class=\"p-1 text-center text-neutral-100 rounded-sm\">\n              {{ getMillisecondsString(deltaStint.delta) }}\n            </div>\n          </td>\n        </tr>\n        </tbody>\n      </table>\n    </div>\n    <div class=\"flex\">\n      <table class=\"w-full table-fixed\">\n        <tfoot class=\"sticky bottom-0-0\">\n        <tr class=\"bg-neutral-100 dark:bg-neutral-700 font-bold\">\n          <td class=\"py-2 px-3 border-b border-neutral-200 dark:border-neutral-400 text-xs xl:text-base text-neutral-900 dark:text-neutral-100\" colspan=\"5\">Totals\n          </td>\n          <td class=\"py-2 pr-1 border-b border-neutral-200 dark:border-neutral-400 text-center text-xs xl:text-base text-neutral-900 dark:text-neutral-100 font-mono\"\n              colspan=\"2\">\n            <div\n              [ngClass]=\"{'bg-yellow-500 text-neutral-100': totalDeltaMilliseconds() < 0, 'bg-green-500 text-neutral-100': totalDeltaMilliseconds() > 0}\"\n              class=\"p-1 text-center rounded-sm\">\n              {{ getMillisecondsString(totalDeltaMilliseconds()) }}\n            </div>\n          </td>\n        </tr>\n        </tfoot>\n      </table>\n    </div>\n  </div>\n\n</app-card>\n","import { Component, inject, Signal } from '@angular/core';\nimport { PitService } from \"../../../pit/service/pit.service\";\nimport { CardComponent } from \"../../../shared/component/card/card.component\";\nimport { ChipComponent } from '../../../shared/component/chip/chip.component';\n\n@Component({\n  selector: 'app-driver-change',\n  imports: [\n    CardComponent,\n    ChipComponent\n  ],\n  templateUrl: './driver-change.component.html',\n  styleUrl: './driver-change.component.css'\n})\nexport class DriverChangeComponent {\n  private readonly pitService = inject(PitService);\n\n  readonly remainingDriverChanges: Signal<number> = this.pitService.remainingDriverChanges;\n  readonly completedDriverChanges: Signal<number> = this.pitService.completedDriverChanges;\n}\n","<app-card\n  title=\"🐗 🔄 Driver change\"\n  [initiallyOpen]=\"false\">\n\n  <div slot=\"header-right-content\" class=\"flex items-center gap-1\">\n\n    <app-chip\n      [text]=\"remainingDriverChanges() > 0 ? 'Warning: ' + remainingDriverChanges() : 'Completed'\"\n      [backgroundColor]=\"remainingDriverChanges() > 0 ? 'bg-yellow-500' : 'bg-green-500'\"\n    />\n\n  </div>\n\n  <div slot=\"body-content\" class=\"flex justify-between\">\n    <div>\n      <div class=\"text-neutral-500 dark:text-neutral-400\">Completed</div>\n      <div class=\"text-neutral-900 dark:text-neutral-100 font-mono\">\n        {{ completedDriverChanges() }}\n      </div>\n    </div>\n\n    <div>\n      <div class=\"text-neutral-600 dark:text-neutral-400\">Remaining</div>\n      <div class=\"text-neutral-900 dark:text-neutral-100 font-mono text-right\">\n        {{ remainingDriverChanges() }}\n      </div>\n    </div>\n  </div>\n</app-card>\n","import { Component, computed, inject, Signal } from '@angular/core';\nimport { NgClass, NgForOf } from \"@angular/common\";\nimport { DriverService } from \"../../service/driver.service\";\nimport { Driver } from \"../../model/driver\";\nimport { millisecondsToTimeString } from \"../../../util/date.util\";\nimport { StintService } from \"../../../stint/service/stint.service\";\nimport { CardComponent } from '../../../shared/component/card/card.component';\nimport { ChipComponent } from '../../../shared/component/chip/chip.component';\n\n@Component({\n  selector: 'app-driver',\n  imports: [\n    NgClass,\n    NgForOf,\n    CardComponent,\n    ChipComponent\n  ],\n  templateUrl: './driver.component.html',\n  styleUrl: './driver.component.css'\n})\nexport class DriverComponent {\n  private readonly driverService = inject(DriverService);\n  private readonly stintService = inject(StintService);\n\n  readonly drivers: Signal<Driver[]> = this.driverService.drivers;\n  readonly driversTimeOnTrackWarningCount: Signal<number> = this.driverService.driversTimeOnTrackWarningCount;\n  readonly activeStintDriverId = computed(() => {\n    const activeStint = this.stintService.activeStint();\n    if (activeStint) {\n      return activeStint.driverId;\n    }\n    return undefined;\n  });\n\n  getDriverTimeOnTrack(driverId: number): string {\n    return millisecondsToTimeString(this.driverService.driversTimeOnTrackMap().get(driverId));\n  }\n\n  getDriverTimeOnTrackWarning(driverId: number): boolean {\n    return this.driverService.driversTimeOnTrackWarningMap().get(driverId) || false;\n  }\n\n  getDriverStintCount(driverId: number): number {\n    return this.driverService.driversStintCountMap().get(driverId) ?? 0;\n  }\n\n  getDriverTimeFromLastStint(driverId: number): string {\n    return millisecondsToTimeString(this.driverService.driversTimeFromLastStintMap().get(driverId));\n  }\n}\n","<app-card\n  title=\"🐗 Driver\"\n  [initiallyOpen]=\"false\" xmlns=\"http://www.w3.org/1999/html\">\n\n  <div slot=\"header-right-content\" class=\"flex items-center\">\n    <app-chip\n      [text]=\"driversTimeOnTrackWarningCount() ? 'Warning: ' + driversTimeOnTrackWarningCount() : 'Completed'\"\n      [backgroundColor]=\"driversTimeOnTrackWarningCount() <= 0 ? 'bg-green-500' : 'bg-yellow-500'\"\n    />\n  </div>\n\n  <div slot=\"body-content\" class=\"flex flex-col overflow-clip\">\n    <table class=\"w-full bg-neutral-50 dark:bg-neutral-800 table-fixed\">\n      <thead class=\"sticky top-0\">\n      <tr>\n        <th class=\"py-2 px-3 border-b border-neutral-200 dark:border-neutral-400 text-left text-xs md:text-base font-medium text-neutral-700 dark:text-neutral-400\">\n          ID\n        </th>\n        <th class=\"py-2 border-b border-neutral-200 dark:border-neutral-400 text-left text-xs md:text-base font-medium text-neutral-700 dark:text-neutral-400\">\n          Name\n        </th>\n        <th class=\"py-2 border-b border-neutral-200 dark:border-neutral-400 text-center text-xs md:text-base font-medium text-neutral-700 dark:text-neutral-400\">\n          Stint\n        </th>\n        <th class=\"py-2 border-b border-neutral-200 dark:border-neutral-400 text-center text-xs md:text-base font-medium text-neutral-700 dark:text-neutral-400\"\n            colspan=\"2\">\n          On track\n        </th>\n        <th class=\"py-2 px-3 border-b border-neutral-200 dark:border-neutral-400 text-center text-xs md:text-base font-medium text-neutral-700 dark:text-neutral-400\"\n            colspan=\"2\">\n          From last stint\n        </th>\n      </tr>\n      </thead>\n    </table>\n    <div class=\"flex-1 overflow-y-auto\">\n      <table class=\"w-full table-fixed\">\n        <tbody>\n        <tr *ngFor=\"let driver of drivers()\"\n            [ngClass]=\"{'bg-green-100 dark:bg-green-900 font-semibold': driver.id === activeStintDriverId(), 'hover:bg-neutral-100 dark:hover:bg-neutral-700': driver.id !== activeStintDriverId()}\">\n          <td class=\"py-2 px-3 border-b border-neutral-200 dark:border-neutral-400 text-left text-xs md:text-base text-neutral-900 dark:text-neutral-100\">{{ driver.id }}</td>\n          <td class=\"py-2 border-b border-neutral-200 dark:border-neutral-400 text-left text-xs md:text-base text-neutral-900 dark:text-neutral-100\">{{ driver.raceName }}</td>\n          <td class=\"py-2 border-b border-neutral-200 dark:border-neutral-400 text-center text-xs md:text-base text-neutral-900 dark:text-neutral-100 font-mono\"> {{\n              getDriverStintCount(driver.id)\n            }}\n          </td>\n          <td class=\"py-2 border-b border-neutral-200 dark:border-neutral-400 text-center text-xs md:text-base text-neutral-900 dark:text-neutral-100 font-mono\"\n              colspan=\"2\">\n            <div\n              [ngClass]=\"{'bg-yellow-500 text-white': getDriverTimeOnTrackWarning(driver.id)}\"\n              class=\"p-1 text-center rounded-sm\">\n              {{ getDriverTimeOnTrack(driver.id) }}\n            </div>\n          </td>\n          <td class=\"py-2 px-3 border-b border-neutral-200 dark:border-neutral-400 text-center text-xs md:text-base text-neutral-900 dark:text-neutral-100 font-mono\"\n              colspan=\"2\">{{\n              getDriverTimeFromLastStint(driver.id)\n            }}\n          </td>\n        </tr>\n        </tbody>\n      </table>\n    </div>\n  </div>\n\n\n</app-card>\n","import { ChangeDetectionStrategy, Component, Input, OnChanges, SimpleChanges } from '@angular/core';\nimport { NgClass } from \"@angular/common\";\n\n@Component({\n  selector: 'app-battery',\n  standalone: true,\n  imports: [\n    NgClass\n  ],\n  templateUrl: './battery.component.html',\n  styleUrl: './battery.component.css',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class BatteryComponent implements OnChanges {\n  @Input() charge: number = 100;\n\n  batteryColor = 'bg-green-500'\n  batteryBorderColor = 'border-gray-200'\n\n  ngOnChanges(changes: SimpleChanges): void {\n    this.batteryColor = this.getBackgroundColor(this.charge);\n    this.batteryBorderColor = this.getBorderColor(this.charge);\n  }\n\n  private getBackgroundColor(charge: number) {\n    if (charge <= 10) {\n      return 'bg-red-500';\n    }\n    if (charge <= 25) {\n      return 'bg-orange-500';\n    }\n    if (charge <= 50) {\n      return 'bg-yellow-500';\n    }\n    return 'bg-green-500';\n  }\n\n  private getBorderColor(charge: number) {\n    if (charge <= 10) {\n      return 'border-red-500';\n    }\n    if (charge <= 25) {\n      return 'border-orange-500';\n    }\n    return 'border-gray-200';\n  }\n\n\n}\n","<div class=\"w-16 lg:w-20 h-8 grid grid-cols-6 items-center\">\n  <div [ngClass]=\"batteryBorderColor\" class=\"shadow-sm col-span-5 rounded-sm border-2 flex relative bg-neutral-100 dark:bg-neutral-900\">\n    <div\n        [ngClass]=\"batteryColor\"\n        [style.width.%]=\"charge\"\n        class=\"cursor-default leading-none rounded-xs flex items-center py-3\">\n      <div class=\"absolute right-2 text-neutral-900 dark:text-neutral-100 font-semibold font-mono\">{{ charge }}</div>\n    </div>\n  </div>\n  <div [ngClass]=\"batteryBorderColor\" class=\"ml-0.5 border-r-8 w-1 h-4 rounded-r\"></div>\n</div>\n","import { inject, Injectable, signal, WritableSignal } from '@angular/core';\nimport { RaceService } from \"../../race/service/race.service\";\nimport { combineLatest, interval } from \"rxjs\";\nimport { takeUntilDestroyed, toObservable } from \"@angular/core/rxjs-interop\";\nimport { PitService } from \"../../pit/service/pit.service\";\nimport { RaceConfigService } from \"../../race/service/race-config.service\";\nimport { LapConfigService } from \"../../lap/service/lap-config.service\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FuelService {\n  private readonly raceService = inject(RaceService);\n  private readonly pitService = inject(PitService);\n  private readonly raceConfigService = inject(RaceConfigService);\n  private readonly lapConfigService = inject(LapConfigService);\n\n  private readonly worker: Worker | undefined;\n\n  readonly lastRefuelTime: WritableSignal<Date | undefined> = signal(undefined);\n  readonly emptyFuelTime: WritableSignal<Date | undefined> = signal(undefined);\n  readonly remainingFuelPercentage: WritableSignal<number> = signal(100);\n  readonly remainingFuelLap: WritableSignal<number> = signal(0);\n\n  constructor() {\n    if (typeof Worker !== 'undefined') {\n      this.worker = new Worker(new URL('./fuel.worker', import.meta.url));\n      this.worker.onmessage = ({data}) => {\n        this.lastRefuelTime.set(data.lastRefuelTime);\n        this.emptyFuelTime.set(data.emptyFuelTime);\n        this.remainingFuelLap.set(data.remainingFuelLap);\n        this.remainingFuelPercentage.set(data.remainingFuelPercentage);\n      };\n    }\n\n    combineLatest({\n      lastRefuelPit: toObservable(this.pitService.lastRefuelPit),\n      race: toObservable(this.raceService.activeRace),\n      raceConfig: toObservable(this.raceConfigService.raceConfig),\n      lapConfig: toObservable(this.lapConfigService.lapConfig),\n      ping: interval(1000)\n    })\n    .pipe(takeUntilDestroyed())\n    .subscribe(({lastRefuelPit, race, raceConfig, lapConfig}) => {\n      if (this.worker && raceConfig && lapConfig) {\n        this.worker.postMessage({\n          lastRefuelPit,\n          race,\n          raceConfig,\n          lapConfig\n        });\n      }\n    });\n  }\n}\n","import { Component, computed, inject, Signal } from '@angular/core';\nimport { DatePipe, NgClass } from \"@angular/common\";\nimport { getElapsedTime, getTimeUntilFutureDate } from \"../../../util/date.util\";\nimport { BatteryComponent } from \"../../../shared/component/battery/battery.component\";\nimport { FormsModule } from \"@angular/forms\";\nimport { FuelService } from \"../../service/fuel.service\";\nimport { CardComponent } from '../../../shared/component/card/card.component';\nimport { ChipComponent } from '../../../shared/component/chip/chip.component';\n\n@Component({\n  selector: 'app-fuel',\n  imports: [NgClass, DatePipe, BatteryComponent, FormsModule, CardComponent, ChipComponent],\n  templateUrl: './fuel.component.html',\n  styleUrl: './fuel.component.css'\n})\nexport class FuelComponent {\n  private readonly fuelService = inject(FuelService);\n\n  readonly remainingFuelPercentage = this.fuelService.remainingFuelPercentage;\n  readonly remainingFuelLap = this.fuelService.remainingFuelLap;\n  readonly emptyFuelTime: Signal<Date | undefined> = this.fuelService.emptyFuelTime;\n  readonly lastRefuelTime: Signal<Date | undefined> = this.fuelService.lastRefuelTime;\n\n  emptyFuelCountdown = computed(() => {\n    return getTimeUntilFutureDate(this.emptyFuelTime())\n  });\n\n  sinceLastRefuel = computed(() => {\n    return getElapsedTime(this.lastRefuelTime(), new Date());\n  });\n\n  warning = computed(() => {\n    return this.remainingFuelPercentage() <= 20;\n  });\n\n  remainingColor = computed(() => {\n    return this.getRemainingColor(this.remainingFuelPercentage());\n  })\n\n  private getRemainingColor(fuelPercentage: number): string {\n    if (fuelPercentage <= 10) {\n      return 'bg-red-500';\n    }\n    if (fuelPercentage <= 25) {\n      return 'bg-orange-500';\n    }\n    if (fuelPercentage <= 50) {\n      return 'bg-yellow-500';\n    }\n    return 'bg-green-500';\n  }\n}\n","<app-card\n  title=\"⛽️ Fuel\"\n  [initiallyOpen]=\"false\">\n\n  <div slot=\"header-right-content\" class=\"flex items-center gap-1\">\n\n    <app-chip\n      [text]=\"'Empty: ' + emptyFuelCountdown()\"\n      [backgroundColor]=\"remainingColor()\"\n      [bounceCondition]=\"warning()\"\n    />\n\n    <app-chip\n      [text]=\"'Laps: ' + remainingFuelLap()\"\n      [backgroundColor]=\"remainingColor()\"\n      [bounceCondition]=\"warning()\"\n    />\n\n    <app-battery [charge]=\"remainingFuelPercentage()\" [ngClass]=\"{'animate-bounce': warning() }\"></app-battery>\n  </div>\n\n  <div slot=\"body-content\" class=\"flex flex-col gap-2\">\n    <div class=\"flex justify-between\">\n      <div>\n        <div class=\"text-neutral-500 dark:text-neutral-400\">Last refuel time</div>\n        <div class=\"text-neutral-900 dark:text-neutral-100 font-mono\">\n          @if (lastRefuelTime()) {\n            {{ lastRefuelTime() | date:'HH:mm:ss' }}\n          } @else {\n            --:--:--\n          }\n        </div>\n      </div>\n      <div>\n        <div class=\"text-neutral-500 dark:text-neutral-400 text-right\">Since last refuel</div>\n        <div class=\"text-neutral-900 dark:text-neutral-100 font-mono text-right\">\n          {{ sinceLastRefuel() }}\n        </div>\n      </div>\n    </div>\n\n    <hr>\n\n    <div class=\"flex justify-between\">\n      <div>\n        <div class=\"text-neutral-500 dark:text-neutral-400\">Empty time</div>\n        <div class=\"text-neutral-900 dark:text-neutral-100 font-mono\">\n          @if (emptyFuelTime()) {\n            {{ emptyFuelTime() | date:'HH:mm:ss' }}\n          } @else {\n            --:--:--\n          }\n        </div>\n      </div>\n\n      <div>\n        <div class=\"text-neutral-500 dark:text-neutral-400 text-right\">Empty in</div>\n        <div class=\"text-neutral-900 dark:text-neutral-100 font-mono text-right\">\n          {{ emptyFuelCountdown() }}\n        </div>\n      </div>\n    </div>\n\n    <hr>\n\n    <div class=\"flex justify-between\">\n      <div>\n        <div class=\"text-neutral-500 dark:text-neutral-400\">Remaining laps</div>\n        <div class=\"text-neutral-900 dark:text-neutral-100 font-mono\">\n          {{ remainingFuelLap() }}\n        </div>\n      </div>\n    </div>\n  </div>\n\n</app-card>\n","import { inject, Injectable, signal, WritableSignal } from '@angular/core';\nimport { RaceService } from \"../../race/service/race.service\";\nimport { PitService } from \"../../pit/service/pit.service\";\nimport { RaceConfigService } from \"../../race/service/race-config.service\";\nimport { combineLatest, interval } from \"rxjs\";\nimport { takeUntilDestroyed, toObservable } from \"@angular/core/rxjs-interop\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class InterphoneService {\n  private readonly raceService = inject(RaceService);\n  private readonly pitService = inject(PitService);\n  private readonly raceConfigService = inject(RaceConfigService);\n\n  private readonly worker: Worker | undefined;\n\n  readonly lastChangeDate: WritableSignal<Date | undefined> = signal(undefined);\n  readonly emptyBatteryDate: WritableSignal<Date | undefined> = signal(undefined);\n  readonly remainingBatteryPercentage: WritableSignal<number> = signal(100);\n\n  constructor() {\n    if (typeof Worker !== 'undefined') {\n      this.worker = new Worker(new URL('./interphone.worker', import.meta.url));\n      this.worker.onmessage = ({data}) => {\n        this.lastChangeDate.set(data.lastChangeDate);\n        this.emptyBatteryDate.set(data.emptyBatteryDate);\n        this.remainingBatteryPercentage.set(data.remainingBatteryPercentage);\n      };\n    }\n\n    combineLatest({\n      lastInterphoneChangePit: toObservable(this.pitService.lastInterphoneChangePit),\n      race: toObservable(this.raceService.activeRace),\n      raceConfig: toObservable(this.raceConfigService.raceConfig),\n      ping: interval(1000)\n    })\n    .pipe(takeUntilDestroyed())\n    .subscribe(({lastInterphoneChangePit, race, raceConfig}) => {\n      if (this.worker && raceConfig) {\n        this.worker.postMessage({\n          lastInterphoneChangePit: lastInterphoneChangePit,\n          race: race,\n          raceConfig: raceConfig\n        });\n      }\n    });\n  }\n}\n","import { Component, computed, inject, Signal } from '@angular/core';\nimport { BatteryComponent } from \"../../../shared/component/battery/battery.component\";\nimport { DatePipe, NgClass } from \"@angular/common\";\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\nimport { getElapsedTime, getTimeUntilFutureDate } from \"../../../util/date.util\";\nimport { InterphoneService } from \"../../service/interphone.service\";\nimport { CardComponent } from '../../../shared/component/card/card.component';\nimport { ChipComponent } from '../../../shared/component/chip/chip.component';\n\n@Component({\n  selector: 'app-interphone',\n  imports: [\n    BatteryComponent,\n    DatePipe,\n    FormsModule,\n    ReactiveFormsModule,\n    NgClass,\n    CardComponent,\n    ChipComponent\n  ],\n  templateUrl: './interphone.component.html',\n  styleUrl: './interphone.component.css'\n})\nexport class InterphoneComponent {\n  private readonly interphoneService = inject(InterphoneService);\n\n  readonly remainingBatteryPercentage = this.interphoneService.remainingBatteryPercentage;\n  readonly emptyBatteryDate: Signal<Date | undefined> = this.interphoneService.emptyBatteryDate;\n  readonly lastChangeTime: Signal<Date | undefined> = this.interphoneService.lastChangeDate;\n\n  emptyBatteryCountdown = computed(() => {\n    return getTimeUntilFutureDate(this.emptyBatteryDate())\n  });\n\n  sinceLastChange = computed(() => {\n    return getElapsedTime(this.lastChangeTime(), new Date());\n  });\n\n  warning = computed(() => {\n    return this.remainingBatteryPercentage() <= 20;\n  });\n\n  remainingColor = computed(() => {\n    return this.getRemainingColor(this.remainingBatteryPercentage());\n  });\n\n  private getRemainingColor(batteryPercentage: number): string {\n    if (batteryPercentage <= 10) {\n      return 'bg-red-500';\n    }\n    if (batteryPercentage <= 25) {\n      return 'bg-orange-500';\n    }\n    if (batteryPercentage <= 50) {\n      return 'bg-yellow-500';\n    }\n    return 'bg-green-500';\n  }\n}\n","<app-card\n  title=\"🔊 Interphone\"\n  [initiallyOpen]=\"false\">\n\n  <div slot=\"header-right-content\"\n       class=\"flex items-center gap-1\">\n\n    <app-chip\n      [text]=\"'Empty: ' + emptyBatteryCountdown()\"\n      [backgroundColor]=\"remainingColor()\"\n      [bounceCondition]=\"warning()\"\n    />\n    <app-battery [charge]=\"remainingBatteryPercentage()\" [ngClass]=\"{'animate-bounce': warning() }\"></app-battery>\n  </div>\n\n  <div slot=\"body-content\" class=\"flex flex-col gap-2\">\n    <div class=\"flex justify-between\">\n      <div>\n        <div class=\"text-neutral-500 dark:text-neutral-400\">Last change time</div>\n        <div class=\"text-neutral-900 dark:text-neutral-100 font-mono\">\n          @if (lastChangeTime()) {\n            {{ lastChangeTime() | date:'HH:mm:ss' }}\n          } @else {\n            --:--:--\n          }\n        </div>\n      </div>\n      <div>\n        <div class=\"text-neutral-500 dark:text-neutral-400 text-right\">Since last change</div>\n        <div class=\"text-neutral-900 dark:text-neutral-100 font-mono text-right\">\n          {{ sinceLastChange() }}\n        </div>\n      </div>\n    </div>\n\n    <hr>\n\n    <div class=\"flex justify-between\">\n      <div>\n        <div class=\"text-neutral-500 dark:text-neutral-400\">Empty time</div>\n        <div class=\"text-neutral-900 dark:text-neutral-100 font-mono\">\n          @if (emptyBatteryDate()) {\n            {{ emptyBatteryDate() | date:'HH:mm:ss' }}\n          } @else {\n            --:--:--\n          }\n        </div>\n      </div>\n\n      <div>\n        <div class=\"text-neutral-500 dark:text-neutral-400 text-right\">Empty in</div>\n        <div class=\"text-neutral-900 dark:text-neutral-100 font-mono text-right\">\n          {{ emptyBatteryCountdown() }}\n        </div>\n      </div>\n    </div>\n  </div>\n\n</app-card>\n","import { inject, Injectable, signal, WritableSignal } from '@angular/core';\nimport { RaceService } from \"../../race/service/race.service\";\nimport { PitService } from \"../../pit/service/pit.service\";\nimport { combineLatest, interval } from \"rxjs\";\nimport { takeUntilDestroyed, toObservable } from \"@angular/core/rxjs-interop\";\nimport { KartConfigService } from \"./kart-config.service\";\nimport { RaceConfigService } from \"../../race/service/race-config.service\";\nimport { LapConfigService } from \"../../lap/service/lap-config.service\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class KartService {\n  private readonly worker: Worker | undefined;\n\n  private readonly raceConfigService = inject(RaceConfigService);\n  private readonly kartConfigService = inject(KartConfigService);\n  private readonly lapConfigService = inject(LapConfigService);\n  private readonly raceService = inject(RaceService);\n  private readonly pitService = inject(PitService);\n\n  readonly remainingKartChanges: WritableSignal<number> = signal(0);\n  readonly remainingKartPercentage: WritableSignal<number> = signal(100);\n  readonly remainingKartLap: WritableSignal<number> = signal(0);\n  readonly expirationKartDate: WritableSignal<Date | undefined> = signal(undefined);\n  readonly lastKartChangeDate: WritableSignal<Date | undefined> = signal(undefined);\n\n  constructor() {\n\n    if (typeof Worker !== 'undefined') {\n      this.worker = new Worker(new URL('./kart.worker', import.meta.url));\n      this.worker.onmessage = ({ data }) => {\n        this.remainingKartChanges.set(data.remainingKartChanges);\n        this.remainingKartPercentage.set(data.remainingKartPercentage);\n        this.remainingKartLap.set(data.remainingKartLap);\n        this.expirationKartDate.set(data.expirationKartDate);\n        this.lastKartChangeDate.set(data.lastKartChangeDate);\n      };\n    }\n\n    combineLatest({\n      race: toObservable(this.raceService.activeRace),\n      raceConfig: toObservable(this.raceConfigService.raceConfig),\n      kartConfig: toObservable(this.kartConfigService.kartConfig),\n      lapConfig: toObservable(this.lapConfigService.lapConfig),\n      lastKartChangePit: toObservable(this.pitService.lastKartChangePit),\n      completedKartChanges: toObservable(this.pitService.completedKartChanges),\n      ping: interval(1000)\n    }).pipe(\n        takeUntilDestroyed()\n    ).subscribe(({race, raceConfig, kartConfig, lapConfig, lastKartChangePit, completedKartChanges}) => {\n      if (this.worker && raceConfig && kartConfig && lapConfig) {\n        this.worker.postMessage({\n          kartConfig: kartConfig,\n          raceConfig: raceConfig,\n          lapConfig: lapConfig,\n          race: race,\n          lastKartChangePit: lastKartChangePit,\n          completedKartChanges: completedKartChanges\n        });\n      }\n    })\n  }\n}\n","import { Component, inject, Signal } from '@angular/core';\nimport { KartService } from \"../../service/kart.service\";\nimport { PitService } from \"../../../pit/service/pit.service\";\nimport { CardComponent } from '../../../shared/component/card/card.component';\nimport { ChipComponent } from '../../../shared/component/chip/chip.component';\n\n@Component({\n  selector: 'app-kart-change',\n  imports: [\n    CardComponent,\n    ChipComponent\n  ],\n  templateUrl: './kart-change.component.html',\n  styleUrl: './kart-change.component.css'\n})\nexport class KartChangeComponent {\n\n  private readonly kartService = inject(KartService);\n  private readonly pitService = inject(PitService);\n\n  readonly remainingKartChanges: Signal<number> = this.kartService.remainingKartChanges;\n  readonly completedKartChanges: Signal<number> = this.pitService.completedKartChanges;\n}\n","<app-card\n  title=\"🏎️ 🔄 Kart change\"\n  [initiallyOpen]=\"false\">\n\n  <div slot=\"header-right-content\" class=\"flex items-center gap-1\">\n\n    <app-chip\n      [text]=\"remainingKartChanges() > 0 ? 'Remaining: ' + remainingKartChanges() : 'Completed'\"\n      [backgroundColor]=\"remainingKartChanges() > 0 ? 'bg-yellow-500' : 'bg-green-500'\"\n    />\n  </div>\n\n  <div slot=\"body-content\" class=\"flex justify-between\">\n    <div>\n      <div class=\"text-neutral-500 dark:text-neutral-400\">Completed</div>\n      <div class=\"text-neutral-900 dark:text-neutral-100 font-mono\">\n        {{ completedKartChanges() }}\n      </div>\n    </div>\n\n    <div>\n      <div class=\"text-neutral-600 dark:text-neutral-400\">Remaining</div>\n      <div class=\"text-neutral-900 dark:text-neutral-100 font-mono text-right\">\n        {{ remainingKartChanges() }}\n      </div>\n    </div>\n  </div>\n\n</app-card>\n","import { Component, computed, inject, Signal } from '@angular/core';\nimport { BatteryComponent } from \"../../../shared/component/battery/battery.component\";\nimport { DatePipe, NgClass } from \"@angular/common\";\nimport { FormsModule } from \"@angular/forms\";\nimport { KartService } from \"../../service/kart.service\";\nimport { getElapsedTime, getTimeUntilFutureDate } from \"../../../util/date.util\";\nimport { CardComponent } from '../../../shared/component/card/card.component';\nimport { ChipComponent } from '../../../shared/component/chip/chip.component';\n\n@Component({\n  selector: 'app-kart',\n  imports: [\n    BatteryComponent,\n    DatePipe,\n    FormsModule,\n    NgClass,\n    CardComponent,\n    ChipComponent\n  ],\n  templateUrl: './kart.component.html',\n  styleUrl: './kart.component.css'\n})\nexport class KartComponent {\n\n  private readonly kartService = inject(KartService);\n\n  readonly remainingKartPercentage = this.kartService.remainingKartPercentage;\n  readonly remainingKartLap = this.kartService.remainingKartLap;\n  readonly expirationKartDate: Signal<Date | undefined> = this.kartService.expirationKartDate;\n  readonly lastKartChangeDate: Signal<Date | undefined> = this.kartService.lastKartChangeDate;\n\n  expirationKartCountdown = computed(() => {\n    return getTimeUntilFutureDate(this.expirationKartDate())\n  });\n\n  sinceLastKartChange = computed(() => {\n    return getElapsedTime(this.lastKartChangeDate(), new Date());\n  });\n\n  remainingColor = computed(() => {\n    return this.getRemainingColor(this.remainingKartPercentage());\n  });\n\n  warning = computed(() => {\n    return this.remainingKartPercentage() <= 20;\n  });\n\n  private getRemainingColor(kartPercentage: number): string {\n    if (kartPercentage <= 10) {\n      return 'bg-red-500';\n    }\n    if (kartPercentage <= 25) {\n      return 'bg-orange-500';\n    }\n    if (kartPercentage <= 50) {\n      return 'bg-yellow-500';\n    }\n    return 'bg-green-500';\n  }\n}\n","<app-card\n  title=\"🏎️ Kart\"\n  [initiallyOpen]=\"false\">\n\n  <div slot=\"header-right-content\" class=\"flex items-center gap-1\">\n\n    <app-chip\n      [text]=\"'Empty: ' + expirationKartCountdown()\"\n      [backgroundColor]=\"remainingColor()\"\n      [bounceCondition]=\"warning()\"\n    />\n\n    <app-chip\n      [text]=\"'Laps: ' + remainingKartLap()\"\n      [backgroundColor]=\"remainingColor()\"\n      [bounceCondition]=\"warning()\"\n    />\n\n    <app-battery [charge]=\"remainingKartPercentage()\" [ngClass]=\"{'animate-bounce': warning() }\"></app-battery>\n  </div>\n\n  <div slot=\"body-content\" class=\"flex flex-col gap-2\">\n    <div class=\"flex justify-between\">\n      <div>\n        <div class=\"text-neutral-500 dark:text-neutral-400\">Last kart change</div>\n        <div class=\"text-neutral-900 dark:text-neutral-100 font-mono\">\n          @if (lastKartChangeDate()) {\n            {{ lastKartChangeDate() | date:'HH:mm:ss' }}\n          } @else {\n            --:--:--\n          }\n        </div>\n      </div>\n      <div>\n        <div class=\"text-neutral-500 dark:text-neutral-400 text-right\">Since last kart change</div>\n        <div class=\"text-neutral-900 dark:text-neutral-100 font-mono text-right\">\n          {{ sinceLastKartChange() }}\n        </div>\n      </div>\n    </div>\n\n    <hr>\n\n    <div class=\"flex justify-between\">\n      <div>\n        <div class=\"text-neutral-500 dark:text-neutral-400\">Expiration time</div>\n        <div class=\"text-neutral-900 dark:text-neutral-100 font-mono\">\n          @if (expirationKartDate()) {\n            {{ expirationKartDate() | date:'HH:mm:ss' }}\n          } @else {\n            --:--:--\n          }\n        </div>\n      </div>\n\n      <div>\n        <div class=\"text-neutral-500 dark:text-neutral-400 text-right\">Expiration in</div>\n        <div class=\"text-neutral-900 dark:text-neutral-100 font-mono text-right\">\n          {{ expirationKartCountdown() }}\n        </div>\n      </div>\n    </div>\n\n    <hr>\n\n    <div class=\"flex justify-between\">\n      <div>\n        <div class=\"text-neutral-500 dark:text-neutral-400\">Remaining laps</div>\n        <div class=\"text-neutral-900 dark:text-neutral-100 font-mono\">\n          {{ remainingKartLap() }}\n        </div>\n      </div>\n    </div>\n  </div>\n\n</app-card>\n","import { Component, computed, effect, inject, Signal } from '@angular/core';\nimport { NgClass, NgForOf } from \"@angular/common\";\nimport { PitService } from \"../../service/pit.service\";\nimport { Pit } from \"../../model/pit\";\nimport {\n  millisecondsToHourMinuteSecondMillisecondString,\n  millisecondsToMinuteSecondMillisecondsString\n} from \"../../../util/date.util\";\nimport { PitDataService } from \"../../service/pit-data.service\";\nimport { BoardConfigService } from \"../../../board/service/board-config.service\";\nimport { Tooltip } from \"../../../shared/component/tooltip/tooltip\";\nimport { TooltipDirective } from \"../../../shared/component/tooltip/tooltip.directive\";\nimport { TooltipPosition } from \"../../../shared/component/tooltip/tooltip.enums\";\nimport { CardComponent } from '../../../shared/component/card/card.component';\nimport { ChipComponent } from '../../../shared/component/chip/chip.component';\nimport { PitConfigService } from '../../service/pit-config.service';\n\n@Component({\n  selector: 'app-pit',\n  imports: [\n    NgClass,\n    NgForOf,\n    TooltipDirective,\n    CardComponent,\n    ChipComponent\n  ],\n  templateUrl: './pit.component.html',\n  styleUrl: './pit.component.css'\n})\nexport class PitComponent {\n  private readonly pitService = inject(PitService);\n  private readonly pitDataService = inject(PitDataService);\n  private readonly boardConfigService = inject(BoardConfigService);\n  private readonly pitConfigService = inject(PitConfigService);\n\n  readonly pits: Signal<Pit[]> = this.pitDataService.pits;\n\n  readonly activePitId = computed(() => {\n    const activePit = this.pitService.activePit();\n    if (activePit) {\n      return activePit.id;\n    }\n    return undefined;\n  });\n\n  readonly completedDriverChanges: Signal<number> = this.pitService.completedDriverChanges;\n\n  readonly pitAVGMilliseconds = computed(() => {\n    const value = this.pitService.pitAVGMilliseconds();\n    this.pitAVGString = millisecondsToMinuteSecondMillisecondsString(value);\n    return value;\n  });\n\n  readonly minTotalPitMillisecondsVisible = computed(() => {\n    const config= this.pitConfigService.pitConfig();\n    return config ? config.minTotalPitMinute > 0 : false;\n  });\n\n  readonly remainingMinTotalPitMilliseconds = computed(() => {\n    const value = this.pitService.remainingMinTotalPitMilliseconds();\n    this.remainingMinTotalPitString = millisecondsToHourMinuteSecondMillisecondString(value);\n    return value;\n  });\n\n  tyreChangeVisible = false;\n  fuelVisible = false;\n  interphoneVisible = false;\n  kartChangeVisible = false;\n\n  pitAVGString: string = '';\n  remainingMinTotalPitString: string = '';\n\n  protected tooltipAVGInfo: Tooltip = {\n    footer: \"\",\n    paragraphs: [\"Only completed pit\"],\n    title: \"\"\n  }\n  protected tooltipPosition: TooltipPosition = TooltipPosition.ABOVE;\n\n  constructor() {\n    effect(() => {\n      const boardConfig = this.boardConfigService.boardConfig()\n      if (boardConfig) {\n        this.fuelVisible = boardConfig.fuelVisible;\n        this.tyreChangeVisible = boardConfig.tyreChangeVisible;\n        this.kartChangeVisible = boardConfig.kartChangeVisible;\n        this.interphoneVisible = boardConfig.interphoneVisible;\n      }\n    });\n  }\n\n  calculatePitTime(pit: Pit): string {\n    if (pit.exitAt) {\n      return millisecondsToMinuteSecondMillisecondsString(pit.exitAt.getTime() - pit.entryAt.getTime());\n    }\n    return millisecondsToMinuteSecondMillisecondsString(new Date().getTime() - pit.entryAt.getTime());\n  }\n\n  calculateTotalPitTime(): string {\n    const pits = this.pits();\n    let timeSpent = 0;\n    pits.forEach(pit => {\n      if (pit.exitAt) {\n        timeSpent += pit.exitAt.getTime() - pit.entryAt.getTime();\n      } else {\n        // PIT CORRENTE\n        timeSpent += new Date().getTime() - pit.entryAt.getTime();\n      }\n    })\n    return millisecondsToHourMinuteSecondMillisecondString(timeSpent);\n  }\n\n  calculateTotalRefueling(): number {\n    return this.pits().filter(pit => pit.refuel).length;\n  }\n\n  calculateTotalTyreChanges(): number {\n    return this.pits().filter(pit => pit.tyreChange).length;\n  }\n\n  calculateTotalInterphoneChanges(): number {\n    return this.pits().filter(pit => pit.interphoneChange).length;\n  }\n\n  calculateTotalKartChanges(): number {\n    return this.pits().filter(pit => pit.kartChange).length;\n  }\n}\n","<app-card\n  title=\"👨🏻‍🔧 Pit\"\n  [initiallyOpen]=\"false\">\n\n  <div slot=\"header-right-content\" class=\"flex items-center gap-1\">\n\n    @if (minTotalPitMillisecondsVisible()) {\n      <app-chip\n        [text]=\"remainingMinTotalPitMilliseconds() > 0 ? 'Remaining: ' + remainingMinTotalPitString : 'Completed'\"\n        [backgroundColor]=\"remainingMinTotalPitMilliseconds() > 0 ? 'bg-yellow-500' : 'bg-green-500'\"\n      />\n    }\n\n    <app-chip\n      [text]=\"'Total: ' + pits().length\"\n    />\n\n    @if (pitAVGMilliseconds() != 0) {\n      <app-chip\n        tooltip [tooltipData]=tooltipAVGInfo [tooltipPosition]=tooltipPosition\n        [text]=\"'AVG: ' + pitAVGString\"\n      />\n    }\n  </div>\n\n  <div slot=\"body-content\"\n       class=\"max-h-72 flex flex-col overflow-clip\">\n    <table class=\"w-full bg-neutral-50 dark:bg-neutral-800 table-fixed\">\n      <thead class=\"sticky top-0\">\n      <tr>\n        <th class=\"py-2 px-3 border-b border-neutral-200 dark:border-neutral-400 text-left text-xs md:text-base font-medium text-neutral-700 dark:text-neutral-400\">\n          ID\n        </th>\n        <th class=\"py-2 px-3 border-b border-neutral-200 dark:border-neutral-400 text-center text-xs md:text-base font-medium text-neutral-700 dark:text-neutral-400\">\n          🐗 🔄\n        </th>\n        @if (fuelVisible) {\n          <th class=\"py-2 px-3 border-b border-neutral-200 dark:border-neutral-400 text-center text-xs md:text-base font-medium text-neutral-700 dark:text-neutral-400\">\n            ⛽️\n          </th>\n        }\n        @if (tyreChangeVisible) {\n          <th class=\"py-2 px-3 border-b border-neutral-200 dark:border-neutral-400 text-center text-xs md:text-base font-medium text-neutral-700 dark:text-neutral-400\">\n            🛞 🔄\n          </th>\n        }\n        @if (interphoneVisible) {\n          <th class=\"py-2 px-3 border-b border-neutral-200 dark:border-neutral-400 text-center text-xs md:text-base font-medium text-neutral-700 dark:text-neutral-400\">\n            🔊 🔄\n          </th>\n        }\n        @if (kartChangeVisible) {\n          <th class=\"py-2 px-3 border-b border-neutral-200 dark:border-neutral-400 text-center text-xs md:text-base font-medium text-neutral-700 dark:text-neutral-400\">\n            🏎️ 🔄\n          </th>\n        }\n        <th class=\"py-2 px-3 border-b border-neutral-200 dark:border-neutral-400 text-center text-xs md:text-base font-medium text-neutral-700 dark:text-neutral-400\"\n            colspan=\"2\">In pit\n        </th>\n      </tr>\n      </thead>\n    </table>\n    <div class=\"flex-1 overflow-y-auto\">\n      <table class=\"w-full table-fixed\">\n        <tbody>\n        <tr *ngFor=\"let pit of pits()\"\n            [ngClass]=\"{'bg-green-100 dark:bg-green-900 font-semibold': pit.id === activePitId(), 'hover:bg-neutral-100 dark:hover:bg-neutral-700': pit.id !== activePitId()}\">\n          <td class=\"py-2 px-3 border-b border-neutral-200 dark:border-neutral-400 text-xs md:text-base text-neutral-900 dark:text-neutral-100\">{{ pit.id }}</td>\n          <td class=\"py-2 px-3 border-b border-neutral-200 dark:border-neutral-400 text-center text-xs md:text-base text-neutral-900 dark:text-neutral-100\">\n            @if (pit.entryDriverId !== pit.exitDriverId) {\n              ✅\n            }\n          </td>\n          @if (fuelVisible) {\n            <td class=\"py-2 border-b border-neutral-200 dark:border-neutral-400 text-center text-xs md:text-base text-neutral-900 dark:text-neutral-100 font-mono\">\n              @if (pit.refuel) {\n                ✅\n              }\n            </td>\n          }\n          @if (tyreChangeVisible) {\n            <td class=\"py-2 border-b border-neutral-200 dark:border-neutral-400 text-center text-xs md:text-base text-neutral-900 dark:text-neutral-100 font-mono\">\n              @if (pit.tyreChange) {\n                ✅\n              }\n            </td>\n          }\n          @if (interphoneVisible) {\n            <td class=\"py-2 border-b border-neutral-200 dark:border-neutral-400 text-center text-xs md:text-base text-neutral-900 dark:text-neutral-100 font-mono\">\n              @if (pit.interphoneChange) {\n                ✅\n              }\n            </td>\n          }\n          @if (kartChangeVisible) {\n            <td class=\"py-2 border-b border-neutral-200 dark:border-neutral-400 text-center text-xs md:text-base text-neutral-900 dark:text-neutral-100 font-mono\">\n              @if (pit.kartChange) {\n                ✅\n              }\n            </td>\n          }\n          <td class=\"py-2 px-3 border-b border-neutral-200 dark:border-neutral-400 text-right text-xs md:text-base text-neutral-900 dark:text-neutral-100 font-mono\"\n              colspan=\"2\"> {{\n              calculatePitTime(pit)\n            }}\n          </td>\n        </tr>\n        </tbody>\n      </table>\n    </div>\n    <div class=\"flex\">\n      <table class=\"w-full table-fixed\">\n        <tfoot class=\"sticky bottom-0-0\">\n        <tr class=\"bg-neutral-100 dark:bg-neutral-700 font-bold\">\n          <td class=\"py-2 px-3 border-b border-neutral-200 dark:border-neutral-400 text-xs md:text-base text-neutral-900 dark:text-neutral-100\">Totals\n          </td>\n          <td class=\"py-2 px-3 border-b border-neutral-200 dark:border-neutral-400 text-center text-xs md:text-base text-neutral-900 dark:text-neutral-100 font-mono\">{{ completedDriverChanges() }}</td>\n          @if (fuelVisible) {\n            <td class=\"py-2 px-3 border-b border-neutral-200 dark:border-neutral-400 text-center text-xs md:text-base text-neutral-900 dark:text-neutral-100 font-mono\">{{ calculateTotalRefueling() }}</td>\n          }\n          @if (tyreChangeVisible) {\n            <td class=\"py-2 px-3 border-b border-neutral-200 dark:border-neutral-400 text-center text-xs md:text-base text-neutral-900 dark:text-neutral-100 font-mono\">{{ calculateTotalTyreChanges() }}</td>\n          }\n          @if (interphoneVisible) {\n            <td class=\"py-2 px-3 border-b border-neutral-200 dark:border-neutral-400 text-center text-xs md:text-base text-neutral-900 dark:text-neutral-100 font-mono\">{{ calculateTotalInterphoneChanges() }}</td>\n          }\n          @if (kartChangeVisible) {\n            <td class=\"py-2 px-3 border-b border-neutral-200 dark:border-neutral-400 text-center text-xs md:text-base text-neutral-900 dark:text-neutral-100 font-mono\">{{ calculateTotalKartChanges() }}</td>\n          }\n          <td class=\"py-2 px-3 border-b border-neutral-200 dark:border-neutral-400 text-right text-xs md:text-base text-neutral-900 dark:text-neutral-100 font-mono\"\n              colspan=\"2\">{{ calculateTotalPitTime() }}\n          </td>\n        </tr>\n        </tfoot>\n      </table>\n    </div>\n  </div>\n\n</app-card>\n","import { inject, Injectable, signal, WritableSignal } from '@angular/core';\nimport { combineLatest, interval } from \"rxjs\";\nimport { takeUntilDestroyed, toObservable } from \"@angular/core/rxjs-interop\";\nimport { RaceService } from \"../../race/service/race.service\";\nimport { StintService } from \"../../stint/service/stint.service\";\nimport { RaceConfigService } from \"../../race/service/race-config.service\";\nimport { PitLaneConfigService } from \"./pit-lane-config.service\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PitLaneService {\n  private readonly raceService = inject(RaceService);\n  private readonly stintService = inject(StintService);\n  private readonly raceConfigService = inject(RaceConfigService);\n  private readonly pitLaneConfigService = inject(PitLaneConfigService);\n\n  private readonly worker: Worker | undefined;\n\n  readonly open: WritableSignal<boolean> = signal(false);\n  readonly openInMilliseconds: WritableSignal<number> = signal(0);\n\n  constructor() {\n\n    if (typeof Worker !== 'undefined') {\n      this.worker = new Worker(new URL('./pit-lane.worker', import.meta.url));\n      this.worker.onmessage = ({ data }) => {\n        this.open.set(data.open);\n        this.openInMilliseconds.set(data.openInMilliseconds);\n      };\n    }\n\n    combineLatest({\n      willEndRaceDate: toObservable(this.raceService.willEndRaceDate),\n      activeStint: toObservable(this.stintService.activeStint),\n      raceConfig: toObservable(this.raceConfigService.raceConfig),\n      pitLaneConfig: toObservable(this.pitLaneConfigService.pitLaneConfig),\n      ping: interval(1000)\n    })\n    .pipe(takeUntilDestroyed())\n    .subscribe(({willEndRaceDate, activeStint, raceConfig, pitLaneConfig}) => {\n      if (this.worker && raceConfig) {\n        this.worker.postMessage({\n          willEndRaceDate: willEndRaceDate,\n          activeStint: activeStint,\n          raceConfig: raceConfig,\n          pitLaneConfig: pitLaneConfig,\n        });\n      }\n    })\n  }\n}\n","import { computed, inject, Injectable, Signal } from '@angular/core';\nimport { RaceService } from \"./race.service\";\nimport { Race } from \"../model/race\";\nimport { StintOptimizerService } from \"../../stint/service/stint-optimizer.service\";\nimport { Observable } from \"rxjs\";\nimport { environment } from \"../../../environments/environment\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { LiveTimingConfigService } from \"../../live-timing/service/live-timing-config.service\";\nimport { NotificationService } from '../../shared/service/notification.service';\nimport { BoardConfigService } from '../../board/service/board-config.service';\nimport { TyreConfigService } from '../../tyre/service/tyre-config.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RaceManagerService {\n\n  private readonly httpClient = inject(HttpClient);\n  private readonly raceManagerPath = \"/race-manager\";\n\n  private readonly raceService = inject(RaceService);\n  private readonly notificationService = inject(NotificationService);\n  private readonly liveTimingConfigService = inject(LiveTimingConfigService);\n  private readonly stintOptimizerService = inject(StintOptimizerService);\n  private readonly boardConfigService = inject(BoardConfigService);\n  private readonly tyreConfigService = inject(TyreConfigService);\n\n  private readonly activeRace: Signal<Race | undefined> = this.raceService.activeRace;\n\n  private readonly optimizedStintMilliseconds: Signal<number> = computed(() => {\n    const optimizedStint = this.stintOptimizerService.optimizedStint();\n    return optimizedStint ? optimizedStint.avgStintMillisecondsTime : 0;\n  });\n\n  private readonly liveTimingUrl: Signal<string | undefined> = computed(() => {\n    const config = this.liveTimingConfigService.liveTimingConfig();\n    return config ? config.url : undefined;\n  });\n\n  private readonly liveTimingSource: Signal<string | undefined> = computed(() => {\n    const config = this.liveTimingConfigService.liveTimingConfig();\n    return config ? config.source : undefined;\n  });\n\n  private readonly liveTimingEnabled: Signal<boolean> = computed(() => {\n    const config = this.boardConfigService.boardConfig();\n    return config ? config.liveTimingVisible : false;\n  });\n\n  private readonly fuelEnabled: Signal<boolean> = computed(() => {\n    const config = this.boardConfigService.boardConfig();\n    return config ? config.fuelVisible : false;\n  });\n\n  private readonly tyreChangeEnabled: Signal<boolean> = computed(() => {\n    const config = this.boardConfigService.boardConfig();\n    return config ? config.tyreChangeVisible : false;\n  });\n\n  private readonly interphoneEnabled: Signal<boolean> = computed(() => {\n    const config = this.boardConfigService.boardConfig();\n    return config ? config.interphoneVisible : false;\n  });\n\n  private readonly kartChangeEnabled: Signal<boolean> = computed(() => {\n    const config = this.boardConfigService.boardConfig();\n    return config ? config.kartChangeVisible : false;\n  });\n\n  private readonly tyrePressureEnabled: Signal<boolean> = computed(() => {\n    const config = this.boardConfigService.boardConfig();\n    return config ? config.tyrePressureVisible : false;\n  });\n\n  private readonly frontLeftTyrePressurePsi: Signal<number | undefined> = computed(() => {\n    const config = this.tyreConfigService.tyreConfig();\n    return config ? config.frontLeftTyrePressurePsi : undefined;\n  });\n\n  private readonly frontRightTyrePressurePsi: Signal<number | undefined> = computed(() => {\n    const config = this.tyreConfigService.tyreConfig();\n    return config ? config.frontRightTyrePressurePsi : undefined;\n  });\n\n  private readonly rearLeftTyrePressurePsi: Signal<number | undefined> = computed(() => {\n    const config = this.tyreConfigService.tyreConfig();\n    return config ? config.rearLeftTyrePressurePsi : undefined;\n  });\n\n  private readonly rearRightTyrePressurePsi: Signal<number | undefined> = computed(() => {\n    const config = this.tyreConfigService.tyreConfig();\n    return config ? config.rearRightTyrePressurePsi : undefined;\n  });\n\n  public startRace(startedDriverId: number) {\n    const liveTimingUrl = this.liveTimingEnabled() ? this.liveTimingUrl() || undefined : undefined;\n    const liveTimingSource = this.liveTimingEnabled() ? this.liveTimingSource() || undefined : undefined;\n\n    const frontLeftTyrePressurePsi = this.tyrePressureEnabled() ? this.frontLeftTyrePressurePsi() : undefined;\n    const frontRightTyrePressurePsi = this.tyrePressureEnabled() ? this.frontRightTyrePressurePsi() : undefined;\n    const rearLeftTyrePressurePsi = this.tyrePressureEnabled() ? this.rearLeftTyrePressurePsi() : undefined;\n    const rearRightTyrePressurePsi = this.tyrePressureEnabled() ? this.rearRightTyrePressurePsi() : undefined;\n\n    this.sendStartRace(\n      startedDriverId,\n      new Date(),\n      this.optimizedStintMilliseconds(),\n      liveTimingUrl,\n      liveTimingSource,\n      frontLeftTyrePressurePsi,\n      frontRightTyrePressurePsi,\n      rearLeftTyrePressurePsi,\n      rearRightTyrePressurePsi,\n    ).subscribe(() => {\n        this.notificationService.success('Race started');\n    });\n  }\n\n  public endRace() {\n    const activeRace = this.activeRace();\n    if (activeRace === undefined) {\n      return;\n    }\n\n    this.sendEndRace(\n      activeRace.id,\n      new Date(),\n    ).subscribe(() => {\n      this.notificationService.success('Race ended');\n    });\n  }\n\n  public pitIn(\n    exitDriverId: number,\n    refuel: boolean,\n    tyreChange: boolean,\n    interphoneChange: boolean,\n    kartChange: boolean\n  ) {\n    const activeRace = this.activeRace();\n    if (activeRace === undefined) {\n      return;\n    }\n\n    const refuelSent = this.fuelEnabled() ? refuel : false;\n    const tyreChangeSent = this.tyreChangeEnabled() ? tyreChange : false;\n    const interphoneChangeSent = this.interphoneEnabled() ? interphoneChange : false;\n    const kartChangeSent = this.kartChangeEnabled() ? kartChange : false;\n\n    this.sendPitIn(\n      activeRace.id,\n      exitDriverId,\n      refuelSent,\n      tyreChangeSent,\n      interphoneChangeSent,\n      kartChangeSent\n    ).subscribe(() => {\n      this.notificationService.success('Pit in');\n    });\n  }\n\n  public pitOut(): Observable<boolean> {\n    const activeRace = this.activeRace();\n    if (activeRace === undefined) {\n      return new Observable<boolean>(observer => {\n        observer.next(false);\n        observer.complete();\n      });\n    }\n\n    const frontLeftTyrePressurePsi = this.tyrePressureEnabled() ? this.frontLeftTyrePressurePsi() : undefined;\n    const frontRightTyrePressurePsi = this.tyrePressureEnabled() ? this.frontRightTyrePressurePsi() : undefined;\n    const rearLeftTyrePressurePsi = this.tyrePressureEnabled() ? this.rearLeftTyrePressurePsi() : undefined;\n    const rearRightTyrePressurePsi = this.tyrePressureEnabled() ? this.rearRightTyrePressurePsi() : undefined;\n\n\n    return new Observable<boolean>(observer => {\n      this.sendPitOut(\n        activeRace.id,\n        this.optimizedStintMilliseconds(),\n        new Date(),\n        frontLeftTyrePressurePsi,\n        frontRightTyrePressurePsi,\n        rearLeftTyrePressurePsi,\n        rearRightTyrePressurePsi,\n      ).subscribe({\n        next: () => {\n          this.notificationService.success('Pit out');\n          observer.next(true);\n          observer.complete();\n        }\n      });\n    });\n  }\n\n  private sendStartRace(\n    startedDriverId: number,\n    startedAt: Date,\n    optimizedStintMilliseconds: number,\n    liveTimingUrl: string | undefined,\n    liveTimingSource: string | undefined,\n    frontLeftTyrePressurePsi: number | undefined,\n    frontRightTyrePressurePsi: number | undefined,\n    rearLeftTyrePressurePsi: number | undefined,\n    rearRightTyrePressurePsi: number | undefined,\n  ): Observable<void> {\n    return this.httpClient\n    .post<void>(\n      `${environment.baseUrl}${this.raceManagerPath}/start-race`,\n      {\n        startedDriverId: startedDriverId,\n        startedAt: startedAt,\n        optimizedStintMilliseconds: optimizedStintMilliseconds,\n        liveTimingUrl: liveTimingUrl,\n        liveTimingSource: liveTimingSource,\n        frontLeftTyrePressurePsi: frontLeftTyrePressurePsi,\n        frontRightTyrePressurePsi: frontRightTyrePressurePsi,\n        rearLeftTyrePressurePsi: rearLeftTyrePressurePsi,\n        rearRightTyrePressurePsi: rearRightTyrePressurePsi,\n      });\n  }\n\n  private sendEndRace(\n    raceId: number,\n    endedAt: Date,\n  ): Observable<void> {\n    return this.httpClient\n    .post<void>(\n        `${environment.baseUrl}${this.raceManagerPath}/end-race`,\n        {\n          raceId: raceId,\n          endedAt: endedAt,\n        });\n  }\n\n  private sendPitIn(\n    raceId: number,\n    exitDriverId: number,\n    refuel: boolean,\n    tyreChange: boolean,\n    interphoneChange: boolean,\n    kartChange: boolean\n  ): Observable<void> {\n    return this.httpClient\n    .post<void>(\n        `${environment.baseUrl}${this.raceManagerPath}/pit-in`,\n        {\n          raceId: raceId,\n          exitDriverId: exitDriverId,\n          entryAt: new Date(),\n          refuel: refuel,\n          tyreChange: tyreChange,\n          interphoneChange: interphoneChange,\n          kartChange: kartChange,\n        });\n  }\n\n  public sendPitOut(\n    raceId: number,\n    optimizedStintMilliseconds: number,\n    exitAt: Date,\n    frontLeftTyrePressurePsi: number | undefined,\n    frontRightTyrePressurePsi: number | undefined,\n    rearLeftTyrePressurePsi: number | undefined,\n    rearRightTyrePressurePsi: number | undefined,\n  ): Observable<void> {\n    return this.httpClient\n    .post<void>(\n        `${environment.baseUrl}${this.raceManagerPath}/pit-out`,\n        {\n          raceId: raceId,\n          optimizedStintMilliseconds: optimizedStintMilliseconds,\n          exitAt: exitAt,\n          frontLeftTyrePressurePsi: frontLeftTyrePressurePsi,\n          frontRightTyrePressurePsi: frontRightTyrePressurePsi,\n          rearLeftTyrePressurePsi: rearLeftTyrePressurePsi,\n          rearRightTyrePressurePsi: rearRightTyrePressurePsi,\n        });\n  }\n}\n","import { inject, Injectable } from '@angular/core';\nimport { NotificationService } from './notification.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AudioService {\n  private audio: HTMLAudioElement = new Audio();\n  private readonly notificationService = inject(NotificationService);\n\n  constructor() {\n    // Event handling for various audio events\n    this.audio.addEventListener('error', (e) => this.notificationService.error('Audio error:' + e.message));\n  }\n\n  play(): void {\n    this.audio.play();\n  }\n\n  playFile(src: string): void {\n    this.audio = new Audio(src);\n    this.audio.play();\n  }\n\n  pause(): void {\n    this.audio.pause();\n  }\n\n  stop(): void {\n    this.audio.pause();\n    this.audio.currentTime = 0;\n  }\n\n  seek(time: number): void {\n    this.audio.currentTime = time;\n  }\n\n  setVolume(volume: number): void {\n    this.audio.volume = volume;\n  }\n\n  setLoop(loop: boolean): void {\n    this.audio.loop = loop;\n  }\n\n  on(event: string, handler: () => void): void {\n    this.audio.addEventListener(event, handler);\n  }\n\n  off(event: string, handler: () => void): void {\n    this.audio.removeEventListener(event, handler);\n  }\n\n  getCurrentTime(): number {\n    return this.audio.currentTime;\n  }\n\n  getDuration(): number {\n    return this.audio.duration;\n  }\n}\n","import { Component, computed, effect, inject, Signal } from '@angular/core';\nimport { NgForOf } from \"@angular/common\";\nimport { PitLaneService } from \"../../service/pit-lane.service\";\nimport { PitService } from \"../../../pit/service/pit.service\";\nimport { FormsModule } from \"@angular/forms\";\nimport { Driver } from \"../../../driver/model/driver\";\nimport { DriverService } from \"../../../driver/service/driver.service\";\nimport { Pit } from \"../../../pit/model/pit\";\nimport {\n  millisecondsToHourMinuteSecondString,\n  millisecondsToMinuteSecondString\n} from \"../../../util/date.util\";\nimport { RaceManagerService } from \"../../../race/service/race-manager.service\";\nimport { TyreService } from \"../../../tyre/service/tyre.service\";\nimport { AudioService } from \"../../../shared/service/audio.service\";\nimport { PitLaneConfigService } from \"../../service/pit-lane-config.service\";\nimport { BoardConfigService } from \"../../../board/service/board-config.service\";\nimport { CardComponent } from '../../../shared/component/card/card.component';\nimport { PitConfigService } from '../../../pit/service/pit-config.service';\nimport { ChipComponent } from '../../../shared/component/chip/chip.component';\n\n@Component({\n  selector: 'app-pit-lane',\n  imports: [\n    FormsModule,\n    NgForOf,\n    CardComponent,\n    ChipComponent\n  ],\n  templateUrl: './pit-lane.component.html',\n  styleUrl: './pit-lane.component.css'\n})\nexport class PitLaneComponent {\n  private readonly pitLaneService = inject(PitLaneService);\n  private readonly pitService = inject(PitService);\n  private readonly driverService = inject(DriverService);\n  private readonly raceManagerService = inject(RaceManagerService);\n  private readonly tyreService = inject(TyreService);\n  private readonly boardConfigService = inject(BoardConfigService);\n  private readonly audioService = inject(AudioService);\n  private readonly pitLaneConfigService = inject(PitLaneConfigService);\n  private readonly pitConfigService = inject(PitConfigService);\n\n  readonly pitLaneOpen: Signal<boolean> = this.pitLaneService.open;\n  readonly pitLaneOpenInMilliseconds = computed(() => {\n    const value = this.pitLaneService.openInMilliseconds();\n    this.pitLaneOpenInMillisecondsString = millisecondsToHourMinuteSecondString(value);\n    return value;\n  });\n\n  readonly activePit: Signal<Pit | undefined> = this.pitService.activePit;\n  readonly activePitRemainingMilliseconds = computed(() => {\n    const value = this.pitService.activePitRemainingMilliseconds();\n    this.activePitRemainingMillisecondsString = millisecondsToMinuteSecondString(value);\n    return value\n  })\n\n  readonly drivers: Signal<Driver[]> = this.driverService.drivers;\n\n  readonly remainingTyreChange: Signal<number> = this.tyreService.remainingTyreChange\n  readonly tyreChangeWindowOpen: Signal<boolean> = this.tyreService.tyreChangeWindowOpen;\n\n  readonly minPitSeconds = computed(() => {\n    const config = this.pitConfigService.pitConfig();\n    if (config) {\n      return config.minPitSeconds !== 0 ? config.minPitSeconds : undefined;\n    }\n    return undefined;\n  });\n\n  readonly minPitSecondsString = computed(() => {\n    const value = this.minPitSeconds();\n    if (value) {\n      return millisecondsToMinuteSecondString(value * 1000);\n    }\n    return '';\n  });\n\n  readonly maxPitSeconds = computed(() => {\n    const config = this.pitConfigService.pitConfig();\n    if (config) {\n      if (config.maxPitSeconds === config.minPitSeconds) {\n        return undefined;\n      }\n      return config.maxPitSeconds !== 0 ? config.maxPitSeconds : undefined;\n    }\n    return undefined;\n  });\n\n  readonly maxPitSecondsString = computed(() => {\n    const value = this.maxPitSeconds();\n    if (value) {\n      return millisecondsToMinuteSecondString(value * 1000);\n    }\n    return '';\n  });\n\n  fuelVisible = false;\n  tyreChangeVisible = false;\n  interphoneChangeVisible = false;\n  kartChangeVisible = false;\n\n  refuel = false;\n  tyreChange = false;\n  interphoneChange = false;\n  kartChange = false;\n\n  selectedDriver: number = 1;\n\n  pitLaneOpenInMillisecondsString: string = '';\n  activePitRemainingMillisecondsString: string = '';\n\n  constructor() {\n\n    effect(() => {\n      const pitLaneConfig = this.pitLaneConfigService.pitLaneConfig();\n      if (pitLaneConfig) {\n        this.refuel = pitLaneConfig.refuel;\n        this.tyreChange = pitLaneConfig.tyreChange;\n        this.interphoneChange = pitLaneConfig.interphoneChange\n        this.selectedDriver = pitLaneConfig.driverId;\n        this.kartChange = pitLaneConfig.kartChange;\n      }\n    });\n\n    effect(() => {\n      const boardConfig = this.boardConfigService.boardConfig()\n      if (boardConfig) {\n        this.fuelVisible = boardConfig.fuelVisible;\n        this.tyreChangeVisible = boardConfig.tyreChangeVisible;\n        this.interphoneChangeVisible = boardConfig.interphoneVisible;\n        this.kartChangeVisible = boardConfig.kartChangeVisible;\n      }\n    });\n  }\n\n  pitIn() {\n    this.audioService.playFile('assets/box_box_box_box.mp3');\n    this.raceManagerService.pitIn(\n        this.selectedDriver,\n        this.refuel,\n        this.tyreChange,\n        this.interphoneChange,\n        this.kartChange);\n  }\n\n  pitOut() {\n    this.raceManagerService.pitOut().subscribe(result => {\n      if (result) {\n        this.resetPitLane();\n      }\n    });\n  }\n\n  updateDriverId() {\n    this.pitLaneConfigService.updateDriverId(this.selectedDriver);\n  }\n\n  updateTyreChange() {\n    this.pitLaneConfigService.updateTyreChange(this.tyreChange);\n  }\n\n  updateRefueling() {\n    this.pitLaneConfigService.updateRefuel(this.refuel);\n  }\n\n  updateInterphoneChange(){\n    this.pitLaneConfigService.updateInterphoneChange(this.interphoneChange);\n  }\n\n  updateKartChange(){\n    this.pitLaneConfigService.updateKartChange(this.kartChange);\n  }\n\n  async resetPitLane() {\n    await this.pitLaneConfigService.updateRefuel(false);\n    await this.pitLaneConfigService.updateTyreChange(false);\n    await this.pitLaneConfigService.updateInterphoneChange(false);\n    await this.pitLaneConfigService.updateKartChange(false);\n\n    const driver: Driver | undefined = this.driverService.driverWithMoreTimeFromLastStint();\n    if (driver) {\n      await this.pitLaneConfigService.updateDriverId(driver.id);\n    }\n  }\n}\n","<app-card\n  title=\"🅿️ Pit Lane\"\n  [initiallyOpen]=\"true\">\n\n  <div slot=\"header-right-content\" class=\"flex items-center gap-1\">\n    @if (minPitSeconds()) {\n      <app-chip\n        [text]=\"'Min pit: ' + minPitSecondsString()\"\n      />\n    }\n    @if (maxPitSeconds()) {\n      <app-chip\n        [text]=\"'Max pit: ' + maxPitSecondsString()\"\n      />\n    }\n\n    <app-chip\n      [text]=\"pitLaneOpen() ? 'Open' : 'Close'\"\n      [backgroundColor]=\"pitLaneOpen() ? 'bg-green-500' : 'bg-red-500'\"\n    />\n  </div>\n\n  <div slot=\"body-content\" class=\"flex flex-col gap-2\">\n    <div class=\"flex flex-col items-center gap-2\">\n      @if (!activePit()) {\n        <div class=\"font-semibold text-neutral-900 dark:text-neutral-100\">PIT SETTINGS</div>\n        <form class=\"flex flex-col gap-2\">\n          <div class=\"flex flex-row gap-2\">\n            <label for=\"driverSelect\" class=\"text-neutral-900 dark:text-neutral-100\">🐗 Driver</label>\n            <select\n              [disabled]=\"activePit() !== undefined\"\n              id=\"driverSelect\"\n              [(ngModel)]=\"selectedDriver\"\n              (change)=\"updateDriverId()\"\n              name=\"driverSelect\"\n              class=\"border rounded-sm p-1 text-neutral-900 dark:text-neutral-100\">\n              <option *ngFor=\"let driver of drivers()\"\n                      [value]=driver.id>\n                {{ driver.raceName }}\n              </option>\n            </select>\n          </div>\n\n          @if (fuelVisible) {\n            <div class=\"flex flex-row gap-2\">\n              <label for=\"refueling\" class=\"text-neutral-900 dark:text-neutral-100\">⛽️ Refueling</label>\n              <input\n                [disabled]=\"activePit() !== undefined\"\n                type=\"checkbox\"\n                id=\"refueling\"\n                (change)=\"updateRefueling()\"\n                [(ngModel)]=\"refuel\"\n                name=\"refueling\">\n            </div>\n          }\n\n          @if (tyreChangeVisible) {\n            <div class=\"flex flex-row gap-2\">\n              <label for=\"tyreChange\" class=\"text-neutral-900 dark:text-neutral-100\">🛞 Tyre change</label>\n              <input\n                [disabled]=\"activePit() !== undefined || !tyreChangeWindowOpen() || remainingTyreChange() <= 0\"\n                type=\"checkbox\"\n                id=\"tyreChange\"\n                [(ngModel)]=\"tyreChange\"\n                (change)=\"updateTyreChange()\"\n                name=\"tyreChange\">\n            </div>\n          }\n\n          @if (interphoneChangeVisible) {\n            <div class=\"flex flex-row gap-2\">\n              <label for=\"interphoneChange\" class=\"text-neutral-900 dark:text-neutral-100\">🔊 Interphone change</label>\n              <input\n                [disabled]=\"activePit() !== undefined\"\n                type=\"checkbox\"\n                id=\"interphoneChange\"\n                [(ngModel)]=\"interphoneChange\"\n                (change)=\"updateInterphoneChange()\"\n                name=\"interphoneChange\">\n            </div>\n          }\n\n          @if (kartChangeVisible) {\n            <div class=\"flex flex-row gap-2\">\n              <label for=\"kartChange\" class=\"text-neutral-900 dark:text-neutral-100\">🏎️ Kart change</label>\n              <input\n                [disabled]=\"activePit() !== undefined\"\n                type=\"checkbox\"\n                id=\"kartChange\"\n                [(ngModel)]=\"kartChange\"\n                (change)=\"updateKartChange()\"\n                name=\"kartChange\">\n            </div>\n          }\n        </form>\n\n\n      } @else {\n        <app-chip\n          [text]=\"activePitRemainingMilliseconds() > 0 ? 'Pit out enabled in: ' + activePitRemainingMillisecondsString : 'Pit out ready!'\"\n          [backgroundColor]=\"activePitRemainingMilliseconds() > 0 ? 'bg-yellow-500':'bg-green-500'\"\n          [bounceCondition]=\"activePitRemainingMilliseconds() < 10000 && activePitRemainingMilliseconds() > 0\"\n          [large]=\"true\"\n        />\n      }\n    </div>\n\n    <div class=\"flex justify-between items-center\">\n      <button\n        (click)=\"pitIn()\"\n        [disabled]=\"!pitLaneOpen() || activePit()\"\n        class=\"bg-green-500 hover:bg-green-700 disabled:bg-green-200 text-white font-bold py-2 px-4 rounded-sm hover:cursor-pointer\">\n        Pit in\n      </button>\n\n      @if (pitLaneOpenInMilliseconds() > 0) {\n        <app-chip\n          [text]=\"'Open in: ' + pitLaneOpenInMillisecondsString\"\n          [backgroundColor]=\"'bg-green-500'\"\n        />\n      }\n\n      <button\n        (click)=\"pitOut()\"\n        [disabled]=\"!activePit() || (activePit() && activePitRemainingMilliseconds() > 0)\"\n        class=\"bg-red-500 hover:bg-red-700 disabled:bg-red-200 text-white font-bold py-2 px-4 rounded-sm hover:cursor-pointer\">\n        Pit out\n      </button>\n    </div>\n  </div>\n\n</app-card>\n","import { Component, inject, Signal } from '@angular/core';\nimport { RaceService } from \"../../service/race.service\";\nimport { RaceManagerService } from \"../../service/race-manager.service\";\nimport { combineLatest, interval } from \"rxjs\";\nimport { takeUntilDestroyed, toObservable } from \"@angular/core/rxjs-interop\";\nimport { RaceConfig } from \"../../model/race-config\";\nimport { RaceConfigService } from \"../../service/race-config.service\";\nimport { Race } from \"../../model/race\";\nimport { addHours, differenceInSeconds } from \"date-fns\";\n\n@Component({\n  selector: 'app-race-button',\n  imports: [],\n  templateUrl: './race-button.component.html',\n  styleUrl: './race-button.component.css'\n})\nexport class RaceButtonComponent {\n  private readonly raceService = inject(RaceService);\n  private readonly raceConfigService = inject(RaceConfigService);\n  private readonly raceManagerService = inject(RaceManagerService);\n\n  readonly activeRace: Signal<Race | undefined> = this.raceService.activeRace;\n  readonly activeRaceConfig: Signal<RaceConfig | undefined> = this.raceConfigService.raceConfig;\n  readonly willEndRaceDate: Signal<Date | undefined> = this.raceService.willEndRaceDate;\n\n  hideEndRaceButton = true;\n\n  constructor() {\n    combineLatest({\n      activeRace: toObservable(this.activeRace),\n      activeRaceConfig: toObservable(this.activeRaceConfig),\n      ping: interval(1000)\n    })\n    .pipe(takeUntilDestroyed())\n    .subscribe(({activeRace, activeRaceConfig}) => {\n      if (activeRace && activeRaceConfig) {\n        this.hideEndRaceButton = this.calculateHide(activeRace, activeRaceConfig);\n      } else {\n        this.hideEndRaceButton = true;\n      }\n    });\n  }\n\n  endRace(): void {\n    this.raceManagerService.endRace();\n  }\n\n  private calculateHide(race: Race, raceConfig: RaceConfig): boolean {\n    if (race.endedAt !== null) {\n      return true;\n    }\n\n    const willEnd = addHours(race.startedAt, raceConfig.durationHour);\n    const difference = differenceInSeconds(willEnd, new Date());\n\n    return difference > raceConfig.endRaceButtonThresholdSeconds || race.endedAt !== null;\n  }\n\n  startRace(): void {\n    const startDriverId = this.raceConfigService.raceConfig()?.startRaceDriverId;\n    if (startDriverId) {\n      this.raceManagerService.startRace(startDriverId);\n    }\n  }\n}\n","@if (!hideEndRaceButton || !willEndRaceDate()) {\n  <div class=\"flex justify-center items-center\">\n\n    @if (!willEndRaceDate()) {\n      <button\n          (click)=\"startRace()\"\n          class=\"bg-green-500 hover:bg-green-700 text-neutral-100 font-bold py-2 px-4 rounded-sm hover:cursor-pointer\">\n        Start race\n      </button>\n    }\n\n    @if (!hideEndRaceButton) {\n      <button\n          (click)=\"endRace()\"\n          class=\"bg-red-500 hover:bg-red-700 text-neutral-100 font-bold py-2 px-4 rounded-sm hover:cursor-pointer\">\n        End race\n      </button>\n    }\n  </div>\n}\n\n","import { Component, effect, inject, Signal } from '@angular/core';\nimport { RaceService } from \"../../service/race.service\";\nimport { getTimeUntilFutureDate, } from \"../../../util/date.util\";\nimport { combineLatest, interval } from \"rxjs\";\nimport { takeUntilDestroyed, toObservable } from \"@angular/core/rxjs-interop\";\nimport { FormsModule } from \"@angular/forms\";\nimport { NgForOf } from \"@angular/common\";\nimport { DriverService } from \"../../../driver/service/driver.service\";\nimport { Driver } from \"../../../driver/model/driver\";\nimport { RaceConfigService } from \"../../service/race-config.service\";\nimport { isAfter } from \"date-fns\";\n\n@Component({\n  selector: 'app-race',\n  imports: [\n    FormsModule,\n    NgForOf\n  ],\n  templateUrl: './race.component.html',\n  styleUrl: './race.component.css'\n})\nexport class RaceComponent {\n  private readonly raceService = inject(RaceService);\n  private readonly raceConfigService = inject(RaceConfigService);\n  private readonly driverService = inject(DriverService);\n\n  readonly drivers: Signal<Driver[]> = this.driverService.drivers;\n  readonly willEndRaceDate: Signal<Date | undefined> = this.raceService.willEndRaceDate;\n\n  endRaceCountdown: string = '00:00:00';\n  selectedDriver: number = 1;\n\n  constructor() {\n    combineLatest({\n      willEndRaceDate: toObservable(this.willEndRaceDate),\n      ping: interval(1000)\n    })\n    .pipe(takeUntilDestroyed())\n    .subscribe(result => {\n      const willEndRaceDate = result.willEndRaceDate;\n      if (willEndRaceDate) {\n        if (isAfter(new Date(), willEndRaceDate)) {\n          this.endRaceCountdown = '00:00:00';\n        } else {\n          this.endRaceCountdown = getTimeUntilFutureDate(willEndRaceDate);\n        }\n      }\n    });\n\n    effect(() => {\n      const activeRaceConfig = this.raceConfigService.raceConfig()\n      if (activeRaceConfig) {\n        this.selectedDriver = activeRaceConfig.startRaceDriverId;\n      }\n    });\n  }\n\n  updateDriverId() {\n    this.raceConfigService.updateStartRaceDriverId(this.selectedDriver);\n  }\n}\n","@if (!willEndRaceDate()) {\n  <div class=\"flex items-center justify-center\">\n    <div class=\"font-bold mr-2 \">\n      <form>\n        <label for=\"driverSelect\" class=\"mr-2 text-neutral-900 dark:text-neutral-100\">Start driver</label>\n        <select\n            id=\"driverSelect\"\n            [(ngModel)]=\"selectedDriver\"\n            (change)=\"updateDriverId()\"\n            name=\"driverSelect\"\n            class=\"border border-neutral-400 dark:border-neutral-100 rounded-sm p-1 text-neutral-900 dark:text-neutral-100 bg-neutral-50 dark:bg-neutral-800\">\n          <option *ngFor=\"let driver of drivers()\"\n                  [value]=driver.id>\n            {{ driver.raceName }}\n          </option>\n        </select>\n      </form>\n    </div>\n  </div>\n} @else {\n  <div class=\"text-center text-2xl md:text-4xl text-neutral-900 dark:text-neutral-100 font-bold font-mono\">\n    {{ endRaceCountdown }}\n  </div>\n}\n","import { Component, computed, inject, Signal } from '@angular/core';\nimport { DatePipe, NgClass, NgForOf } from \"@angular/common\";\nimport { StintService } from \"../../service/stint.service\";\nimport { DriverService } from \"../../../driver/service/driver.service\";\nimport {\n  getElapsedTime,\n  millisecondsToHourMinuteSecondString,\n  millisecondsToMinuteSecondMillisecondsString,\n} from \"../../../util/date.util\";\nimport { Stint } from \"../../model/stint\";\nimport { addMilliseconds, format } from \"date-fns\";\nimport { StintDataService } from \"../../service/stint-data.service\";\nimport { Tooltip } from \"../../../shared/component/tooltip/tooltip\";\nimport { TooltipPosition } from \"../../../shared/component/tooltip/tooltip.enums\";\nimport { TooltipDirective } from \"../../../shared/component/tooltip/tooltip.directive\";\nimport { CardComponent } from '../../../shared/component/card/card.component';\nimport { ChipComponent } from '../../../shared/component/chip/chip.component';\n\n@Component({\n  selector: 'app-stint',\n  imports: [\n    NgClass,\n    NgForOf,\n    DatePipe,\n    TooltipDirective,\n    CardComponent,\n    ChipComponent\n  ],\n  templateUrl: './stint.component.html',\n  styleUrl: './stint.component.css'\n})\nexport class StintComponent {\n  private readonly stintService = inject(StintService);\n  private readonly stintDataService = inject(StintDataService);\n  private readonly driverService = inject(DriverService);\n\n  readonly stints: Signal<Stint[]> = this.stintDataService.stints;\n\n  readonly activeStintId = computed(() => {\n    const activeStint = this.stintService.activeStint();\n    if (activeStint) {\n      return activeStint.id;\n    }\n    return undefined;\n  });\n\n  readonly stintAVGMilliseconds = computed(() => {\n    const value = this.stintService.stintAVGMilliseconds();\n    this.stintAVGString = millisecondsToHourMinuteSecondString(value);\n    return value;\n  });\n\n  readonly stintPaceStringById = computed(() => {\n    const result = new Map<number, string>();\n    const value = this.stintService.stintPaceById();\n    value.forEach((pace, id) => {\n      result.set(id, millisecondsToMinuteSecondMillisecondsString(pace));\n    })\n    return result;\n  });\n\n  stintAVGString: string = '';\n\n  protected tooltipAVGInfo: Tooltip = {\n    footer: \"\",\n    paragraphs: [\"Only completed stint\"],\n    title: \"\"\n  }\n  protected tooltipPosition: TooltipPosition = TooltipPosition.ABOVE;\n\n  getDriverRacingName(driverId: number): string {\n    const raceName = this.driverService.raceNameById().get(driverId);\n    return raceName ? raceName : '';\n  }\n\n  calculateTimeOnTrack(start: Date, end: Date | undefined): string {\n    if (end) {\n      return getElapsedTime(start, end);\n    }\n    return getElapsedTime(start, new Date());\n  }\n\n  calculateTotalTimeOnTrack(stints: Stint[]): string {\n    let timeSpent = 0;\n    stints.forEach(stint => {\n      if (stint.endedAt) {\n        timeSpent += stint.endedAt.getTime() - stint.startedAt.getTime();\n      } else {\n        // STINT CORRENTE\n        timeSpent += new Date().getTime() - stint.startedAt.getTime();\n      }\n    })\n    return millisecondsToHourMinuteSecondString(timeSpent);\n  }\n\n  getEndDate(stint: Stint): string {\n    if (stint.endedAt) {\n      return format(stint.endedAt, 'HH:mm:ss');\n    }\n\n    const provisionedEnd = addMilliseconds(stint.startedAt, stint.optimizedMilliseconds);\n    return '(' + format(provisionedEnd, 'HH:mm:ss') + ')';\n  }\n\n  getPace(stint: Stint): string {\n    return this.stintPaceStringById().get(stint.id) ?? '--:--.---';\n  }\n}\n","<app-card\n  title=\"⏳ Stint\"\n  [initiallyOpen]=\"false\">\n\n  <div slot=\"header-right-content\"\n       class=\"flex items-center gap-1\">\n    <app-chip\n      [text]=\"'Total: ' + stints().length\"\n    />\n\n    @if (stintAVGMilliseconds() != 0) {\n      <app-chip\n        [text]=\"'AVG: ' + stintAVGString\"\n        tooltip [tooltipData]=tooltipAVGInfo [tooltipPosition]=tooltipPosition\n      />\n    }\n  </div>\n\n  <div slot=\"body-content\"\n       class=\"max-h-72 flex flex-col overflow-clip\">\n    <table class=\"w-full bg-neutral-50 dark:bg-neutral-800 table-fixed\">\n      <thead class=\"sticky top-0\">\n      <tr>\n        <th class=\"py-2 px-3 border-b border-neutral-200 dark:border-neutral-400 text-left text-xs md:text-base font-medium text-neutral-700 dark:text-neutral-400\">\n          ID\n        </th>\n        <th class=\"py-2 border-b border-neutral-200 dark:border-neutral-400 text-left text-xs md:text-base font-medium text-neutral-700 dark:text-neutral-400\">\n          Driver\n        </th>\n        <th class=\"py-2 px-3 border-b border-neutral-200 dark:border-neutral-400 text-center text-xs md:text-base font-medium text-neutral-700 dark:text-neutral-400\"\n            colspan=\"2\">Lap AVG\n        </th>\n        <th class=\"py-2 px-3 border-b border-neutral-200 dark:border-neutral-400 text-center text-xs md:text-base font-medium text-neutral-700 dark:text-neutral-400\"\n            colspan=\"2\">Start\n        </th>\n        <th class=\"py-2 px-3 border-b border-neutral-200 dark:border-neutral-400 text-center text-xs md:text-base font-medium text-neutral-700 dark:text-neutral-400\"\n            colspan=\"2\">End\n        </th>\n        <th class=\"py-2 px-3 border-b border-neutral-200 dark:border-neutral-400 text-center text-xs md:text-base font-medium text-neutral-700 dark:text-neutral-400\"\n            colspan=\"2\">On track\n        </th>\n      </tr>\n      </thead>\n    </table>\n    <div class=\"flex-1 overflow-y-auto\">\n      <table class=\"w-full table-fixed\">\n        <tbody>\n        <tr *ngFor=\"let stint of stints()\"\n            [ngClass]=\"{'bg-green-100 dark:bg-green-900 font-semibold': stint.id === activeStintId(), 'hover:bg-neutral-100 dark:hover:bg-neutral-700': stint.id !== activeStintId()}\">\n          <td class=\"py-2 px-3 border-b border-neutral-200 dark:border-neutral-400 text-xs md:text-base text-neutral-900 dark:text-neutral-100\">{{ stint.id }}</td>\n          <td class=\"py-2 border-b border-neutral-200 dark:border-neutral-400 text-xs md:text-base text-neutral-900 dark:text-neutral-100\">{{\n              getDriverRacingName(stint.driverId)\n            }}\n          </td>\n          <td class=\"py-2 border-b border-neutral-200 dark:border-neutral-400 text-center text-xs md:text-base text-neutral-900 dark:text-neutral-100 font-mono\"\n              colspan=\"2\">{{ getPace(stint) }}\n          </td>\n          <td class=\"py-2 border-b border-neutral-200 dark:border-neutral-400 text-center text-xs md:text-base text-neutral-900 dark:text-neutral-100 font-mono\"\n              colspan=\"2\">{{ stint.startedAt | date:'HH:mm:ss' }}\n          </td>\n          <td class=\"py-2 border-b border-neutral-200 dark:border-neutral-400 text-center text-xs md:text-base text-neutral-900 dark:text-neutral-100 font-mono\"\n              colspan=\"2\">\n            {{ getEndDate(stint) }}\n          </td>\n          <td class=\"py-2 border-b border-neutral-200 dark:border-neutral-400 text-center text-xs md:text-base text-neutral-900 dark:text-neutral-100 font-mono\"\n              colspan=\"2\"> {{\n              calculateTimeOnTrack(stint.startedAt, stint.endedAt)\n            }}\n          </td>\n\n        </tr>\n        </tbody>\n      </table>\n    </div>\n    <div class=\"flex\">\n      <table class=\"w-full table-fixed\">\n        <tfoot class=\"sticky bottom-0-0\">\n        <tr class=\"bg-neutral-100 dark:bg-neutral-700 font-bold\">\n          <td class=\"py-2 px-3 border-b border-neutral-200 dark:border-neutral-400 text-xs md:text-base text-neutral-900 dark:text-neutral-100\"\n              colspan=\"8\">Totals\n          </td>\n          <td class=\"py-2 border-b border-neutral-200 dark:border-neutral-400 text-center text-xs md:text-base text-neutral-900 dark:text-neutral-100 font-mono\"\n              colspan=\"2\">{{ calculateTotalTimeOnTrack(stints()) }}\n          </td>\n        </tr>\n        </tfoot>\n      </table>\n    </div>\n  </div>\n\n</app-card>\n","import { Component, computed, inject } from '@angular/core';\nimport { StintOptimizerService } from \"../../service/stint-optimizer.service\";\nimport { millisecondsToTimeString } from \"../../../util/date.util\";\nimport { CardComponent } from '../../../shared/component/card/card.component';\nimport { ChipComponent } from '../../../shared/component/chip/chip.component';\n\n@Component({\n  selector: 'app-stint-optimizer',\n  imports: [CardComponent, ChipComponent],\n  templateUrl: './stint-optimizer.component.html',\n  styleUrl: './stint-optimizer.component.css'\n})\nexport class StintOptimizerComponent {\n  private readonly stintOptimizerService = inject(StintOptimizerService);\n\n  AVGStintTime = computed(() => {\n    const optimizedStint = this.stintOptimizerService.optimizedStint();\n    if (optimizedStint) {\n      return millisecondsToTimeString(optimizedStint.avgStintMillisecondsTime);\n    }\n    return '--:--:--'\n  });\n\n  laps = computed(() => {\n    const optimizedStint = this.stintOptimizerService.optimizedStint();\n    if (optimizedStint) {\n      return optimizedStint.laps;\n    }\n    return 0;\n  });\n\n  AVGStintTimeIfDriverChangeNow = computed(() => {\n    const optimizedStint = this.stintOptimizerService.optimizedStint();\n    if (optimizedStint) {\n      return millisecondsToTimeString(optimizedStint.avgStintMillisecondsIfDriverChangedNow);\n    }\n    return '--:--:--'\n  });\n\n  lapsIfDriverChangeNow = computed(() => {\n    const optimizedStint = this.stintOptimizerService.optimizedStint();\n    if (optimizedStint) {\n      return optimizedStint.lapsIfDriverChangeNow;\n    }\n    return 0;\n  });\n}\n","<app-card\n  title=\"🧠 Stint optimizer\"\n  [initiallyOpen]=\"false\">\n\n  <div slot=\"header-right-content\" class=\"flex items-center gap-1\">\n\n    <app-chip\n      [text]=\"'Optimum: ' + AVGStintTime()\"\n    />\n\n    <app-chip\n      [text]=\"'Laps: ' + laps()\"\n    />\n\n  </div>\n\n  <div slot=\"body-content\" class=\"flex flex-col gap-2\">\n    <div class=\"flex justify-between\">\n      <div>\n        <div class=\"text-neutral-500 dark:text-neutral-400\">Optimized AVG time</div>\n        <div class=\"text-neutral-900 dark:text-neutral-100 font-mono\">\n          {{ AVGStintTime() }}\n        </div>\n      </div>\n\n      <div>\n        <div class=\"text-neutral-500 dark:text-neutral-400 text-right\">Laps</div>\n        <div class=\"text-neutral-900 dark:text-neutral-100 font-mono text-right\">\n          {{ laps() }}\n        </div>\n      </div>\n    </div>\n\n    <hr>\n\n    <div class=\"flex justify-between\">\n      <div>\n        <div class=\"text-neutral-500 dark:text-neutral-400\">\n          Optimized AVG time\n          <strong>if driver change now</strong>\n        </div>\n        <div class=\"text-neutral-900 dark:text-neutral-100 font-mono\">\n          {{ AVGStintTimeIfDriverChangeNow() }}\n        </div>\n      </div>\n\n      <div>\n        <div class=\"text-neutral-500 dark:text-neutral-400 text-right\">Laps</div>\n        <div class=\"text-neutral-900 dark:text-neutral-100 font-mono text-right\">\n          {{ lapsIfDriverChangeNow() }}\n        </div>\n      </div>\n    </div>\n  </div>\n\n</app-card>\n","import { inject, Injectable, signal, WritableSignal } from '@angular/core';\nimport { TimelineStep } from \"../model/timeline-step\";\nimport { combineLatest, interval } from \"rxjs\";\nimport { takeUntilDestroyed, toObservable } from \"@angular/core/rxjs-interop\";\nimport { StintOptimizerService } from \"../../stint/service/stint-optimizer.service\";\nimport { PitService } from \"../../pit/service/pit.service\";\nimport { TyreService } from \"../../tyre/service/tyre.service\";\nimport { PitConfigService } from \"../../pit/service/pit-config.service\";\nimport { PitDataService } from \"../../pit/service/pit-data.service\";\nimport { StintDataService } from \"../../stint/service/stint-data.service\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TimelineService {\n  private readonly stintDataService = inject(StintDataService);\n  private readonly pitService = inject(PitService);\n  private readonly pitDataService = inject(PitDataService);\n  private readonly stintOptimizerService = inject(StintOptimizerService);\n  private readonly pitConfigService = inject(PitConfigService);\n  private readonly tyreService = inject(TyreService);\n\n  private readonly worker: Worker | undefined;\n\n  readonly timelineSteps: WritableSignal<TimelineStep[]> = signal([]);\n\n  constructor() {\n\n    if (typeof Worker !== 'undefined') {\n      this.worker = new Worker(new URL('./timeline.worker', import.meta.url));\n      this.worker.onmessage = ({data}) => {\n        this.timelineSteps.set(data.timelineSteps as TimelineStep[]);\n      };\n    }\n\n    combineLatest({\n      stints: toObservable(this.stintDataService.stints),\n      pits: toObservable(this.pitDataService.pits),\n      remainingDriverChanges: toObservable(this.pitService.remainingDriverChanges),\n      pitConfig: toObservable(this.pitConfigService.pitConfig),\n      optimizedStint: toObservable(this.stintOptimizerService.optimizedStint),\n      remainingTyreChange: toObservable(this.tyreService.remainingTyreChange),\n      ping: interval(1000)\n    })\n    .pipe(takeUntilDestroyed())\n    .subscribe((\n        {\n          stints,\n          pits,\n          remainingDriverChanges,\n          pitConfig,\n          optimizedStint,\n          remainingTyreChange\n        }) => {\n\n      if (this.worker && pitConfig) {\n        this.worker.postMessage({\n          stints: stints,\n          pits: pits,\n          remainingDriverChanges: remainingDriverChanges,\n          pitConfig: pitConfig,\n          optimizedStint: optimizedStint,\n          remainingTyreChange: remainingTyreChange\n        });\n      }\n    })\n  }\n}\n","import { Component, computed, inject, Signal } from '@angular/core';\nimport { NgClass, NgForOf } from \"@angular/common\";\nimport { TimelineService } from \"../../service/timeline.service\";\nimport { TimelineStep } from \"../../model/timeline-step\";\nimport { addMilliseconds, format } from \"date-fns\";\nimport { TooltipDirective } from \"../../../shared/component/tooltip/tooltip.directive\";\nimport { getElapsedTime, millisecondsToTimeString } from \"../../../util/date.util\";\nimport { Tooltip } from \"../../../shared/component/tooltip/tooltip\";\nimport { DriverService } from \"../../../driver/service/driver.service\";\nimport { TooltipPosition } from \"../../../shared/component/tooltip/tooltip.enums\";\nimport { TimelineConfigService } from '../../service/timeline-config.service';\n\n@Component({\n  selector: 'app-timeline',\n  imports: [\n    NgForOf,\n    NgClass,\n    TooltipDirective\n  ],\n  templateUrl: './timeline.component.html',\n  styleUrl: './timeline.component.css'\n})\nexport class TimelineComponent {\n  private readonly timelineService = inject(TimelineService);\n  private readonly timelineConfigService = inject(TimelineConfigService);\n  private readonly driverService = inject(DriverService);\n\n  readonly timelineSteps: Signal<TimelineStep[]> = this.timelineService.timelineSteps;\n  readonly visibleAfterMinWidthPixel = computed(() => {\n    const config = this.timelineConfigService.timelineConfig();\n    return config ? config.visibleAfterMinWidthPixel : 1500;\n  })\n\n  hide = false;\n\n  constructor() {\n    this.onResize();\n    window.addEventListener('resize', this.onResize.bind(this));\n  }\n\n  private onResize() {\n    this.hide = window.innerWidth <= this.visibleAfterMinWidthPixel();\n  }\n\n  getTooltipPosition(stepIndex: number): TooltipPosition {\n    const length = this.timelineSteps().length;\n\n    if (length <= 9 ) {\n      return TooltipPosition.BELOW;\n    }\n\n    // Adaptive algorithm to determine tooltip position\n    const threshold = Math.floor(length / 10);\n    if (stepIndex < threshold) {\n      return TooltipPosition.RIGHT;\n    } else if (stepIndex >= length - threshold) {\n      return TooltipPosition.LEFT;\n    }\n\n    return TooltipPosition.BELOW;\n  }\n\n  ////// STINT\n  getStintColor(step: TimelineStep): string {\n    if (step.status === 'DONE') {\n      return 'bg-blue-400';\n    } else if (step.status === 'FUTURE') {\n      return 'bg-blue-100';\n    }\n    return 'bg-green-500';\n  }\n\n  getStintIcon(step: TimelineStep): string {\n    if (step.status === 'ACTIVE') {\n      return '🏎️';\n    }\n    return '⏳';\n  }\n\n  getStintTooltipInfo(step: TimelineStep): Tooltip {\n    let paragraphs = [this.getStintTimeInfo(step), this.getDriverInfo(step), this.getStintTyrePressureInfo(step)].filter(Boolean);\n    return {\n      footer: \"\",\n      paragraphs: paragraphs,\n      title: this.getTooltipTitle(step)\n    }\n  }\n\n  private getStintTimeInfo(step: TimelineStep): string {\n    let result: string[] = [];\n    result.push('Start: ' + format(step.start, 'HH:mm:ss'));\n    let optimumMilliseconds = step.stint ? step.stint.optimizedMilliseconds ?? 0 : 0;\n\n    switch (step.status) {\n      case 'ACTIVE':\n        result.push('On track: ' + getElapsedTime(step.start, new Date()));\n        result.push('Optimum: ' + millisecondsToTimeString(optimumMilliseconds));\n        result.push('End: (' + format(addMilliseconds(step.start, optimumMilliseconds), 'HH:mm:ss') + ')');\n        break;\n      case \"DONE\":\n        result.push('On track: ' + getElapsedTime(step.start, step.end));\n        result.push('Optimum: ' + millisecondsToTimeString(optimumMilliseconds));\n        result.push('End: ' + (step.end ? format(step.end, 'HH:mm:ss') : ''));\n        break;\n      case \"FUTURE\":\n        result.push('Optimum: ' + millisecondsToTimeString(step.durationMills));\n        result.push('End: ' + (step.end ? format(step.end, 'HH:mm:ss') : ''));\n        break\n    }\n    return result.filter(Boolean).join('\\n');\n  }\n\n  private getStintTyrePressureInfo(step: TimelineStep): string {\n    let result: string[] = [];\n    if (step.stint) {\n      let front: string[] = [];\n      if (step.stint.frontLeftTyrePressurePsi) {\n        front.push('FL: ' + step.stint.frontLeftTyrePressurePsi + ' psi');\n      }\n      if (step.stint.frontRightTyrePressurePsi) {\n        front.push('FR: ' + step.stint.frontRightTyrePressurePsi + ' psi');\n      }\n      if (front.length > 0) {\n        result.push(front.join(' | '));\n      }\n\n      let rear: string[] = [];\n      if (step.stint.rearLeftTyrePressurePsi) {\n        rear.push('RL: ' + step.stint.rearLeftTyrePressurePsi + ' psi');\n      }\n      if (step.stint.rearRightTyrePressurePsi) {\n        rear.push('RR: ' + step.stint.rearRightTyrePressurePsi + ' psi');\n      }\n      if (rear.length > 0) {\n        result.push(rear.join(' | '));\n      }\n    }\n    return result.filter(Boolean).join('\\n');\n  }\n\n  ////// PIT\n  getPitColor(step: TimelineStep): string {\n    if (step.status === 'DONE') {\n      return 'bg-amber-400';\n    } else if (step.status === 'FUTURE') {\n      return 'bg-amber-100';\n    }\n    return 'bg-green-500';\n  }\n\n  getPitIcon(step: TimelineStep): string {\n    if (step.status === 'ACTIVE') {\n      return '🅿️';\n    }\n    return '👨🏻‍🔧';\n  }\n\n  getPitTooltipInfo(step: TimelineStep): Tooltip {\n    let paragraphs = [this.getPitTimeInfo(step), this.getDriverInfo(step)].filter(Boolean);\n    return {\n      footer: this.getPitFooter(step),\n      paragraphs: paragraphs,\n      title: this.getTooltipTitle(step)\n    }\n  }\n\n  private getPitTimeInfo(step: TimelineStep): string {\n    let result: string[] = [];\n    result.push('Enter: ' + format(step.start, 'HH:mm:ss'));\n    switch (step.status) {\n      case 'ACTIVE':\n        result.push('Time: ' + getElapsedTime(step.start, new Date()));\n        break\n      case \"DONE\":\n        result.push('Time: ' + millisecondsToTimeString(step.durationMills));\n        result.push('Exit: ' + (step.end ? format(step.end, 'HH:mm:ss') : ''));\n        break;\n      case \"FUTURE\":\n        result.push('Time: ' + millisecondsToTimeString(step.durationMills));\n        result.push('Exit: ' + (step.end ? format(step.end, 'HH:mm:ss') : ''));\n        break;\n    }\n\n    return result.filter(Boolean).join('\\n');\n  }\n\n  private getPitFooter(step: TimelineStep): string {\n    let result = [];\n    if (step.pit) {\n      if (step.pit.entryDriverId !== step.pit.exitDriverId) {\n        result.push('🐗');\n      }\n      if (step.pit.refuel) {\n        result.push('⛽️');\n      }\n      if (step.pit.tyreChange) {\n        result.push('🛞️');\n      }\n      if (step.pit.interphoneChange) {\n        result.push('🔊')\n      }\n      if (step.pit.kartChange) {\n        result.push('🏎️')\n      }\n    }\n    return result.join(' | ');\n  }\n\n\n  // GENERAL\n  private getTooltipTitle(step: TimelineStep): string {\n    if (step.type === 'STINT') {\n      let id = step.stint ? '(' + step.stint.id + ')' : '';\n      if (step.status === 'ACTIVE') {\n        return 'Active stint ' + id;\n      } else if (step.status === 'DONE') {\n        return 'Stint ' + id;\n      } else {\n        return 'Future stint';\n      }\n    }\n\n    if (step.type === 'PIT') {\n      let id = step.pit ? '(' + step.pit.id + ')' : '';\n      if (step.status === 'ACTIVE') {\n        return 'Active pit ' + id;\n      } else if (step.status === 'DONE') {\n        return 'Pit ' + id;\n      } else {\n        return 'Future pit';\n      }\n    }\n\n    return '';\n  }\n\n  private getDriverInfo(step: TimelineStep): string {\n    if (step.type === 'STINT' && step.stint) {\n      return 'Driver: ' + this.getDriverRacingName(step.stint.driverId);\n    }\n\n    if (step.type === 'PIT' && step.pit) {\n      let driverIn = 'Driver in: ' + this.getDriverRacingName(step.pit.entryDriverId);\n      let driverOut = 'Driver out: ' + this.getDriverRacingName(step.pit.exitDriverId);\n      return driverIn + '\\n' + driverOut;\n    }\n    return '';\n  }\n\n  private getDriverRacingName(driverId: number): string {\n    const drivers = this.driverService.drivers();\n    const driver = drivers.find(d => d.id === driverId);\n    return driver ? driver.raceName : '';\n  }\n}\n","@if (!hide) {\n  <div class=\"mb-3 flex justify-center items-center\">\n    <ng-container *ngFor=\"let step of timelineSteps(); let i = index\">\n      @if (step.type === 'STINT') {\n        <div [ngClass]=\"getStintColor(step)\"\n             class=\"flex-1 flex px-1 py-3 justify-center items-center\"\n             tooltip [tooltipData]=getStintTooltipInfo(step)\n             [tooltipPosition]=getTooltipPosition(i)>\n          {{ getStintIcon(step) }}\n        </div>\n      } @else {\n        <div [ngClass]=\"getPitColor(step)\"\n             class=\"flex-0 flex px-1 py-3 justify-center items-center\"\n             tooltip [tooltipData]=getPitTooltipInfo(step) [tooltipPosition]=getTooltipPosition(i)>\n          {{ getPitIcon(step) }}\n        </div>\n      }\n    </ng-container>\n  </div>\n}\n","import { Component, computed, inject, Signal } from '@angular/core';\nimport { DatePipe } from \"@angular/common\";\nimport { getTimeUntilFutureDate } from \"../../../util/date.util\";\nimport { TyreService } from \"../../service/tyre.service\";\nimport { CardComponent } from '../../../shared/component/card/card.component';\nimport { ChipComponent } from '../../../shared/component/chip/chip.component';\n\n@Component({\n  selector: 'app-tyre-change',\n  imports: [DatePipe, CardComponent, ChipComponent],\n  templateUrl: './tyre-change.component.html',\n  styleUrl: './tyre-change.component.css'\n})\nexport class TyreChangeComponent {\n  private readonly tyreService = inject(TyreService);\n\n  openingTime: Signal<Date | undefined> = this.tyreService.openingTime;\n  closingTime: Signal<Date | undefined> = this.tyreService.closingTime;\n  remainingTyreChange: Signal<number> = this.tyreService.remainingTyreChange\n  tyreChangeWindowOpen: Signal<boolean> = this.tyreService.tyreChangeWindowOpen;\n\n  countdownOpeningTime = computed(() => getTimeUntilFutureDate(this.tyreService.openingTime()))\n  countdownClosingTime = computed(() => getTimeUntilFutureDate(this.tyreService.closingTime()))\n}\n","<app-card\n  title=\"🛞 🔄 Tyre change\"\n  [initiallyOpen]=\"false\">\n\n  <div slot=\"header-right-content\"\n       class=\"flex items-center gap-1\">\n\n    <app-chip\n      [text]=\"remainingTyreChange() > 0 ? 'Remaining: ' + remainingTyreChange() : 'Completed'\"\n      [backgroundColor]=\"remainingTyreChange() > 0 ? 'bg-yellow-500' : 'bg-green-500'\"\n    />\n\n    <app-chip\n      [text]=\"tyreChangeWindowOpen() ? 'Window open' : 'Window close'\"\n      [backgroundColor]=\"tyreChangeWindowOpen() ? 'bg-green-500' : 'bg-red-500'\"\n      [bounceCondition]=\"remainingTyreChange() > 0\"\n    />\n  </div>\n\n  <div slot=\"body-content\" class=\"flex flex-col gap-2\">\n    <div class=\"flex justify-between\">\n      <div>\n        <div class=\"text-neutral-500 dark:text-neutral-400\">Opening time</div>\n        <div class=\"text-neutral-900 dark:text-neutral-100 font-mono\">\n          @if (openingTime()) {\n            {{ openingTime() | date:'HH:mm:ss' }}\n          } @else {\n            --:--:--\n          }\n        </div>\n      </div>\n\n      <div>\n        <div class=\"text-neutral-500 dark:text-neutral-400 text-right\">Opening in</div>\n        <div class=\"text-neutral-900 dark:text-neutral-100 font-mono text-right\">\n          {{ countdownOpeningTime() }}\n        </div>\n      </div>\n    </div>\n\n    <hr>\n\n    <div class=\"flex justify-between\">\n      <div>\n        <div class=\"text-neutral-500 dark:text-neutral-400\">Closing time</div>\n        <div class=\"text-neutral-900 dark:text-neutral-100 font-mono\">\n          @if (closingTime()) {\n            {{ closingTime() | date:'HH:mm:ss' }}\n          } @else {\n            --:--:--\n          }\n        </div>\n      </div>\n\n      <div>\n        <div class=\"text-neutral-500 dark:text-neutral-400 text-right\">Closing in</div>\n        <div class=\"text-neutral-900 dark:text-neutral-100 font-mono text-right\">\n          {{ countdownClosingTime() }}\n        </div>\n      </div>\n    </div>\n  </div>\n\n</app-card>\n","import { Component, computed, inject } from '@angular/core';\nimport { CardComponent } from '../../../shared/component/card/card.component';\nimport { StintService } from '../../../stint/service/stint.service';\nimport {\n  millisecondsToMinuteSecondMillisecondsString,\n  millisecondsToSecondMillisecondsString\n} from '../../../util/date.util';\nimport { LapService } from '../../../lap/service/lap.service';\nimport { RacePositionService } from '../../../race/service/race-position.service';\nimport { ChipComponent } from '../../../shared/component/chip/chip.component';\nimport { GapService } from '../../../gap/service/gap.service';\n\n@Component({\n  selector: 'app-live-timing',\n  imports: [\n    CardComponent,\n    ChipComponent\n  ],\n  templateUrl: './live-timing.component.html',\n  styleUrl: './live-timing.component.css'\n})\nexport class LiveTimingComponent {\n\n  private readonly stintService = inject(StintService);\n  private readonly lapService = inject(LapService);\n  private readonly racePositionService = inject(RacePositionService);\n  private readonly gapService = inject(GapService);\n\n  readonly currentStintAvgString = computed(() => {\n    const stintPaceById = this.stintService.stintPaceById();\n    const activeStint = this.stintService.activeStint();\n\n    if (activeStint) {\n      return millisecondsToMinuteSecondMillisecondsString(stintPaceById.get(activeStint.id) ?? 0)\n    }\n\n    return '--:--.---';\n  });\n\n  readonly currentStintBestLapString = computed(() => {\n    const stintBestLapById = this.stintService.stintBestLapById();\n    const activeStint = this.stintService.activeStint();\n\n    if (activeStint) {\n      return millisecondsToMinuteSecondMillisecondsString(stintBestLapById.get(activeStint.id) ?? 0)\n    }\n    return '--:--.---';\n  });\n\n  readonly lastTeamLap = this.lapService.lastTeamLap;\n  readonly lastTeamLapString = computed(() => {\n      const value = this.lapService.lastTeamLap();\n      if (value) {\n        return millisecondsToMinuteSecondMillisecondsString(value.lapMilliseconds);\n      }\n      return '--:--.---';\n  });\n\n  readonly lastTeamLapDeltaMilliseconds = this.lapService.lastTeamLapDeltaMilliseconds;\n\n  readonly lastTeamLapDeltaMillisecondsString = computed(() => {\n    const value = this.lapService.lastTeamLapDeltaMilliseconds();\n    if (value) {\n      if (value < 0) {\n        return millisecondsToMinuteSecondMillisecondsString(Math.abs(value));\n      }\n      return millisecondsToSecondMillisecondsString(value);\n    }\n    return '--.---';\n  });\n\n  readonly teamRacePosition = this.racePositionService.teamRacePosition;\n\n  readonly gapAheadMilliseconds = this.gapService.gapAheadMilliseconds;\n  readonly gapAheadMillisecondsString = computed(() => {\n    const value = this.gapService.gapAheadMilliseconds();\n    if (value) {\n      return millisecondsToMinuteSecondMillisecondsString(value);\n    }\n    return '--:--.---';\n  });\n\n  readonly gapBehindMilliseconds = this.gapService.gapBehindMilliseconds;\n  readonly gapBehindMillisecondsString = computed(() => {\n    const value = this.gapService.gapBehindMilliseconds();\n    if (value) {\n      return millisecondsToMinuteSecondMillisecondsString(Math.abs(value));\n    }\n    return '--:--.---';\n  });\n\n}\n","<app-card\n  title=\"🐗💨 Live timing\"\n  [initiallyOpen]=\"true\">\n\n  <div slot=\"header-right-content\"\n       class=\"flex items-center gap-1\">\n\n    @if (teamRacePosition()) {\n      <app-chip\n        [text]=\"'P: ' + teamRacePosition()\"\n      />\n    }\n\n    @if (lastTeamLap()) {\n      <app-chip\n        [text]=\"'Last: ' + lastTeamLapString()\"\n      />\n    }\n\n    @if (lastTeamLapDeltaMilliseconds()) {\n      <app-chip\n        [text]=\"(lastTeamLapDeltaMilliseconds()! > 0 ? '+ ' : '- ') + lastTeamLapDeltaMillisecondsString()\"\n        [backgroundColor]=\"lastTeamLapDeltaMilliseconds()! > 0 ? 'bg-red-500' : 'bg-green-500'\"\n      />\n    }\n  </div>\n\n  <div slot=\"body-content\" class=\"flex flex-col gap-2\">\n    <div class=\"flex justify-between\">\n      <div>\n        <div class=\"text-neutral-500 dark:text-neutral-400\">Position</div>\n        <div class=\"text-neutral-900 dark:text-neutral-100 font-mono\">\n          @if (teamRacePosition() !== undefined) {\n            {{ teamRacePosition() }}\n          } @else {\n            --\n          }\n        </div>\n      </div>\n    </div>\n\n    <div class=\"flex justify-between\">\n      <div>\n        <div class=\"text-neutral-500 dark:text-neutral-400\">Gap ahead</div>\n        <div class=\"text-neutral-900 dark:text-neutral-100 font-mono\">\n          @if (gapAheadMilliseconds()) {\n            +\n          }\n          {{ gapAheadMillisecondsString() }}\n        </div>\n      </div>\n\n      <div>\n        <div class=\"text-neutral-500 dark:text-neutral-400 text-right\">Gap behind</div>\n        <div class=\"text-neutral-900 dark:text-neutral-100 font-mono text-right\">\n          @if (gapBehindMilliseconds()) {\n            -\n          }\n          {{ gapBehindMillisecondsString() }}\n        </div>\n      </div>\n    </div>\n\n    <hr>\n\n    <div class=\"flex justify-between\">\n      <div>\n        <div class=\"text-neutral-500 dark:text-neutral-400\">Last lap</div>\n        <div class=\"text-neutral-900 dark:text-neutral-100 font-mono\">{{ lastTeamLapString() }}</div>\n      </div>\n\n      <div>\n        <div class=\"text-neutral-500 dark:text-neutral-400 text-right\">Delta</div>\n        <div class=\"text-neutral-900 dark:text-neutral-100 font-mono text-right\">\n          @if (lastTeamLapDeltaMilliseconds() !== undefined && lastTeamLapDeltaMilliseconds() !== null) {\n            @if (lastTeamLapDeltaMilliseconds()! > 0) {\n              +\n            } @else if (lastTeamLapDeltaMilliseconds()! < 0) {\n              -\n            }\n          }\n          {{ lastTeamLapDeltaMillisecondsString() }}\n        </div>\n      </div>\n    </div>\n\n    <hr>\n\n    <div class=\"flex justify-between\">\n      <div>\n        <div class=\"text-neutral-500 dark:text-neutral-400\">Current stint best lap</div>\n        <div class=\"text-neutral-900 dark:text-neutral-100 font-mono\">{{ currentStintBestLapString() }}\n        </div>\n      </div>\n\n      <div>\n        <div class=\"text-neutral-500 dark:text-neutral-400 text-right\">Current stint AVG</div>\n        <div class=\"text-neutral-900 dark:text-neutral-100 font-mono text-right\">{{ currentStintAvgString() }}</div>\n      </div>\n    </div>\n\n  </div>\n\n</app-card>\n","import { Component, effect, inject } from '@angular/core';\nimport { CardComponent } from '../../../shared/component/card/card.component';\nimport { FormsModule } from '@angular/forms';\nimport { TyreConfigService } from '../../service/tyre-config.service';\nimport { NotificationService } from '../../../shared/service/notification.service';\n\n@Component({\n  selector: 'app-tyre-pressure',\n  imports: [\n    CardComponent,\n    FormsModule\n  ],\n  templateUrl: './tyre-pressure.component.html',\n  styleUrl: './tyre-pressure.component.css'\n})\nexport class TyrePressureComponent {\n\n  private readonly tyreConfigService = inject(TyreConfigService);\n  private readonly notificationService = inject(NotificationService);\n\n  frontLeftTyrePressurePsi = 0;\n  frontRightTyrePressurePsi = 0;\n  rearLeftTyrePressurePsi = 0;\n  rearRightTyrePressurePsi = 0;\n\n  minTyrePressurePsi = 0;\n  maxTyrePressurePsi = 0;\n\n  constructor() {\n    effect(() => {\n      const config = this.tyreConfigService.tyreConfig();\n      if (config) {\n        this.frontLeftTyrePressurePsi = config.frontLeftTyrePressurePsi;\n        this.frontRightTyrePressurePsi = config.frontRightTyrePressurePsi;\n        this.rearLeftTyrePressurePsi = config.rearLeftTyrePressurePsi;\n        this.rearRightTyrePressurePsi = config.rearRightTyrePressurePsi;\n\n        this.minTyrePressurePsi = config.minTyrePressurePsi;\n        this.maxTyrePressurePsi = config.maxTyrePressurePsi;\n      }\n    });\n  }\n\n  // FRONT LEFT TYRE PRESSURE PSI\n  onSubmitFrontLeftTyrePressurePsi() {\n    if (this.frontLeftTyrePressurePsi >= this.minTyrePressurePsi && this.frontLeftTyrePressurePsi <= this.maxTyrePressurePsi) {\n      this.tyreConfigService.updateFrontLeftTyrePressurePsi(this.frontLeftTyrePressurePsi);\n    } else {\n      this.notificationService.warning('Invalid tyre pressure. Please enter a value between ' + this.minTyrePressurePsi + ' and ' + this.maxTyrePressurePsi + ' psi.')\n      const config = this.tyreConfigService.tyreConfig();\n      if (config) {\n        this.frontLeftTyrePressurePsi = config.frontLeftTyrePressurePsi;\n      }\n    }\n  }\n\n  increaseFrontLeftTyrePressurePsi() {\n    this.tyreConfigService.updateFrontLeftTyrePressurePsi(this.frontLeftTyrePressurePsi + 1);\n  }\n\n  decreaseFrontLeftTyrePressurePsi() {\n    this.tyreConfigService.updateFrontLeftTyrePressurePsi(this.frontLeftTyrePressurePsi - 1);\n  }\n\n  // FRONT RIGHT TYRE PRESSURE PSI\n  onSubmitFrontRightTyrePressurePsi() {\n    if (this.frontRightTyrePressurePsi >= this.minTyrePressurePsi && this.frontRightTyrePressurePsi <= this.maxTyrePressurePsi) {\n      this.tyreConfigService.updateFrontRightTyrePressurePsi(this.frontRightTyrePressurePsi);\n    } else {\n      this.notificationService.warning('Invalid tyre pressure. Please enter a value between ' + this.minTyrePressurePsi + ' and ' + this.maxTyrePressurePsi + ' psi.')\n      const config = this.tyreConfigService.tyreConfig();\n      if (config) {\n        this.frontRightTyrePressurePsi = config.frontRightTyrePressurePsi;\n      }\n    }\n  }\n\n  increaseFrontRightTyrePressurePsi() {\n    this.tyreConfigService.updateFrontRightTyrePressurePsi(this.frontRightTyrePressurePsi + 1);\n  }\n\n  decreaseFrontRightTyrePressurePsi() {\n    this.tyreConfigService.updateFrontRightTyrePressurePsi(this.frontRightTyrePressurePsi - 1);\n  }\n\n  // REAR LEFT TYRE PRESSURE PSI\n  onSubmitRearLeftTyrePressurePsi() {\n    if (this.rearLeftTyrePressurePsi >= this.minTyrePressurePsi && this.rearLeftTyrePressurePsi <= this.maxTyrePressurePsi) {\n      this.tyreConfigService.updateRearLeftTyrePressurePsi(this.rearLeftTyrePressurePsi);\n    } else {\n      this.notificationService.warning('Invalid tyre pressure. Please enter a value between ' + this.minTyrePressurePsi + ' and ' + this.maxTyrePressurePsi + ' psi.')\n      const config = this.tyreConfigService.tyreConfig();\n      if (config) {\n        this.rearLeftTyrePressurePsi = config.rearLeftTyrePressurePsi;\n      }\n    }\n  }\n\n  increaseRearLeftTyrePressurePsi() {\n    this.tyreConfigService.updateRearLeftTyrePressurePsi(this.rearLeftTyrePressurePsi + 1);\n  }\n\n  decreaseRearLeftTyrePressurePsi() {\n    this.tyreConfigService.updateRearLeftTyrePressurePsi(this.rearLeftTyrePressurePsi - 1);\n  }\n\n  // REAR RIGHT TYRE PRESSURE PSI\n  onSubmitRearRightTyrePressurePsi() {\n    if (this.rearRightTyrePressurePsi >= this.minTyrePressurePsi && this.rearRightTyrePressurePsi <= this.maxTyrePressurePsi) {\n      this.tyreConfigService.updateRearRightTyrePressurePsi(this.rearRightTyrePressurePsi);\n    } else {\n      this.notificationService.warning('Invalid tyre pressure. Please enter a value between ' + this.minTyrePressurePsi + ' and ' + this.maxTyrePressurePsi + ' psi.')\n      const config = this.tyreConfigService.tyreConfig();\n      if (config) {\n        this.rearRightTyrePressurePsi = config.rearRightTyrePressurePsi;\n      }\n    }\n  }\n\n  increaseRearRightTyrePressurePsi() {\n    this.tyreConfigService.updateRearRightTyrePressurePsi(this.rearRightTyrePressurePsi + 1);\n  }\n\n  decreaseRearRightTyrePressurePsi() {\n    this.tyreConfigService.updateRearRightTyrePressurePsi(this.rearRightTyrePressurePsi - 1);\n  }\n}\n","<app-card\n  title=\"🛞💨 Tyre pressure\"\n  [initiallyOpen]=\"true\">\n\n  <div slot=\"body-content\" class=\"flex flex-col gap-2\">\n    <div class=\"flex justify-between\">\n      <div>\n        <div class=\"text-neutral-500 dark:text-neutral-400 text-left\">Front left (PSI)</div>\n        <div class=\"flex justify-start flex-row gap-1\">\n          <button (click)=\"increaseFrontLeftTyrePressurePsi()\"\n                  [disabled]=\"frontLeftTyrePressurePsi >= maxTyrePressurePsi\"\n                  class=\"bg-neutral-200 hover:bg-neutral-400 active:bg-neutral-500 disabled:bg-neutral-100  text-neutral-900 px-4 rounded-sm hover:cursor-pointer\">\n            +\n          </button>\n          <form (ngSubmit)=\"onSubmitFrontLeftTyrePressurePsi()\" class=\"text-right\">\n            <input\n              type=\"number\"\n              id=\"frontLeftTyrePressurePsi\"\n              [(ngModel)]=\"frontLeftTyrePressurePsi\"\n              name=\"frontLeftTyrePressurePsi\"\n              class=\"border rounded-lg px-2 py-1 w-20 text-right text-neutral-900 dark:text-neutral-100\"\n              required\n              [min]=\"minTyrePressurePsi\"\n              [max]=\"maxTyrePressurePsi\"\n            />\n          </form>\n          <button (click)=\"decreaseFrontLeftTyrePressurePsi()\"\n                  [disabled]=\"frontLeftTyrePressurePsi <= minTyrePressurePsi\"\n                  class=\"bg-neutral-200 hover:bg-neutral-400 active:bg-neutral-500 disabled:bg-neutral-100 text-neutral-900 px-4 rounded-sm hover:cursor-pointer\">\n            -\n          </button>\n        </div>\n      </div>\n\n      <div>\n        <div class=\"text-neutral-500 dark:text-neutral-400 text-right\">Front right (PSI)</div>\n        <div class=\"flex justify-end flex-row gap-1\">\n          <button (click)=\"increaseFrontRightTyrePressurePsi()\"\n                  [disabled]=\"frontRightTyrePressurePsi >= maxTyrePressurePsi\"\n                  class=\"bg-neutral-200 hover:bg-neutral-400 active:bg-neutral-500 disabled:bg-neutral-100 text-neutral-900 px-4 rounded-sm hover:cursor-pointer\">\n            +\n          </button>\n          <form (ngSubmit)=\"onSubmitFrontRightTyrePressurePsi()\" class=\"text-right\">\n            <input\n              type=\"number\"\n              id=\"frontRightTyrePressurePsi\"\n              [(ngModel)]=\"frontRightTyrePressurePsi\"\n              name=\"frontRightTyrePressurePsi\"\n              class=\"border rounded-lg px-2 py-1 w-20 text-right text-neutral-900 dark:text-neutral-100\"\n              required\n              [min]=\"minTyrePressurePsi\"\n              [max]=\"maxTyrePressurePsi\"\n            />\n          </form>\n          <button (click)=\"decreaseFrontRightTyrePressurePsi()\"\n                  [disabled]=\"frontRightTyrePressurePsi <= minTyrePressurePsi\"\n                  class=\"bg-neutral-200 hover:bg-neutral-400 active:bg-neutral-500 disabled:bg-neutral-100 text-neutral-900 px-4 rounded-sm hover:cursor-pointer\">\n            -\n          </button>\n        </div>\n      </div>\n    </div>\n\n    <hr>\n\n    <div class=\"flex justify-between\">\n      <div>\n        <div class=\"text-neutral-500 dark:text-neutral-400 text-left\">Rear left (PSI)</div>\n        <div class=\"flex justify-start flex-row gap-1\">\n          <button (click)=\"increaseRearLeftTyrePressurePsi()\"\n                  [disabled]=\"rearLeftTyrePressurePsi >= maxTyrePressurePsi\"\n                  class=\"bg-neutral-200 hover:bg-neutral-400 active:bg-neutral-500 disabled:bg-neutral-100  text-neutral-900 px-4 rounded-sm hover:cursor-pointer\">\n            +\n          </button>\n          <form (ngSubmit)=\"onSubmitRearLeftTyrePressurePsi()\" class=\"text-right\">\n            <input\n              type=\"number\"\n              id=\"rearLeftTyrePressurePsi\"\n              [(ngModel)]=\"rearLeftTyrePressurePsi\"\n              name=\"rearLeftTyrePressurePsi\"\n              class=\"border rounded-lg px-2 py-1 w-20 text-right text-neutral-900 dark:text-neutral-100\"\n              required\n              [min]=\"minTyrePressurePsi\"\n              [max]=\"maxTyrePressurePsi\"\n            />\n          </form>\n          <button (click)=\"decreaseRearLeftTyrePressurePsi()\"\n                  [disabled]=\"rearLeftTyrePressurePsi <= minTyrePressurePsi\"\n                  class=\"bg-neutral-200 hover:bg-neutral-400 active:bg-neutral-500 disabled:bg-neutral-100 text-neutral-900 px-4 rounded-sm hover:cursor-pointer\">\n            -\n          </button>\n        </div>\n      </div>\n\n      <div>\n        <div class=\"text-neutral-500 dark:text-neutral-400 text-right\">Rear right (PSI)</div>\n        <div class=\"flex justify-end flex-row gap-1\">\n          <button (click)=\"increaseRearRightTyrePressurePsi()\"\n                  [disabled]=\"rearRightTyrePressurePsi >= maxTyrePressurePsi\"\n                  class=\"bg-neutral-200 hover:bg-neutral-400 active:bg-neutral-500 disabled:bg-neutral-100 text-neutral-900 px-4 rounded-sm hover:cursor-pointer\">\n            +\n          </button>\n          <form (ngSubmit)=\"onSubmitRearRightTyrePressurePsi()\" class=\"text-right\">\n            <input\n              type=\"number\"\n              id=\"rearRightTyrePressurePsi\"\n              [(ngModel)]=\"rearRightTyrePressurePsi\"\n              name=\"rearRightTyrePressurePsi\"\n              class=\"border rounded-lg px-2 py-1 w-20 text-right text-neutral-900 dark:text-neutral-100\"\n              required\n              [min]=\"minTyrePressurePsi\"\n              [max]=\"maxTyrePressurePsi\"\n            />\n          </form>\n          <button (click)=\"decreaseRearRightTyrePressurePsi()\"\n                  [disabled]=\"rearRightTyrePressurePsi <= minTyrePressurePsi\"\n                  class=\"bg-neutral-200 hover:bg-neutral-400 active:bg-neutral-500 disabled:bg-neutral-100 text-neutral-900 px-4 rounded-sm hover:cursor-pointer\">\n            -\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n\n</app-card>\n","import { Component, computed, inject, Signal } from '@angular/core';\nimport { CardComponent } from '../../../shared/component/card/card.component';\nimport { DriverService } from '../../service/driver.service';\nimport { Driver } from '../../model/driver';\nimport { NgClass, NgForOf } from '@angular/common';\nimport { StintService } from '../../../stint/service/stint.service';\nimport { millisecondsToMinuteSecondMillisecondsString } from '../../../util/date.util';\nimport { LapService } from '../../../lap/service/lap.service';\nimport { Lap } from '../../../lap/model/lap';\nimport { ChipComponent } from '../../../shared/component/chip/chip.component';\n\n@Component({\n  selector: 'app-driver-performance',\n  imports: [\n    CardComponent,\n    NgForOf,\n    NgClass,\n    ChipComponent\n  ],\n  templateUrl: './driver-performance.component.html',\n  styleUrl: './driver-performance.component.css'\n})\nexport class DriverPerformanceComponent {\n\n  private readonly driverService = inject(DriverService);\n  private readonly stintService = inject(StintService);\n  private readonly lapService = inject(LapService);\n\n  readonly drivers: Signal<Driver[]> = this.driverService.drivers;\n  readonly teamBestLap: Signal<Lap | undefined> = this.lapService.teamBestLap;\n\n  readonly activeStintDriverId = computed(() => {\n    const activeStint = this.stintService.activeStint();\n    if (activeStint) {\n      return activeStint.driverId;\n    }\n    return undefined;\n  });\n\n  readonly driverBestLapStringById: Signal<Map<number, string>> = computed(() => {\n    const result = new Map<number, string>;\n    const value = this.driverService.driverBestLapById()\n    value.forEach((lap, id) => {\n      result.set(id, millisecondsToMinuteSecondMillisecondsString(lap));\n    });\n    return result;\n  });\n\n  readonly driverPaceStringById: Signal<Map<number, string>> = computed(() => {\n    const result = new Map<number, string>;\n    const value = this.driverService.driverPaceById()\n    value.forEach((pace, id) => {\n      result.set(id, millisecondsToMinuteSecondMillisecondsString(pace));\n    });\n    return result;\n  })\n\n  readonly teamBestLapString: Signal<string | undefined> = computed(() => {\n    const value = this.lapService.teamBestLap();\n    if (value) {\n      return millisecondsToMinuteSecondMillisecondsString(value.lapMilliseconds);\n    }\n    return undefined;\n  });\n\n  readonly bestPaceString: Signal<string | undefined> = computed(() => {\n    const value = this.driverService.driverBestPaceMillisecond();\n    if (value) {\n      return millisecondsToMinuteSecondMillisecondsString(value);\n    }\n    return undefined;\n  });\n\n  readonly lastCompletedStintPaceStringByDriverId: Signal<Map<number, string>> = computed(() => {\n    const result = new Map<number, string>();\n    const driverLastStintIdByDriverId = this.driverService.driverLastStintIdByDriverId();\n    const stintPaceById = this.stintService.stintPaceById();\n    driverLastStintIdByDriverId.forEach((stintId, driverId) => {\n      const pace = stintPaceById.get(stintId);\n      if (pace) {\n        result.set(driverId, millisecondsToMinuteSecondMillisecondsString(pace));\n      }\n    })\n    return result;\n  });\n\n  getBestLap(driverId: number): string {\n    return this.driverBestLapStringById().get(driverId) ?? '--:--.---';\n  }\n\n  getPace(driverId: number): string {\n    return this.driverPaceStringById().get(driverId) ?? '--:--.---';\n  }\n\n  isBestLap(driverId: number): boolean {\n    const value = this.lapService.teamBestLap();\n    if (value) {\n      return value.driverId === driverId;\n    }\n    return false;\n  }\n\n  isBestPace(driverId: number): boolean {\n    const value = this.driverService.driverIdBestPace();\n    if (value) {\n      return value === driverId;\n    }\n    return false;\n  }\n\n  getLastStintPace(driverId: number): string {\n    return this.lastCompletedStintPaceStringByDriverId().get(driverId) ?? '--:--.---';\n  }\n}\n","<app-card\n  title=\"🐗💪🏼 Driver performance\"\n  [initiallyOpen]=\"false\">\n\n  <div slot=\"header-right-content\"\n    class=\"flex items-center gap-1\">\n    @if (teamBestLapString()) {\n      <app-chip\n        [text]=\"'Lap: ' + teamBestLapString()\"\n        [backgroundColor]=\"'bg-fuchsia-500'\"\n      />\n    }\n    @if (bestPaceString()) {\n      <app-chip\n        [text]=\"'AVG: ' + bestPaceString()\"\n        [backgroundColor]=\"'bg-fuchsia-500'\"\n      />\n    }\n  </div>\n\n  <div slot=\"body-content\"\n       class=\"flex flex-col overflow-clip\">\n    <table class=\"w-full bg-neutral-50 dark:bg-neutral-800 table-fixed\">\n      <thead class=\"sticky top-0\">\n      <tr>\n        <th class=\"py-2 px-3 border-b border-neutral-200 dark:border-neutral-400 text-left text-xs md:text-base font-medium text-neutral-700 dark:text-neutral-400\">\n          ID\n        </th>\n        <th class=\"py-2 border-b border-neutral-200 dark:border-neutral-400 text-left text-xs md:text-base font-medium text-neutral-700 dark:text-neutral-400\">\n          Name\n        </th>\n        <th class=\"py-2 border-b border-neutral-200 dark:border-neutral-400 text-center text-xs md:text-base font-medium text-neutral-700 dark:text-neutral-400\"\n            colspan=\"2\">\n          Best\n        </th>\n        <th class=\"py-2 border-b border-neutral-200 dark:border-neutral-400 text-center text-xs md:text-base font-medium text-neutral-700 dark:text-neutral-400\"\n            colspan=\"2\">\n          AVG\n        </th>\n        <th class=\"py-2 border-b border-neutral-200 dark:border-neutral-400 text-center text-xs md:text-base font-medium text-neutral-700 dark:text-neutral-400\"\n            colspan=\"2\">\n          Last Sting AVG\n        </th>\n      </tr>\n      </thead>\n    </table>\n    <div class=\"flex-1 overflow-y-auto\">\n      <table class=\"w-full table-fixed\">\n        <tbody>\n        <tr *ngFor=\"let driver of drivers()\"\n            [ngClass]=\"{'bg-green-100 dark:bg-green-900 font-semibold': driver.id === activeStintDriverId(), 'hover:bg-neutral-100 dark:hover:bg-neutral-700': driver.id !== activeStintDriverId()}\">\n          <td class=\"py-2 px-3 border-b border-neutral-200 dark:border-neutral-400 text-left text-xs md:text-base text-neutral-900 dark:text-neutral-100\">{{ driver.id }}</td>\n          <td class=\"py-2 border-b border-neutral-200 dark:border-neutral-400 text-left text-xs md:text-base text-neutral-900 dark:text-neutral-100\">{{ driver.raceName }}</td>\n          <td class=\"py-2 border-b border-neutral-200 dark:border-neutral-400 text-center text-xs md:text-base text-neutral-900 dark:text-neutral-100 font-mono\"\n              colspan=\"2\">\n            <div\n              [ngClass]=\"{'bg-fuchsia-500 text-white': isBestLap(driver.id)}\"\n              class=\"p-0.5 text-center rounded-sm\">\n              {{ getBestLap(driver.id) }}\n            </div>\n          </td>\n          <td class=\"py-2 border-b border-neutral-200 dark:border-neutral-400 text-center text-xs md:text-base text-neutral-900 dark:text-neutral-100 font-mono\"\n              colspan=\"2\">\n            <div\n              [ngClass]=\"{'bg-fuchsia-500 text-white': isBestPace(driver.id)}\"\n              class=\"p-0.5 text-center rounded-sm\"> {{ getPace(driver.id) }}\n            </div>\n          </td>\n          <td class=\"py-2 border-b border-neutral-200 dark:border-neutral-400 text-center text-xs md:text-base text-neutral-900 dark:text-neutral-100 font-mono\"\n              colspan=\"2\">\n            {{ getLastStintPace(driver.id) }}\n          </td>\n        </tr>\n        </tbody>\n      </table>\n    </div>\n  </div>\n\n</app-card>\n","import { Component, computed, inject } from '@angular/core';\nimport { CardComponent } from '../../../shared/component/card/card.component';\nimport { LapMissingService } from '../../service/lap-missing.service';\nimport { NgForOf } from '@angular/common';\nimport { TeamService } from '../../../team/service/team.service';\nimport { ChipComponent } from '../../../shared/component/chip/chip.component';\n\n@Component({\n  selector: 'app-lap-missing',\n  imports: [\n    CardComponent,\n    NgForOf,\n    ChipComponent\n  ],\n  templateUrl: './lap-missing.component.html',\n  styleUrl: './lap-missing.component.css'\n})\nexport class LapMissingComponent {\n\n  private readonly lapMissingService = inject(LapMissingService);\n  private readonly teamService = inject(TeamService);\n\n  lapMissingCount = this.lapMissingService.lapMissingCount;\n\n  lapMissingRaceNumber = computed(() => {\n    const value = this.lapMissingService.lapMissingByRaceNumber()\n    return Array.from(value.keys());\n  })\n\n  getTeamName(raceNumber: number): string {\n    const teamNameByRaceNumber = this.teamService.teamNameByRaceNumber();\n    if (teamNameByRaceNumber.has(raceNumber)) {\n      return teamNameByRaceNumber.get(raceNumber)!;\n    }\n    return '';\n  }\n\n  getLapMissingString(raceNumber: number): string {\n    const lapMissingByRaceNumber = this.lapMissingService.lapMissingByRaceNumber();\n    const lapMissing = lapMissingByRaceNumber.get(raceNumber);\n    if (lapMissing) {\n      return lapMissing.join(', ');\n    }\n    return '';\n  }\n}\n","<app-card\n  title=\"⏱️❌ Lap missing\"\n  [initiallyOpen]=\"false\">\n\n  <div slot=\"header-right-content\" class=\"flex items-center gap-1\">\n\n    <app-chip\n      [text]=\"lapMissingCount() > 0 ? 'Lap Missing: ' + lapMissingCount() : 'No lap missing!'\"\n      [backgroundColor]=\"lapMissingCount() > 0 ? 'bg-yellow-500' : 'bg-green-500'\"\n      [bounceCondition]=\"lapMissingCount() > 0\"\n    />\n  </div>\n\n  <div slot=\"body-content\" class=\"flex flex-col overflow-clip\">\n    <table class=\"w-full bg-neutral-50 dark:bg-neutral-800 table-fixed\">\n      <thead class=\"sticky top-0\">\n      <tr>\n        <th class=\"py-2 border-b border-neutral-200 dark:border-neutral-400 text-left text-xs md:text-base font-medium text-neutral-700 dark:text-neutral-400\">\n          Race number\n        </th>\n        <th class=\"py-2 border-b border-neutral-200 dark:border-neutral-400 text-left text-xs md:text-base font-medium text-neutral-700 dark:text-neutral-400\" colspan=\"2\">\n          Name\n        </th>\n        <th class=\"py-2 border-b border-neutral-200 dark:border-neutral-400 text-center text-xs md:text-base font-medium text-neutral-700 dark:text-neutral-400\" colspan=\"2\">\n          Lap missing\n        </th>\n      </tr>\n      </thead>\n    </table>\n    <div class=\"flex-1 overflow-y-auto\">\n      <table class=\"w-full table-fixed\">\n        <tbody>\n        <tr *ngFor=\"let raceNumber of lapMissingRaceNumber()\" class=\"hover:bg-neutral-100 dark:hover:bg-neutral-700\">\n          <td class=\"py-2 px-3 border-b border-neutral-200 dark:border-neutral-400 text-left text-xs md:text-base text-neutral-900 dark:text-neutral-100\">{{ raceNumber }}</td>\n          <td class=\"py-2 px-3 border-b border-neutral-200 dark:border-neutral-400 text-left text-xs md:text-base text-neutral-900 dark:text-neutral-100\" colspan=\"2\">{{ getTeamName(raceNumber) }}</td>\n          <td class=\"py-2 px-3 border-b border-neutral-200 dark:border-neutral-400 text-right text-xs md:text-base text-neutral-900 dark:text-neutral-100\" colspan=\"2\">{{ getLapMissingString(raceNumber)}}</td>\n        </tr>\n        </tbody>\n      </table>\n    </div>\n  </div>\n\n</app-card>\n","import { Component, inject } from '@angular/core';\nimport { CardComponent } from \"../../../shared/component/card/card.component\";\nimport {\n  SteeringWheelMessageUpdateService\n} from '../../service/steering-wheel-message-update.service';\nimport { getButtonBackgroundColor, SteeringWheelMessage } from '../../model/steering-wheel-message';\n\n@Component({\n  selector: 'app-steering-wheel-message-button',\n  imports: [\n    CardComponent\n  ],\n  templateUrl: './steering-wheel-message-button.component.html',\n  styleUrl: './steering-wheel-message-button.component.css'\n})\nexport class SteeringWheelMessageButtonComponent {\n\n  private readonly steeringWheelMessageUpdateService = inject(SteeringWheelMessageUpdateService);\n\n  private boxMessage: SteeringWheelMessage = {\n    type: \"box\"\n  }\n\n  private safetyCarMessage: SteeringWheelMessage = {\n    type: \"safety-car\"\n  }\n\n  private fastDriverBehindMessage: SteeringWheelMessage = {\n    type: \"fast-driver-behind\"\n  }\n\n  sendBoxMessage() {\n   this.steeringWheelMessageUpdateService.updateMessageType({\n     type: \"box\"\n   });\n  }\n\n  sendSafetyCarMessage() {\n    this.steeringWheelMessageUpdateService.updateMessageType({\n      type: \"safety-car\"\n    });\n  }\n\n  sendFastDriverBehindMessage() {\n    this.steeringWheelMessageUpdateService.updateMessageType({\n      type: \"fast-driver-behind\"\n    });\n  }\n\n  getBoxButtonBackgroundColor(): string {\n    return getButtonBackgroundColor(this.boxMessage);\n  }\n\n  getSafetyCarButtonBackgroundColor(): string {\n    return getButtonBackgroundColor(this.safetyCarMessage);\n  }\n\n  getFastDriverBehindButtonBackgroundColor(): string {\n    return getButtonBackgroundColor(this.fastDriverBehindMessage);\n  }\n}\n","<app-card\n  title=\"🥏💬 Steering wheel message\"\n  [initiallyOpen]=\"true\">\n\n  <div slot=\"body-content\" class=\"flex flex-col gap-2\">\n    <div class=\"flex justify-between\">\n      <button\n        (click)=\"sendBoxMessage()\"\n        [class]= \"getBoxButtonBackgroundColor()\"\n        class=\"text-white font-bold py-2 px-4 rounded-sm hover:cursor-pointer\">\n        BOX\n      </button>\n      <button\n        (click)=\"sendSafetyCarMessage()\"\n        [class]= \"getSafetyCarButtonBackgroundColor()\"\n        class=\"text-white font-bold py-2 px-4 rounded-sm hover:cursor-pointer\">\n        SAFETY CAR\n      </button>\n    </div>\n\n    <div class=\"flex justify-between\">\n      <button\n        (click)=\"sendFastDriverBehindMessage()\"\n        [class]= \"getFastDriverBehindButtonBackgroundColor()\"\n        class=\"text-white font-bold py-2 px-4 rounded-sm hover:cursor-pointer\">\n        FAST DRIVER BEHIND\n      </button>\n    </div>\n  </div>\n\n</app-card>\n","import { Component, effect, inject } from '@angular/core';\nimport { ActiveStintComponent } from \"../../../stint/component/active-stint/active-stint.component\";\nimport { DeltaStintComponent } from \"../../../stint/component/delta-stint/delta-stint.component\";\nimport {\n  DriverChangeComponent\n} from \"../../../driver/component/driver-change/driver-change.component\";\nimport { DriverComponent } from \"../../../driver/component/driver/driver.component\";\nimport { FuelComponent } from \"../../../fuel/component/fuel/fuel.component\";\nimport { InterphoneComponent } from \"../../../interphone/component/interphone/interphone.component\";\nimport { KartChangeComponent } from \"../../../kart/component/kart-change/kart-change.component\";\nimport { KartComponent } from \"../../../kart/component/kart/kart.component\";\nimport { PitComponent } from \"../../../pit/component/pit/pit.component\";\nimport { PitLaneComponent } from \"../../../pit-lane/component/pit-lane/pit-lane.component\";\nimport { RaceButtonComponent } from \"../../../race/component/race-button/race-button.component\";\nimport { RaceComponent } from \"../../../race/component/race/race.component\";\nimport { StintComponent } from \"../../../stint/component/stint/stint.component\";\nimport {\n  StintOptimizerComponent\n} from \"../../../stint/component/stint-optimizer/stint-optimizer.component\";\nimport { TimelineComponent } from \"../../../timeline/component/timeline/timeline.component\";\nimport { TyreChangeComponent } from \"../../../tyre/component/tyre-change/tyre-change.component\";\nimport { BoardConfigService } from \"../../service/board-config.service\";\nimport { Title } from \"@angular/platform-browser\";\nimport { NavigatorComponent } from \"../../../shared/component/navigator/navigator.component\";\nimport {\n  LiveTimingComponent\n} from \"../../../live-timing/component/live-timing/live-timing.component\";\nimport {\n  TyrePressureComponent\n} from \"../../../tyre/component/tyre-pressure/tyre-pressure.component\";\nimport {\n  DriverPerformanceComponent\n} from \"../../../driver/component/driver-performance/driver-performance.component\";\nimport {\n  LapMissingComponent\n} from '../../../lap-missing/component/lap-missing/lap-missing.component';\nimport {\n  SteeringWheelMessageButtonComponent\n} from '../../../steering-wheel/component/steering-wheel-message-button/steering-wheel-message-button.component';\n\n@Component({\n  selector: 'app-board',\n  imports: [\n    ActiveStintComponent,\n    DeltaStintComponent,\n    DriverChangeComponent,\n    DriverComponent,\n    FuelComponent,\n    InterphoneComponent,\n    KartChangeComponent,\n    KartComponent,\n    PitComponent,\n    PitLaneComponent,\n    RaceButtonComponent,\n    RaceComponent,\n    StintComponent,\n    StintOptimizerComponent,\n    TimelineComponent,\n    TyreChangeComponent,\n    NavigatorComponent,\n    LiveTimingComponent,\n    TyrePressureComponent,\n    DriverPerformanceComponent,\n    LapMissingComponent,\n    SteeringWheelMessageButtonComponent\n  ],\n  templateUrl: './board.component.html',\n  styleUrl: './board.component.css'\n})\nexport class BoardComponent {\n  private readonly titleService = inject(Title);\n\n  private readonly boardConfigService = inject(BoardConfigService);\n\n  fuelVisible = true;\n  pitLaneVisible = true;\n  tyreChangeVisible = true;\n  interphoneVisible = true;\n  driverChangeVisible = true;\n  pitVisible = true\n  timelineVisible = true;\n  deltaStintVisible = true;\n  driverVisible = true;\n  stintVisible = true;\n  activeStintVisible = true;\n  stintOptimizerVisible = true;\n  kartChangeVisible = true;\n  kartVisible = true;\n  lapMissingVisible = true;\n  driverPerformanceVisible = true;\n  liveTimingVisible = true;\n  steeringWheelMessageButtonVisible = true;\n  tyrePressureVisible = true;\n\n  constructor() {\n    this.titleService.setTitle('WBR');\n\n    effect(() => {\n      const config = this.boardConfigService.boardConfig()\n      if (config) {\n        this.fuelVisible = config.fuelVisible;\n        this.pitLaneVisible = config.pitLaneVisible;\n        this.tyreChangeVisible = config.tyreChangeVisible;\n        this.interphoneVisible = config.interphoneVisible;\n        this.driverChangeVisible = config.driverChangeVisible;\n        this.pitVisible = config.pitVisible;\n        this.timelineVisible = config.timelineVisible;\n        this.deltaStintVisible = config.deltaStintVisible;\n        this.driverVisible = config.driverVisible;\n        this.stintVisible = config.stintVisible;\n        this.activeStintVisible = config.activeStintVisible;\n        this.stintOptimizerVisible = config.stintOptimizerVisible;\n        this.kartChangeVisible = config.kartChangeVisible;\n        this.kartVisible = config.kartVisible;\n        this.lapMissingVisible = config.lapMissingVisible;\n        this.driverPerformanceVisible = config.driverPerformanceVisible;\n        this.liveTimingVisible = config.liveTimingVisible;\n        this.steeringWheelMessageButtonVisible = config.steeringWheelMessageButtonVisible;\n        this.tyrePressureVisible = config.tyrePressureVisible;\n      }\n    });\n  }\n}\n","<div class=\"p-4 flex flex-row justify-between\">\n  <div class=\"text-xl md:text-3xl dark:text-neutral-100 text-neutral-900 font-semibold\">🏎️ WBR 🐗</div>\n  <app-navigator></app-navigator>\n</div>\n\n<div class=\"mb-2\">\n  <app-race></app-race>\n</div>\n\n<div class=\"mb-2\">\n  <app-race-button></app-race-button>\n</div>\n\n@if (timelineVisible) {\n  <app-timeline></app-timeline>\n}\n\n<div class=\"mx-2 grid grid-cols-1 lg:grid-cols-2 xl:grid-cols-3 gap-2\">\n  <div class=\"flex flex-col md:h-fit gap-2\">\n    @if (pitLaneVisible) {\n      <app-pit-lane></app-pit-lane>\n    }\n\n    @if (tyrePressureVisible) {\n      <app-tyre-pressure></app-tyre-pressure>\n    }\n\n    @if (fuelVisible) {\n      <app-fuel></app-fuel>\n    }\n\n    @if (kartVisible) {\n      <app-kart></app-kart>\n    }\n\n    @if (interphoneVisible) {\n      <app-interphone></app-interphone>\n    }\n  </div>\n\n  <div class=\"flex flex-col md:h-fit gap-2\">\n\n    @if (steeringWheelMessageButtonVisible) {\n      <app-steering-wheel-message-button></app-steering-wheel-message-button>\n    }\n\n    @if (liveTimingVisible) {\n      <app-live-timing></app-live-timing>\n    }\n\n    @if (activeStintVisible) {\n      <app-active-stint></app-active-stint>\n    }\n\n    @if (stintOptimizerVisible) {\n      <app-stint-optimizer></app-stint-optimizer>\n    }\n\n    @if (deltaStintVisible) {\n      <app-delta-stint></app-delta-stint>\n    }\n\n    @if (lapMissingVisible) {\n      <app-lap-missing></app-lap-missing>\n    }\n  </div>\n\n  <div class=\"flex flex-col md:h-fit gap-2\">\n\n    @if (driverChangeVisible) {\n      <app-driver-change></app-driver-change>\n    }\n\n    @if (kartChangeVisible) {\n      <app-kart-change></app-kart-change>\n    }\n\n    @if (tyreChangeVisible) {\n      <app-tyre-change></app-tyre-change>\n    }\n\n    @if (driverVisible) {\n      <app-driver></app-driver>\n    }\n\n    @if (driverPerformanceVisible) {\n      <app-driver-performance></app-driver-performance>\n    }\n\n    @if (pitVisible) {\n      <app-pit></app-pit>\n    }\n\n    @if (stintVisible) {\n      <app-stint></app-stint>\n    }\n\n  </div>\n</div>\n"],"mappings":"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","names":["defaultOptions","format","defaultOptions","defaultOptions","localize","formatLong","format","defaultOptions","_c0","_c1","_c0","_c0","_c0","_c0","_c0","_c0","_c1"],"x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29]}